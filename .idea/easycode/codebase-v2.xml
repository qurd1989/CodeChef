<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="com.obiscr.chatgpt.settings.EasyCodeState">
    <option name="projectFiles" value="$PROJECT_DIR$/src/begginerLevel/AirConditionerTemperature.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/AkashAndMissingClass.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/AllUniqueCharacters.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/AlternateAdditions.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/AOrB.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/AreaOrPerimeter.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ASaveWaterSaveLife.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/AttackOnKindgom.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/AvoidConatc.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/AvoidSquaresPlease.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/BackToCampus.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/BadmintonServes.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/BathInWinters.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/BellsOfPligrimage.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/BestOfTwo.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/BetterDeal.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/BinaryBattles.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/BlackCellsInChessBoard.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/BlackJack.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/BodyMassIndex.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/BuildingRace.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/BusSeatNumbering.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/BuyLamps.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/BuyTenPackets.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/BuyTwoGetOneFree.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/BytelandianGoldCoins.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/CandyDistribution.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/CanWeEatIt.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/CarAndBus.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/CarCoice.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/CarRange.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/CarsAndBikes.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChefAndBattery.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChefAndBirdFarm.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChefAndCandies.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChefAndContest.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChefAndHAirSalon.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChefAndHappyString.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChefAndHisApps.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChefAndHisFruitSalad.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChefAndInteractiveContest.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChefAndNextGen.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChefAndOperators.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChefAndPairingSlippers.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChefAndPriceControl.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChefAndProfits.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChefAndRaces.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChefAndRemissness.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChefAndSnackDown.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChefAndStocks.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChefAndVacationTransportation.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChefAndWaterBottles.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChefDrinksTea.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChefEren.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/CheflandGames.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/CheflandVisa.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChefOnIsland.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChefOnVacation.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChessBoardDistance.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChessFormat.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChessRatings.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ChnageRowAndColumnBoth.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/CircularTrack.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/Codechef.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/Coldplay.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ComplementaryStrandInDNA.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/CompleteTheCredits.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/CompressTheVideo.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ConstructN.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/CostOfGroceries.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/CountingPrettyNumbers.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/CounttheACs.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/CountTheHolidays.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/CountTheNoteBooks.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/CredCoins.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/CupFinals.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/CyclicQuadrilateral.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/DecrementOrIncrement.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/DegreeOfPolynomial.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/DetermineTheWinner.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/DevendraAndWaterSprots.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/DiiferentConsecutiveCharacters.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/DiscusThrow.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/DistinctColors.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/DNAStorage.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/DrunkAlcoholic.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/EconomicsClass.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ElectionsInChefland.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/EmotionalProximity.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/EndlessAppetizers.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/EqualIntegers.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/EqualizingNumbers.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/Existence.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ExpenseList.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ExpertSetter.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/Factorial.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/FarFromOrigin.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/FarmerAndHisPlot.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/FarmersLeague.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/FillCandies.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/FindAandB.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/FindingShoes.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/FindingSquareRoots.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/FindTheDirection.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/FirstAndLast.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/FlipTheCards.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/FourHundredMRace.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/GCDandLCM.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/Genes.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/GetLowestFree.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/GoldMining.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/GoodProgram.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/GoodQualityBulbs.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/GoodWeather.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/GradeltheSteel.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/GrossSalary.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/GroupAssignment.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/GuessTheBottomFace.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/Hackerman.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/HardestProblemBet.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/HelpingChef.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/HighAccuracy.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/HighestDivisor.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/HiidenNumbers.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/HowManyDigitsDoIHave.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ICanUseBothHands.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/IDOfShip.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ImportantPagesOnCodeChef.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/Indivisible.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/InsideTheStadium.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/IntegerThatSumToTheSameValue.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/IsItAVowelOrConsonant.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/IsTheScoreConsistent.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ItsMyServe.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/JanmanshAndGames.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/JanmanshAtFruitMarket.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/JengaNight.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/LaLiga.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/LargestAndSecondLargest.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/LazyChef.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/LuckyNumbers.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/MakeAAndBEqual.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/MakeAP.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/Marathon.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/MArbles.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/MarioAndBrokenString.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/MarioAndBullet.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/MarioTrtansformation.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/MaximiseTheTastiness.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/MaximumProduction.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/MeltGold.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/MileageMatters.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/MinimumNumberOfCoins.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/MinimumNumberOfOnes.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/MinimumPizzas.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/MiniumCarsRequired.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/MiniumNumberOfFlips.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/Monoply.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/MutatedMinions.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/Nameless.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/NearestCourt.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/NearestExist.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/NegativeProduct.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/NonNegativeNumber.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/NonNegativeProdutc.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/nOtIMEtOwAIT.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/OddsAndEvens.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/OlympicsRanking.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/OnlineOrOffline.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/PackingBooks.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/PaperCutting.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/PassingMarks.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/PassingMarks1.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/PassOrFail.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/PeacefulParty.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/PenaltyShoes.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/PoliceAndThief.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/PossibleVictory.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/PresentsForCheffina.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/PrimalityTest.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/Problem.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ProblemsInYourToDoList.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/QualifyTheRound.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/RanklistPages.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/RCBandPlayoffs.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ReachFast.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/REarrangeingDigitsToGetAMultipleOfFive.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/RecentContestProblems.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/Relativity.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ReturnTheChange.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ReverseTheNumber.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/Runningcomparsion.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/SaleSeason.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/Sample.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/SastaSharkTank.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/Scorehigh.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/SecondLargest.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/SecretRecipe.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/SelfDefenceTraining.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ShoeFit.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/SingelUSeAttack.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/SmallestNumberOfNotes.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/SmallFactorial.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/SmallFactorials.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/Solubility.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/SpeedLimitTest.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/SugarcaneJuiceBusiness.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/SummerHit.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/SumOrDifference.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/SumsInATraingle.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/Tekken.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/TestAverages.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/TestScore.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/TheBlockGame.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/TheCoolerDilemma.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/TheLastLevels.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/TheLeadGame.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/TheOldSaintAndThreeQuestions.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ThePreparations.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/TheRatingDilemma.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/TheThreeTopics.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/TooManyFloors.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/TooManyItems.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/TotalExpenses.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/TwoRanges.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/TwoRooks.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/TwoVSTen.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/UtkarshAndPacementTests.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ValentineIsComing.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ValidPair.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/ValidTriangle.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/WatchingMoviesAtTwoX.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/WaterMixing.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/Weights.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/WhichDivision.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/WhichFuelIsCheaper.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/WhichMaxture.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/Wordle.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/WorkSmarterNotHarder.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/WorldChessChampionship.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/begginerLevel/XJumps.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/DSAPreparetion1/ColorTheCube.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/DSAPreparetion1/LuckyNumber.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/DSAPreparetion1/NumberOfRectangles.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/DSAPreparetion1/PixelDamage.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/DSAPreparetion1/TaxiCost.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/DSAPreparetion1/ThreeNumberExpression.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/prepareDSAInterviews/basicProgrammingOne/FindInteger.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/prepareDSAInterviews/basicProgrammingOne/NumberOfRectangles.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/prepareDSAInterviews/ReverseTheLinkedList.java;C:/Users/abdiy/IdeaProjects/CodeChef/src/Main.java" />
    <option name="forceFullIndex" value="false" />
    <option name="fileSummaryMaps" value="{&quot;C:/Users/abdiy/IdeaProjects/CodeChef&quot;:&quot;{\&quot;/src/begginerDSA/CreateAReplicaString.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes a string as input, creates two new strings by appending and prepending the characters of the input string, and then prints the resulting strings.\\n\\nThe program starts by taking the number of test cases as input using a `Scanner` object. Then, for each test case, it reads a string, creates two new strings (`a` and `b`) by iterating through the input string, and prints the resulting strings.\&quot;,\&quot;/src/begginerLevel/WatchingMoviesAtTwoX.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that calculates the number of minutes a person can watch a movie at 2x speed, given the total length of the movie in minutes and the desired length of the movie in minutes.\\n\\nThe program takes two integer inputs: `x` (the total length of the movie in minutes) and `y` (the desired length of the movie in minutes). It then calculates the number of minutes the person can watch the movie at 2x speed, which is `x - (y/2)`, and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/DistinctCodes.java\&quot;:\&quot;This file contains a single class `DistinctCodes` that solves a problem related to finding the number of distinct substrings of length 2 in a given string.\\n\\n`DistinctCodes`: A class that solves the problem of finding the number of distinct substrings of length 2 in a given string.\\n\\n`main`: The main function that takes input, processes it, and prints the output.\\n\\n`stringConcatenation`: A function that concatenates two strings represented as `BigInteger` objects.\\n\\n`stringConcatenation1`: A function that concatenates two strings represented as strings, using a custom implementation.\&quot;,\&quot;/src/begginerLvevelSecondHalf/TheProductMystery.java\&quot;:\&quot;This file contains a single class `TheProductMystery` that solves a problem related to finding the minimum value of `a` given `b` and `c`.\\n\\n`TheProductMystery`: This class solves the problem of finding the minimum value of `a` given `b` and `c`.\\n\\n`main(String[] args)`: This function reads input, calculates the minimum value of `a` using the `gcd()` and `minA()` functions, and prints the result.\\n\\n`gcd(long b, long c)`: This function calculates the greatest common divisor of `b` and `c` using the Euclidean algorithm.\\n\\n`minA(int b, int c)`: This function calculates the minimum value of `a` given `b` and `c` by repeatedly subtracting the remainder of `b` divided by `c` from `c` until the remainder is 0.\&quot;,\&quot;/src/begginerLevel/CarRange.java\&quot;:\&quot;This file contains a single class `CarRange` and a single function `main()`.\\n\\n`CarRange`: This class contains the main logic for the program.\\n\\n`main()`: This function is the entry point of the program, which takes user input and performs some calculations.\\n\\nThe program appears to be a beginner-level program that takes three integer inputs (`p`, `m`, and `v`) and performs some calculations on them, but the specific purpose of the program is not clear from the provided code.\&quot;,\&quot;/src/begginerLevel/TwoVSTen.java\&quot;:\&quot;This file contains a single class `TwoVSTen` and a single function `main()`.\\n\\n`TwoVSTen`: This class contains the main logic for the program.\\n\\n`main()`: This function is the entry point of the program, which takes user input, processes it, and prints the output.\\n\\nThe program is designed to solve a problem where the user inputs a number `n`, and the program determines whether `n` is divisible by 10, divisible by 5, or neither. The output is 0 if `n` is divisible by 10, 1 if `n` is divisible by 5, and -1 if `n` is neither divisible by 10 nor 5.\&quot;,\&quot;/src/begginerLevel/BuyTenPackets.java\&quot;:\&quot;This file contains a single class `BuyTenPackets` that solves a problem related to buying packets of a certain size at the minimum cost.\\n\\n`BuyTenPackets`: This class solves the problem of buying 10 packets at the minimum cost, given the cost of 2-packet and 4-packet options.\\n\\n`main`: This function takes input from the user, calculates the minimum cost of buying 10 packets, and prints the result.\&quot;,\&quot;/src/begginerLevel/CountTheNoteBooks.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer input `t` representing the number of test cases, and for each test case, it takes an integer input `n` representing the number of notebooks. The program then calculates the total cost of the notebooks, assuming each notebook costs 100 units, and prints the result.\&quot;,\&quot;/src/begginerLevel/MarioAndBrokenString.java\&quot;:\&quot;This file contains a single class `MarioAndBrokenString` that solves a problem related to checking if a given string can be divided into two equal halves.\\n\\n`MarioAndBrokenString`: This class checks if a given string can be divided into two equal halves and prints \\\&quot;Yes\\\&quot; if they are equal, and \\\&quot;No\\\&quot; otherwise.\\n\\n`main`: This function is the entry point of the program, which takes input from the user, processes the input, and prints the result.\&quot;,\&quot;/src/begginerLevel/ChessMatch.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to chess matches.\\n\\nThe program takes input for the number of test cases, the number of squares on the chessboard, and the number of squares occupied by the two players. It then calculates and prints the number of unoccupied squares on the chessboard.\&quot;,\&quot;/src/begginerLevel/BusSeatNumbering.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes input from the user, representing the seat number of a bus, and outputs the type of seat (Lower Double, Lower Single, Upper Double, or Upper Single) based on the given seat number.\\n\\nThe program uses a `Scanner` object to read input from the user and a `while` loop to process multiple test cases. The logic for determining the seat type is implemented using a series of `if-else` statements.\&quot;,\&quot;/src/begginerLevel/CountingPrettyNumbers.java\&quot;:\&quot;This file contains a single class `CountingPrettyNumbers` that has a single function `main()`. The purpose of this program is to count the number of \\\&quot;pretty numbers\\\&quot; within a given range, where a \\\&quot;pretty number\\\&quot; is defined as a number whose last digit is either 2, 3, or 9.\\n\\n`CountingPrettyNumbers`: A class that counts the number of \\\&quot;pretty numbers\\\&quot; within a given range.\\n\\n`main()`: The main function that takes input, processes the range, and prints the count of \\\&quot;pretty numbers\\\&quot; within that range.\&quot;,\&quot;/src/begginerLevel/ChefAndHAirSalon.java\&quot;:\&quot;This file contains a single class `ChefAndHAirSalon` and a single function `main()`.\\n\\n`ChefAndHAirSalon`: This class contains the main logic for solving the \\\&quot;Chef and Hair Salon\\\&quot; problem.\\n\\n`main()`: This function is the entry point of the program, which takes input, processes it, and prints the output.\\n\\nThe program solves the \\\&quot;Chef and Hair Salon\\\&quot; problem, where the input consists of the number of customers and the number of chairs in the salon. If the number of customers is greater than or equal to 0, the program prints 0, otherwise it prints the product of the number of customers and the number of chairs.\&quot;,\&quot;/src/begginerLvevelSecondHalf/DevuAndArray.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes an array of integers as input, finds the minimum and maximum values in the array, and then checks if each of the given `q` numbers is present in the array.\\n\\nThe program performs the following tasks:\\n\\n1. Reads the size of the array `n` and the number of queries `q` from the user.\\n2. Reads the `n` integers that make up the array.\\n3. Finds the minimum and maximum values in the array.\\n4. Checks for each of the `q` numbers if it is present in the array, and prints \\\&quot;Yes\\\&quot; if it is, and \\\&quot;No\\\&quot; if it is not.\&quot;,\&quot;/src/contest/TruthTellerAndLiars.java\&quot;:\&quot;This file contains a single class `TruthTellerAndLiars` that solves a problem related to truth tellers and liars.\\n\\n`TruthTellerAndLiars`: This class solves a problem where there are `n` people, and `m` of them are truth tellers, and the task is to find the minimum number of questions that need to be asked to identify all the truth tellers.\\n\\n`main`: This function is the entry point of the program. It reads the input, processes it, and prints the output.\&quot;,\&quot;/src/begginerLevel/SummerHit.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to summer hits. The program takes input from the user, calculates the number of type A and type B summer hits, and prints the total number of summer hits.\\n\\nThe program does the following:\\n\\n1. Reads the number of test cases from the user.\\n2. For each test case, it reads the values of `xa`, `xb`, `xA`, and `xB`.\\n3. Calculates the number of type A and type B summer hits by dividing `xA` by `xa` and `xB` by `xb`, respectively.\\n4. Prints the sum of the number of type A and type B summer hits.\&quot;,\&quot;/src/begginerLevel/ChefAndVacationTransportation.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Chef and Vacation Transportation\\\&quot; problem from the Beginner Level category on a coding platform. The program takes input for the cost of a plane ticket, the cost of a bus ticket, and the cost of a train ticket, and then determines the most cost-effective mode of transportation based on the given constraints.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefDiet.java\&quot;:\&quot;This file contains a single class `ChefDiet` and one `main()` function.\\n\\n`ChefDiet`: This class contains the main logic to solve the Chef Diet problem.\\n\\n`main()`: The main function takes input, processes it, and outputs the result for the Chef Diet problem.\\n\\nThe Chef Diet problem involves determining whether a chef can consume a given set of dishes within a specified calorie limit. The program reads the input, calculates the cumulative calories consumed, and outputs \\\&quot;Yes\\\&quot; if the chef can consume all the dishes within the calorie limit, or \\\&quot;NO\\\&quot; followed by the index of the first dish that exceeds the limit.\&quot;,\&quot;/src/begginerLevel/Sample.java\&quot;:\&quot;This file contains a single class `Sample` with several functions:\\n\\n`Sample`: This class contains various utility functions for solving programming problems.\\n\\n`main`: The main function that takes input, calls the appropriate utility function, and prints the result.\\n\\n`solve`: This function takes an array of integers and returns the sum of the largest and second-largest elements.\\n\\n`solve1`: This function takes two strings and returns a new string where each character is either \\u0027G\\u0027 or \\u0027B\\u0027 depending on whether the corresponding characters in the input strings are the same or different.\\n\\n`solve4`: This function takes a string and returns an array of integers, where each integer represents the corresponding digit in the input string.\\n\\n`solve5`: This function takes a string and returns a boolean indicating whether the number represented by the string is divisible by 4.\\n\\n`solve6`: This function takes a string and returns a boolean indicating whether the number represented by the string is divisible by 6.\&quot;,\&quot;/src/begginerLvevelSecondHalf/AirLineRestrictions.java\&quot;:\&quot;This file contains a single class `AirLineRestrictions` that solves a problem related to airline baggage restrictions.\\n\\n`AirLineRestrictions`: This class checks if the weights of three items can be accommodated by the airline\\u0027s weight restrictions.\\n\\n`main`: This function takes input from the user, processes the data, and prints the result based on the given conditions.\&quot;,\&quot;/src/begginerLevel/PackingBooks.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to packing books on shelves. The program takes input for the number of shelves, the number of books each shelf can hold, and the maximum number of books that can be packed on each shelf. It then calculates the minimum number of shelves required to pack all the books and prints the result.\&quot;,\&quot;/src/begginerLevel/VisheshAndHisPopcornCombo.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to Vishesh and his popcorn combo. The program takes input for the number of test cases and the sizes of the three popcorn combos, and then prints the maximum size of the three combos.\&quot;,\&quot;/src/begginerLevel/JanmanshAndGames.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes input from the user, representing the start and total number of games, and then determines whether the winner is \\\&quot;janmansh\\\&quot; or \\\&quot;jay\\\&quot; based on the sum of the start and total games.\&quot;,\&quot;/src/begginerLevel/Genes.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes two characters as input, representing the colors of two genes, and outputs the resulting color based on the following rules:\\n\\n- If either of the input characters is \\u0027R\\u0027, the output is \\u0027R\\u0027.\\n- If neither input character is \\u0027R\\u0027 and either of them is \\u0027B\\u0027, the output is \\u0027B\\u0027.\\n- If neither input character is \\u0027R\\u0027 or \\u0027B\\u0027, the output is \\u0027G\\u0027.\&quot;,\&quot;/src/arrays/Workers.java\&quot;:\&quot;This file contains a single class `Workers` and several functions.\\n\\n`Workers`: This class contains the main method and the `getResult` method, which solves a problem related to assigning workers to tasks.\\n\\n`getResult`: This function calculates the minimum cost to assign workers to tasks based on their specialization and cost.\\n\\n`reverseString`: This function recursively reverses a given string.\\n\\n`reverse`: This function reverses the digits of a given integer.\\n\\n`isPalindrome`: This function checks if a given integer or string is a palindrome.\\n\\n`isPalindrome1`: This function recursively checks if a given string is a palindrome.\\n\\n`generateFibonacciNumbers`: This function generates the first `n` Fibonacci numbers and returns them as an array.\\n\\n`fib`: This is a helper function used by `generateFibonacciNumbers` to recursively calculate the Fibonacci numbers.\&quot;,\&quot;/src/begginerLevel/ChessRatings.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to chess ratings. The program takes input of the current and target ratings, and then calculates the minimum number of games a player needs to play to reach the target rating, assuming they win or lose 8 rating points per game.\&quot;,\&quot;/src/begginerLevel/AkashAndMissingClass.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that solves the \\\&quot;Akash and Missing Class\\\&quot; problem. The program takes an integer `t` as input, which represents the number of test cases. For each test case, it takes an integer `n` as input, which represents the number of days Akash has missed. The program then calculates the minimum number of classes Akash needs to attend to make up for the missed days and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/BalancedReversal.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes user input, counts the number of 1s and 0s in a binary string, and then prints the string with all the 0s followed by all the 1s.\\n\\nThe file is a Java program that solves the \\\&quot;Balanced Reversal\\\&quot; problem, where the task is to rearrange the digits in a binary string such that all the 0s come before all the 1s.\&quot;,\&quot;/src/begginerLvevelSecondHalf/BearAndSegment01.java\&quot;:\&quot;This file contains a single class `BearAndSegment01` and a single function `hasSingleSegmentOfOnes`.\\n\\n`BearAndSegment01`: This class contains the main entry point of the program, which reads input from the user and calls the `hasSingleSegmentOfOnes` function to determine if the input string contains a single segment of \\u00271\\u0027 characters.\\n\\n`hasSingleSegmentOfOnes`: This function takes a string as input and checks if it contains a single continuous segment of \\u00271\\u0027 characters, or if it contains any \\u00270\\u0027 characters after the first \\u00271\\u0027 character.\&quot;,\&quot;/src/begginerLvevelSecondHalf/LegsOnAFarm.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Legs on a Farm\\\&quot; problem. The program takes an input of the total number of legs on a farm and calculates the minimum number of animals required to have that many legs. The program uses a simple logic to determine the minimum number of animals and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/AdaSchool.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that checks whether the product of two integers, `n` and `m`, is even or not. If the product is even or if either `n` or `m` is even, the program prints \\\&quot;Yes\\\&quot;, otherwise it prints \\\&quot;No\\\&quot;. The program takes multiple test cases as input and performs the above check for each test case.\&quot;,\&quot;/src/begginerLevel/DNAStorage.java\&quot;:\&quot;This file contains a single class `DNAStorage` and two functions `main()` and `solve()`.\\n\\n`DNAStorage`: This class is responsible for encoding and decoding DNA sequences.\\n\\n`main()`: This function is the entry point of the program, which reads input, calls the `solve()` function to encode the DNA sequence, and prints the result.\\n\\n`solve()`: This function takes a pair of DNA nucleotides (represented as a string) and returns the corresponding encoded character.\\n\\nThe program reads a series of DNA sequences from the user, encodes them using the `solve()` function, and prints the resulting encoded strings.\&quot;,\&quot;/src/contest/RangeMinimze.java\&quot;:\&quot;This file contains a single class `RangeMinimze` and several functions within it. Here\\u0027s a summary of each:\\n\\n`RangeMinimze`: This class creates a Swing-based GUI application that displays a loading animation.\\n\\n`RangeMinimze()`: The constructor of the `RangeMinimze` class, which sets up the GUI and starts the loading animation.\\n\\n`drawLoadingAnimation(Graphics g)`: This function draws the loading animation on the GUI panel.\\n\\n`drawArrow(Graphics g, int x, int y, int size)`: This function draws an arrow shape on the GUI panel.\\n\\n`main(String[] args)`: This function is the entry point of the application, which creates an instance of the `RangeMinimze` class.\\n\\nThe file also contains commented-out code that appears to be related to a problem involving finding the minimum range in an array, but this functionality is not implemented in the current version of the code.\&quot;,\&quot;/src/DSAPreparetion1/NumberOfRectangles.java\&quot;:\&quot;This file contains a single class `NumberOfRectangles` that solves a problem related to the number of rectangles that can be formed from a given number.\\n\\n`NumberOfRectangles`: This class contains a main method that takes input, calls the `solve` function, and prints the output.\\n\\n`solve`: This function takes an integer `n` as input, converts it to binary, and returns the binary representation as an array.\\n\\nThe file does not contain any other classes or functions. It is a Java program that takes an integer input, converts it to binary, and prints the binary representation in reverse order.\&quot;,\&quot;/src/begginerLevel/MinimumNumberOfOnes.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Minimum Number of Ones\\\&quot; problem. The program takes an integer `t` as input, which represents the number of test cases. For each test case, it takes an integer `n` as input, and then generates a string `s` of length `n` where every even-indexed character is \\u00271\\u0027 and every odd-indexed character is \\u00270\\u0027. The program then calculates the minimum number of \\u00271\\u0027 characters required to make the string and prints the result.\&quot;,\&quot;/src/begginerLevel/ReachFast.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Reach Fast\\\&quot; problem. The program takes input of the number of test cases, and for each test case, it takes the values of `a`, `b`, and `c`. It then calculates the absolute difference between `a` and `b`, and determines the minimum number of steps required to reach from `a` to `b` using the step size `c`. The program then prints the result for each test case.\&quot;,\&quot;/src/begginerDSA/ReviewProblem2.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that checks if a given string has any consecutive identical characters. The program takes input from the user, iterates through the characters of the string, and prints \\\&quot;Yes\\\&quot; if there are no consecutive identical characters, and \\\&quot;No\\\&quot; otherwise.\&quot;,\&quot;/src/begginerLevel/ReturnTheChange.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that calculates the change to be returned to a customer based on the amount paid. The program takes input from the user, calculates the change, and then prints the result based on certain conditions.\\n\\nThe program first takes the number of test cases as input, and then for each test case, it calculates the change to be returned by subtracting the amount paid from 100. Depending on the remainder, the program prints the change to be returned, either as is or rounded up to the nearest multiple of 10.\&quot;,\&quot;/src/begginerLvevelSecondHalf/CoinClip.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes input from the user and performs some operations on the input data. The program appears to be a solution to a problem related to coins and clipping, but without more context, it\\u0027s difficult to provide a more detailed summary.\&quot;,\&quot;/src/begginerLvevelSecondHalf/DiagonalMovement.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it contains a single `main` method that takes user input for the values of `x` and `y`, and then determines whether the sum of `x` and `y` is even or odd, and prints the corresponding output.\\n\\nThe file is named `DiagonalMovement` and it appears to be a solution to a programming problem that involves determining whether a diagonal movement is possible based on the given coordinates.\&quot;,\&quot;/src/begginerLvevelSecondHalf/DigitsSumParities.java\&quot;:\&quot;This file contains a single class `DigitsSumParities` and two functions `main` and `solve`.\\n\\n`DigitsSumParities`: This class contains the main logic for the program.\\n\\n`main`: This function is the entry point of the program, which takes input from the user, calls the `solve` function, and prints the result.\\n\\n`solve`: This function calculates the sum of the digits of a given number.\\n\\nThe program takes an integer input `n` from the user, and then finds the next integer `x` such that the sum of the digits of `n` and `x` are the same. The program then prints the value of `x`.\&quot;,\&quot;/src/begginerLvevelSecondHalf/JoinStates.java\&quot;:\&quot;This file contains a single class `JoinStates` that solves a problem related to joining states. The program takes input for the number of test cases, the number of states, and the population of each state, and then calculates the minimum number of states that need to be joined to reach a target population.\\n\\n`JoinStates`: A class that solves the problem of joining states to reach a target population.\\n\\n`main`: The main function that reads the input, performs the calculations, and prints the output.\&quot;,\&quot;/src/string/InvertAndEqualize.java\&quot;:\&quot;This file contains a single class `InvertAndEqualize` and two functions `countOperations` and `main`.\\n\\n`InvertAndEqualize`: This class contains the logic to solve the \\\&quot;Invert and Equalize\\\&quot; problem.\\n\\n`countOperations`: This function takes a binary string `S` as input and returns the minimum number of operations required to make all characters in the string equal.\\n\\n`main`: This function is the entry point of the program. It reads the input, calls the `countOperations` function, and prints the result for each test case.\&quot;,\&quot;/src/begginerLevel/EconomicsClass.java\&quot;:\&quot;This file contains a single class `EconomicsClass` and a single function `main()`.\\n\\n`EconomicsClass`: This class contains the main logic for solving a problem related to economics.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user, processes it, and prints the output.\\n\\nThe program solves a problem where it takes in the number of students `a`, and two arrays `s` and `d` representing the subjects and desired subjects for each student. The program then counts the number of students who have the same subject as their desired subject and prints the result.\&quot;,\&quot;/src/begginerLevel/TestAverages.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes input from the user, representing the scores of three subjects, and determines whether the student has passed or failed based on the condition that the sum of any two subjects must be at least 35.\\n\\nThe program uses a `Scanner` object to read the input from the user, and then checks the condition for each set of three scores. If the condition is not met, it prints \\\&quot;FAIL\\\&quot;, otherwise, it prints \\\&quot;PASS\\\&quot;.\&quot;,\&quot;/src/begginerLvevelSecondHalf/VaccineDistribution.java\&quot;:\&quot;This file contains a single class `VaccineDistribution` and three functions: `main()`, `removeDuplicates()`, and `longestPalindrome()`.\\n\\n`VaccineDistribution`: This class contains the main logic for distributing vaccines to people based on their age and the number of days available.\\n\\n`main()`: This function reads input from the user, calculates the number of days required to vaccinate both risky and non-risky people, and prints the total number of days.\\n\\n`removeDuplicates()`: This function takes an array of integers and removes any duplicate elements, returning the new length of the array.\\n\\n`longestPalindrome()`: This function takes a string and returns the length of the longest palindrome that can be formed using the characters in the string.\&quot;,\&quot;/src/begginerLvevelSecondHalf/CardRemoval.java\&quot;:\&quot;This file contains a single class `CardRemoval` and a single function `main()`.\\n\\n`CardRemoval`: This class contains a solution to the problem of removing cards from a string such that the remaining string has an even number of each character.\\n\\n`main()`: This function reads input from the user, processes the input, and prints the result of whether it is possible to remove cards from the string such that the remaining string has an even number of each character.\\n\\nThe file as a whole solves the problem of removing cards from a string such that the remaining string has an even number of each character.\&quot;,\&quot;/src/begginerLvevelSecondHalf/Medel.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes user input, finds the minimum and maximum values in the input array, and prints them in the correct order based on their indices.\\n\\nThe file is a Java program that solves a problem where the user inputs an array of integers, and the program finds the minimum and maximum values in the array and prints them in the correct order based on their indices.\&quot;,\&quot;/src/begginerLevel/FarFromOrigin.java\&quot;:\&quot;This file contains a single class `FarFromOrigin` that solves a problem related to the distance of two points from the origin.\\n\\n`FarFromOrigin`: This class takes input of two sets of coordinates and determines which set is farther from the origin.\\n\\n`main`: This function is the entry point of the program. It reads input, calculates the distances of the two sets of coordinates from the origin, and prints the result.\&quot;,\&quot;/src/begginerLevel/MarioAndBullet.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to Mario and a bullet. The program takes input for the speed of the bullet, the distance of the Goomba from Mario, and the minimum time required to reach the Goomba. It then calculates the time it takes for the bullet to reach the Goomba and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/TruthAndDare.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: The main function that takes user input, processes the data, and prints the result.\\n\\nThe file is a Java program that solves the \\\&quot;Truth and Dare\\\&quot; problem. It takes input for the number of test cases, the truth and dare values for each test case, and the truth and dare values for the current player. It then checks if the current player\\u0027s truth and dare values are a subset of the given truth and dare values, and prints \\\&quot;yes\\\&quot; if they are, and \\\&quot;no\\\&quot; otherwise.\&quot;,\&quot;/src/begginerLvevelSecondHalf/PingPajaPong.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Ping Paja Pong\\\&quot; problem from the Beginner Level Second Half category. The program takes input for the number of test cases, and for each test case, it calculates the total score until now and determines whether Chef or Pojo wins the game based on the total score and the value of `k`.\&quot;,\&quot;/src/begginerLevel/PenaltyShoes.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: The main function that reads the number of test cases, processes the penalty shootout outcomes, and determines the winner or if it\\u0027s a draw.\\n\\n`determineWinner`: A helper function that compares the scores of the two teams and determines the winner or if it\\u0027s a draw.\\n\\nThe file is a Java program that simulates a penalty shootout between two teams. It reads the outcomes of the penalty kicks and determines the winner or if it\\u0027s a draw.\&quot;,\&quot;/src/begginerLevel/Monoply.java\&quot;:\&quot;This file contains a single class named `Monoply` and a single function named `main()`.\\n\\n`Monoply`: This class contains the main logic for solving a problem related to Monopoly game.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user, performs the necessary calculations, and prints the output.\\n\\nThe program solves a problem where it checks if the sum of any three numbers out of four given numbers is less than the fourth number. If such a combination exists, it prints \\\&quot;Yes\\\&quot;, otherwise it prints \\\&quot;No\\\&quot;.\&quot;,\&quot;/src/begginerLevel/HighAccuracy.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to high accuracy. The program takes an integer input `t` and then for each of the `t` cases, it takes an integer input `x` and calculates the remainder of `x` when divided by 3. Based on the remainder, it prints either 0 or the difference between 3 and the remainder.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndCardGame.java\&quot;:\&quot;This file contains a single class `ChefAndCardGame` and two functions `main` and `sumOfDigits`.\\n\\n`ChefAndCardGame`: This class implements a solution to the \\\&quot;Chef and Card Game\\\&quot; problem, where two players (Chef and Morty) have piles of cards, and the player with the higher sum of digits in their cards wins.\\n\\n`main`: This function is the entry point of the program, which reads input, processes the card piles, and outputs the winner and their score.\\n\\n`sumOfDigits`: This function calculates the sum of digits of a given integer.\&quot;,\&quot;/src/begginerLvevelSecondHalf/MaximumRemaining.java\&quot;:\&quot;This file contains a single class `MaximumRemaining` and two functions `main()` and `secondLargestElement()`.\\n\\n`MaximumRemaining`: This class contains the main logic to find the second largest element in an array.\\n\\n`main()`: This function takes user input, creates an array, sorts it, and then calls the `secondLargestElement()` function to find the second largest element.\\n\\n`secondLargestElement()`: This function takes an array as input and returns the second largest element in the array.\&quot;,\&quot;/src/begginerLevel/AllUniqueCharacters.java\&quot;:\&quot;This file contains a single class `AllUniqueCharacters` that provides two methods to check if a given string has all unique characters.\\n\\n`AllUniqueCharacters`: A class that provides methods to check if a given string has all unique characters.\\n\\n`solveWithHashset`: A method that uses a HashSet to check if a given string has all unique characters.\\n\\n`solve`: A method that sorts the characters in the string and checks if any adjacent characters are the same to determine if the string has all unique characters.\\n\\nThe main purpose of this file is to demonstrate two different approaches to solving the problem of checking if a string has all unique characters.\&quot;,\&quot;/src/begginerLevel/ChefAndWaterBottles.java\&quot;:\&quot;This file contains a single class `ChefAndWaterBottles` that solves a problem related to filling water bottles from a water tank.\\n\\n`ChefAndWaterBottles`: This class solves a problem where a chef has a certain number of empty bottles, each with a specific capacity, and a water tank with a certain amount of water, and the goal is to determine the maximum number of bottles that can be filled.\\n\\n`main`: This function is the entry point of the program. It reads input from the user, processes the data, and prints the output based on the given constraints.\&quot;,\&quot;/src/begginerLvevelSecondHalf/HungryChef.java\&quot;:\&quot;This file contains a single class `HungryChef` that solves a problem related to a chef\\u0027s budget and the cost of normal and premium burgers.\\n\\n`HungryChef`: This class determines the maximum number of premium burgers a chef can buy given a budget, the cost of normal and premium burgers, and the number of burgers the chef needs to buy.\\n\\nThe `main()` function: This function takes input from the user, calculates the minimum cost of buying the required number of normal burgers, and then determines the maximum number of premium burgers the chef can buy within the given budget. It then outputs the number of normal and premium burgers the chef should buy.\&quot;,\&quot;/src/begginerLvevelSecondHalf/Sale.java\&quot;:\&quot;This file contains a single class `Sale` and one `main()` function.\\n\\n`Sale`: This class contains the main logic for solving the problem of finding the maximum sales on a given set of sales days.\\n\\n`main()`: The `main()` function is the entry point of the program. It reads the input, processes the sales data, and prints the maximum sales.\\n\\nThe program solves the problem of finding the maximum sales on a given set of sales days. It takes input for the number of sales days and the sales values for each day. It then calculates the maximum sales by iteratively updating the sum of sales and the maximum sales value.\&quot;,\&quot;/src/begginerLevel/PassOrFail.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that determines whether a student passes or fails an exam based on the number of questions, the number of correct answers, and the minimum passing score.\\n\\nThe program takes input from the user, including the number of questions, the number of correct answers, and the minimum passing score. It then calculates the total marks for the correct and incorrect answers, and compares the total marks to the minimum passing score to determine whether the student passes or fails.\&quot;,\&quot;/src/begginerLevel/RanklistPages.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer input `t` and then for each of the `t` cases, it takes an integer input `x` and calculates the number of pages required to display the ranking list based on the given formula. If `x` is divisible by 25, it prints the result as `x/25`, otherwise, it prints `x/25 + 1`.\&quot;,\&quot;/src/begginerLvevelSecondHalf/AsymmetricSwaps.java\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`main`: This function takes input from the user, sorts the input array, and finds the minimum difference between the maximum and minimum elements in the array.\\n\\nThe file is a Java program that solves the \\\&quot;Asymmetric Swaps\\\&quot; problem, where the goal is to find the minimum difference between the maximum and minimum elements in an array after performing a series of swaps.\&quot;,\&quot;/src/begginerLvevelSecondHalf/DiscrepanciesInTheVotersList.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function reads in a series of integers, identifies the integers that appear more than once, sorts them, and prints the count and the list of duplicates.\\n\\nThe file appears to be a solution to a problem that involves identifying discrepancies in a voter\\u0027s list, where the same voter ID appears more than once.\&quot;,\&quot;/src/begginerLvevelSecondHalf/Rectangle.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that checks whether the XOR of four given integers is zero or not, and prints \\\&quot;YES\\\&quot; if it is, and \\\&quot;NO\\\&quot; otherwise.\\n\\nThe program takes input from the user, where the first line contains the number of test cases, and each subsequent line contains four integers. The program then performs the XOR operation on these four integers and prints the result.\&quot;,\&quot;/src/begginerDSA/PreviewProblem3.java\&quot;:\&quot;This file contains a single class `PreviewProblem3` and two functions `main()` and `gcd()`.\\n\\n`PreviewProblem3`: This class contains the main logic for solving a problem related to finding the greatest common divisor (GCD) of two numbers and calculating the result based on the GCD.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user, calculates the GCD of the input numbers, and prints the result.\\n\\n`gcd()`: This function calculates the greatest common divisor of two numbers using the Euclidean algorithm.\&quot;,\&quot;/src/begginerLevel/GroupAssignment.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer `t` as input, representing the number of test cases, and for each test case, it takes two integers `n` and `x` as input. It then calculates and prints the value of `((2*x)+1)-n`.\&quot;,\&quot;/src/begginerLvevelSecondHalf/OddPairs.java\&quot;:\&quot;This file contains one class and one function:\\n\\n`OddPairs`: This class contains a main method that takes an integer input `t` and then calculates the number of odd pairs for each input `n` and prints the result.\\n\\n`checkPerfectNumber`: This function takes an integer `num` as input and checks if it is a perfect number, returning `true` if it is and `false` otherwise.\\n\\nThe file as a whole appears to be a solution to a programming problem related to finding the number of odd pairs for a given input, and also includes a function to check if a number is a perfect number.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndHisStudents.java\&quot;:\&quot;This file contains a single class `ChefAndHisStudents` and a single function `talkingStudents()`.\\n\\n`ChefAndHisStudents`: This class contains the main method that takes input, calls the `talkingStudents()` function, and prints the output.\\n\\n`talkingStudents()`: This function takes a string `s` as input, which represents the behavior of students in a classroom, and returns the number of pairs of students who are talking to each other.\&quot;,\&quot;/src/begginerLevel/BuyTwoGetOneFree.java\&quot;:\&quot;This file contains a single class `BuyTwoGetOneFree` that solves a problem related to buying items with a \\\&quot;buy two, get one free\\\&quot; promotion.\\n\\n`BuyTwoGetOneFree`: This class implements a solution to the \\\&quot;buy two, get one free\\\&quot; problem, where the goal is to find the minimum difference between the maximum price of the items and the average price of the items.\\n\\n`main`: This function is the entry point of the program. It takes input from the user, calculates the minimum difference between the maximum price and the average price, and prints the result.\&quot;,\&quot;/src/begginerLevel/ImportantPagesOnCodeChef.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes two integer inputs from the user using the `Scanner` class, but does not perform any further operations on those inputs.\&quot;,\&quot;/src/begginerLevel/NegativeProduct.java\&quot;:\&quot;This file contains a single class `NegativeProduct` and a single function `main()`.\\n\\n`NegativeProduct`: This class contains the main logic for determining whether a set of three integers can form a negative product.\\n\\n`main()`: This function takes input from the user, processes the input, and prints the result (either \\\&quot;Yes\\\&quot; or \\\&quot;No\\\&quot;) based on whether the product of the three integers can be negative.\\n\\nThe file as a whole solves the problem of determining whether a set of three integers can form a negative product, and it does this by iterating over multiple test cases and printing the result for each case.\&quot;,\&quot;/src/begginerLvevelSecondHalf/SwappingChefsWay.java\&quot;:\&quot;This file contains a single class `SwappingChefsWay` and two functions `main` and `canBeSwapped`.\\n\\n`SwappingChefsWay`: This class contains the main logic to determine if a given string can be swapped in a specific way to make it sorted.\\n\\n`main`: This function reads input, processes it, and prints the result.\\n\\n`canBeSwapped`: This function checks if two characters can be swapped to make the string sorted.\&quot;,\&quot;/src/begginerLevel/HiidenNumbers.java\&quot;:\&quot;This file contains a single class `HiidenNumbers` that has a single function `main()`. The purpose of this program is to find two numbers `a` and `b` such that their product is equal to the input number `n`. The program takes in multiple test cases, where each test case consists of an input number `n`, and it outputs the two numbers `a` and `b` whose product is `n`.\\n\\n`HiidenNumbers`: A class that finds two numbers whose product is equal to the input number.\\n\\n`main()`: The main function that takes in multiple test cases, finds the two numbers whose product is equal to the input number, and prints the result.\&quot;,\&quot;/src/begginerLevel/PresentsForCheffina.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that solves the \\\&quot;Presents for Cheffina\\\&quot; problem. The program takes an integer `t` as input, which represents the number of test cases, and for each test case, it takes an integer `n` as input. The program then calculates the number of presents that Cheffina can receive by subtracting the number of presents that she has to give away (which is `n/5`) from the total number of presents `n`, and prints the result.\&quot;,\&quot;/src/begginerLevel/CanWeEatIt.java\&quot;:\&quot;This file contains a single class `CanWeEatIt` with no functions. The file appears to be a Java class that is part of a \\\&quot;beginner level\\\&quot; package, but it does not contain any implementation or functionality at the moment.\\n\\n`CanWeEatIt`: A Java class that is part of a \\\&quot;beginner level\\\&quot; package, but it does not contain any implementation or functionality at the moment.\&quot;,\&quot;/src/begginerLevel/ChefOnVacation.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that checks if the sum of two numbers (x and y) is less than or equal to a third number (z). If the sum of x and y is less than or equal to z, it prints \\\&quot;Yes\\\&quot;, otherwise it prints \\\&quot;No\\\&quot;. The program takes multiple test cases as input and performs this check for each test case.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefJumping.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer input from the user and checks whether the number is divisible by 6, 1, or 3. If the number is divisible by any of these, it prints \\\&quot;yes\\\&quot;, otherwise it prints \\\&quot;no\\\&quot;.\&quot;,\&quot;/src/begginerLevel/SingelUSeAttack.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to single-use attacks. The program takes input for the number of test cases, and for each test case, it takes the boss\\u0027s health, the amount of health reduced by the attack, and the amount of health reduced by the single-use attack. It then calculates the number of attacks required to defeat the boss and prints the result.\&quot;,\&quot;/src/begginerLevel/PuppyANdSum.java\&quot;:\&quot;This file contains a single class `PuppyANdSum` and a single function `sumOfSum`.\\n\\n`PuppyANdSum`: This class contains the main entry point of the program, which takes input from the user and calls the `sumOfSum` function to calculate the sum of the series.\\n\\n`sumOfSum`: This function calculates the sum of the series `n + (n*(n+1))/2 + (n*(n+1)*(n+2))/6 + ... + (n*(n+1)*...*(n+d-1))/d!` for the given values of `d` and `n`.\&quot;,\&quot;/src/begginerLvevelSecondHalf/AndPlusOr.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer input `t` and then for each of the `t` inputs, it checks if the input is 0. If the input is 0, it prints -1, otherwise it prints 0 and the input number.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ThatIsMyScore.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes user input, processes it, and outputs the sum of the 8 highest scores for each test case.\\n\\nThe file is a Java program that solves the \\\&quot;That Is My Score\\\&quot; problem. It takes input for the number of test cases and the scores for each player, and then calculates the sum of the 8 highest scores for each test case.\&quot;,\&quot;/src/begginerLevel/ShoeFit.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes input of three integers representing the sizes of three shoes and determines whether all three shoes have the same size or not. If the sizes are not all the same, it prints 1, otherwise it prints 0.\&quot;,\&quot;/src/begginerLevel/HighestDivisor.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer input from the user and finds the largest divisor of that number up to 10. The program then prints the largest divisor.\&quot;,\&quot;/src/begginerDSA/FindTheGcdAndLcmOfTwoIntegers.java\&quot;:\&quot;This file contains a single class `FindTheGcdAndLcmOfTwoIntegers` and two functions `main` and `gcd`.\\n\\n`FindTheGcdAndLcmOfTwoIntegers`: This class is responsible for finding the greatest common divisor (GCD) and the least common multiple (LCM) of two integers.\\n\\n`main`: This function is the entry point of the program, which takes input from the user, calculates the GCD and LCM of the input numbers, and prints the results.\\n\\n`gcd`: This function calculates the greatest common divisor of two integers using the Euclidean algorithm.\&quot;,\&quot;/src/begginerLvevelSecondHalf/MaxBinary.java\&quot;:\&quot;This file contains a single class `MaxBinary` and one function `main()`.\\n\\n`MaxBinary`: This class contains the main logic to solve the problem of finding the maximum binary number by replacing the first \\u00270\\u0027 with \\u00271\\u0027 and adding remaining \\u00270\\u0027s at the end.\\n\\n`main()`: This function takes input from the user, processes the input, and prints the maximum binary number.\\n\\nThe file solves the problem of finding the maximum binary number by replacing the first \\u00270\\u0027 with \\u00271\\u0027 and adding remaining \\u00270\\u0027s at the end. The program takes input from the user, processes the input, and prints the maximum binary number.\&quot;,\&quot;/src/begginerLevel/TheLastLevels.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to the last levels of a game. The program takes input from the user, which includes the number of test cases, the number of levels, the cost of completing a level, and the cost of skipping a level. Based on these inputs, the program calculates the minimum cost to complete the game and prints the result.\&quot;,\&quot;/src/begginerLevel/EndlessAppetizers.java\&quot;:\&quot;This file contains a single class `EndlessAppetizers` that appears to be a solution to a programming problem. The file does not contain any functions, but the `main()` method is the entry point of the program.\\n\\n`EndlessAppetizers`: This class appears to be a solution to a programming problem that involves processing input data and performing some calculations.\&quot;,\&quot;/src/begginerLevel/BombTheBase.java\&quot;:\&quot;This file contains a single class `BombTheBase` and a single function `main()`.\\n\\n`BombTheBase`: This class contains the main logic for the \\\&quot;Bomb the Base\\\&quot; problem.\\n\\n`main()`: This function reads input from the user, processes the input, and prints the output for the \\\&quot;Bomb the Base\\\&quot; problem.\\n\\nThe \\\&quot;Bomb the Base\\\&quot; problem involves finding the index of the rightmost element in an array that is less than a given value `x`. The program takes multiple test cases as input, processes each test case, and prints the output for each test case.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndColoring.java\&quot;:\&quot;This file contains a single class `ChefAndColoring` that solves the \\\&quot;Chef and Coloring\\\&quot; problem from the Beginner Level Second Half category.\\n\\n`ChefAndColoring`: This class solves the \\\&quot;Chef and Coloring\\\&quot; problem, where the goal is to find the minimum number of characters that need to be changed in a given string to make all characters the same.\\n\\n`main`: This function is the entry point of the program. It reads input from the user, processes the input, and prints the minimum number of characters that need to be changed to make all characters the same.\&quot;,\&quot;/src/begginerLevel/CarCoice.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that compares the fuel efficiency of diesel and petrol cars based on the given input values and prints the result.\\n\\nThe program takes the number of test cases as input, and for each test case, it takes the fuel capacity and fuel consumption of a diesel car and a petrol car. It then calculates the fuel efficiency of each car and compares them, printing -1 if the diesel car is more efficient, 1 if the petrol car is more efficient, and 0 if they are equally efficient.\&quot;,\&quot;/src/begginerLvevelSecondHalf/MakeMultiple.java\&quot;:\&quot;This file contains a single class `MakeMultiple` and a single function `main()`.\\n\\n`MakeMultiple`: This class contains the main logic for the program.\\n\\n`main()`: This function takes user input, performs a calculation, and prints the result to the console.\\n\\nThe program reads in a number of test cases, and for each test case, it takes two integers `a` and `b` as input. It then calculates the difference `x` between `b` and `a`, and if `x` is 0 or greater than or equal to `a`, it prints \\\&quot;Yes\\\&quot;, otherwise it prints \\\&quot;No\\\&quot;.\&quot;,\&quot;/src/begginerLevel/MiniumNumberOfFlips.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Minimum Number of Flips\\\&quot; problem. The program takes an integer `n` as input, which represents the number of test cases. For each test case, it takes an integer `a` and an array of `a` integers. The program then calculates the sum of the elements in the array and checks if the sum is even. If the sum is even, it prints the absolute value of the sum divided by 2. If the sum is odd, it prints -1.\&quot;,\&quot;/src/begginerLvevelSecondHalf/GameOfPileVersion1.java\&quot;:\&quot;This file contains a single class `GameOfPileVersion1` that implements a solution to the \\\&quot;Game of Pile\\\&quot; problem. The program takes input from the user, processes the input, and outputs the winner of the game based on certain conditions.\\n\\n`GameOfPileVersion1`: This class implements the solution to the \\\&quot;Game of Pile\\\&quot; problem.\\n\\n`main`: This function is the entry point of the program. It reads input from the user, processes the input, and outputs the winner of the game.\&quot;,\&quot;/src/begginerLvevelSecondHalf/CovidAndTheatreTickets.java\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`main`: This function takes input for the number of test cases, and for each test case, it calculates the maximum number of seats that can be occupied in a theater with `n` rows and `m` seats per row, and prints the result.\\n\\nThe file is a solution to a problem where the task is to find the maximum number of seats that can be occupied in a theater with `n` rows and `m` seats per row, given the COVID-19 restrictions that only every other seat can be occupied.\&quot;,\&quot;/src/prepareDSAInterviews/ReverseTheLinkedList.java\&quot;:\&quot;`Node`: A class that represents a node in a linked list, with a value and a reference to the next node.\\n\\n`ReverseTheLinkedList`: A class that contains a function to find the middle node of a linked list.\\n\\n`solve`: A function that takes a linked list as input and returns the middle node of the linked list.\\n\\nThis file defines a `Node` class to represent a node in a linked list and a `ReverseTheLinkedList` class that contains a `solve` function to find the middle node of a linked list.\&quot;,\&quot;/src/begginerDSA/CreateAListOfOrdValuesOfAString.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes a string input from the user, and then prints the ASCII values of each character in the string.\\n\\nThe program has the following structure:\\n\\n1. The program starts by importing the `Scanner` class from the `java.util` package.\\n2. The `main()` method is the entry point of the program.\\n3. Inside the `main()` method, the program creates a `Scanner` object to read user input.\\n4. The program then takes an integer input `t` from the user, which represents the number of test cases.\\n5. For each test case, the program reads a string `s` from the user.\\n6. The program then iterates through each character in the string `s`, and prints the ASCII value of that character.\&quot;,\&quot;/src/begginerLevel/MaximiseTheTastiness.java\&quot;:\&quot;This file contains a single class `MaximiseTheTastiness` that solves a problem related to maximizing the tastiness of a dish by selecting the maximum values from two sets of ingredients.\\n\\n`MaximiseTheTastiness`: This class contains a `main` function that reads input, calculates the maximum values from two sets of ingredients, and prints the sum of the maximum values.\\n\\n`main`: This function reads the number of test cases, and for each test case, it reads four integers representing the quantities of four ingredients, calculates the maximum values from the two sets of ingredients, and prints the sum of the maximum values.\&quot;,\&quot;/src/begginerLvevelSecondHalf/BuyOneGetOne.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes user input, counts the frequency of each character in the input string, and calculates the number of items that can be bought with the \\\&quot;Buy One Get One\\\&quot; offer.\\n\\nThe file is a Java program that solves the \\\&quot;Buy One Get One\\\&quot; problem. It takes a series of input strings, counts the frequency of each character in the string, and calculates the number of items that can be bought with the \\\&quot;Buy One Get One\\\&quot; offer. The program then prints the result for each input string.\&quot;,\&quot;/src/begginerLvevelSecondHalf/WeaponValue.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes input from the user, compares the characters in two strings, and counts the number of characters that are different between the two strings.\\n\\nThe file is a Java program that solves a problem related to comparing two strings and counting the number of different characters between them. The program takes input from the user, performs the comparison, and outputs the count of different characters.\&quot;,\&quot;/src/begginerLvevelSecondHalf/DiceDeception.java\&quot;:\&quot;This file contains a single class `DiceDeception` and two functions `main` and `maximizeDiceSum`.\\n\\n`DiceDeception`: This class solves the problem of maximizing the sum of dice faces by allowing a certain number of flips.\\n\\n`main`: This function takes input for the number of test cases, the number of dice, the maximum number of flips, and the initial face values of the dice, and then calls the `maximizeDiceSum` function to find the maximum sum.\\n\\n`maximizeDiceSum`: This function takes the number of dice, the maximum number of flips, and the initial face values of the dice, and then calculates the maximum sum that can be achieved by applying the allowed number of flips.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ConvertStringToNumber.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes a string input from the user, converts it to a number, and prints the resulting number. The program uses a loop to iterate through each character in the input string, converting each character to its corresponding numeric value and building the final number.\&quot;,\&quot;/src/begginerLevel/ChefAndCookOff.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes input from the user and determines the developer level based on the number of 1\\u0027s in the input array. The program runs in a loop and outputs the developer level for each input.\&quot;,\&quot;/src/begginerLevel/ChefAndOperators.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes input from the user, compares two integers, and prints the appropriate comparison symbol (less than, greater than, or equal to) based on the comparison.\\n\\nThe program starts by importing the `Scanner` class from the `java.util` package. It then defines a `main` method, which is the entry point of the program. Inside the `main` method, the program creates a `Scanner` object to read input from the user.\\n\\nThe program then reads an integer `t` from the user, which represents the number of test cases. It then enters a loop that runs `t` times. In each iteration of the loop, the program reads two integers `a` and `b` from the user, and compares them. If `a` is less than `b`, it prints `\\u003c`. If `a` is greater than `b`, it prints `\\u003e`. If `a` is equal to `b`, it prints `\\u003d`.\&quot;,\&quot;/src/begginerLevel/AlternateAdditions.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes input from the user, performs a calculation based on the input, and prints the result.\\n\\nThe program is designed to solve the \\\&quot;Alternate Additions\\\&quot; problem, where the user inputs two integers, `a` and `b`, and the program determines whether the difference between `b` and `a` is divisible by 3 with a remainder of 2. If the condition is met, the program prints \\\&quot;no\\\&quot;, otherwise it prints \\\&quot;yes\\\&quot;.\\n\\nThe program runs in a loop, where the number of test cases is specified by the user at the beginning.\&quot;,\&quot;/src/begginerLevel/Existence.java\&quot;:\&quot;This file contains a single class `Existence` and a single function `main()`.\\n\\n`Existence`: This class contains the main logic for the program.\\n\\n`main()`: This function is the entry point of the program, which takes user input, performs calculations, and prints the result.\\n\\nThe program reads in a number of test cases, and for each test case, it calculates two values based on the input `x` and `y`, and then checks if the two values are equal. If they are equal, it prints \\\&quot;Yes\\\&quot;, otherwise it prints \\\&quot;No\\\&quot;.\&quot;,\&quot;/src/string/PlayingWithStrings.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes input from the user, compares the number of \\u00271\\u0027 characters in two input strings, and prints \\\&quot;YES\\\&quot; if the counts are equal, and \\\&quot;NO\\\&quot; otherwise. The program runs for a given number of test cases.\&quot;,\&quot;/src/begginerDSA/PracticeProblem_WorldChessChampionship.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that solves a problem related to the World Chess Championship. The program takes input from the user, including the number of test cases and the values for each test case, and then updates the code to solve the problem.\&quot;,\&quot;/src/begginerLevel/LuckyNumbers.java\&quot;:\&quot;This file contains a single class `LuckyNumbers` that checks if a given number contains the digit 7 and prints \\\&quot;Yes\\\&quot; if it does, and \\\&quot;No\\\&quot; otherwise.\\n\\n`LuckyNumbers`: A class that checks if a given number contains the digit 7 and prints the result.\\n\\n`main`: The main function that takes input from the user, checks if the number contains the digit 7, and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/StrangeOperations.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Strange Operations\\\&quot; problem. The program takes input for the number of test cases, the size of the array, and the elements of the array. It then calculates the sum of the first `n` elements and adds `1` to the remaining `k` elements. Finally, it prints whether the last element of the modified array is even or odd.\&quot;,\&quot;/src/begginerLvevelSecondHalf/SlowSolution.java\&quot;:\&quot;This file contains a single class `SlowSolution` that solves a problem related to finding the maximum possible score given certain constraints.\\n\\n`SlowSolution`: This class contains a `main` method that reads input from the user, performs calculations based on the input, and prints the output.\\n\\n`main`: This function reads the number of test cases, and for each test case, it reads the maximum time, maximum number, and the sum of numbers. It then calculates the maximum possible score and prints the result.\&quot;,\&quot;/src/begginerLevel/ReverseTheNumber.java\&quot;:\&quot;This file does not contain any classes or functions. It appears to be a Java program that reverses the digits of a given integer and prints the reversed number. The program takes input from the user, reverses the digits of the number, and then prints the reversed number.\&quot;,\&quot;/src/begginerLvevelSecondHalf/HostelRoom.java\&quot;:\&quot;This file contains a single class `HostelRoom` and two functions `main()` and `adjcentEdge()`.\\n\\n`HostelRoom`: This class contains the main logic for solving a problem related to managing the number of people in a hostel room.\\n\\n`main()`: This function reads input, processes it, and prints the maximum number of people in the hostel room at any given time.\\n\\n`adjcentEdge()`: This function takes input and creates an adjacency list representation of a graph, and then prints the neighbors of each node.\&quot;,\&quot;/src/begginerLevel/MakeAAndBEqual.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes input from the user, compares two integers `a` and `b`, and determines whether they can be made equal by repeatedly doubling the smaller value. The program then prints \\\&quot;Yes\\\&quot; if they can be made equal, and \\\&quot;No\\\&quot; otherwise.\&quot;,\&quot;/src/begginerLvevelSecondHalf/JourneyOfTheKnight.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that checks whether a knight can move from one position to another on a chessboard. The program takes input for the knight\\u0027s current position and the target position, and then determines whether the knight can reach the target position in a single move. The program uses the property that the sum of the row and column indices of the knight\\u0027s current position and the target position must either both be even or both be odd for the knight to be able to reach the target position.\&quot;,\&quot;/src/begginerLvevelSecondHalf/PrimeGenerator.java\&quot;:\&quot;This file contains a single class `PrimeGenerator` and a single function `solve()`.\\n\\n`PrimeGenerator`: This class is responsible for generating prime numbers and finding a pair of numbers in a given array that add up to a target value.\\n\\n`solve()`: This function takes an array of integers and a target value, and returns a pair of integers from the array that add up to the target value, if such a pair exists.\\n\\nThe file as a whole is a program that reads in an array of integers and a target value, and then prints out a pair of integers from the array that add up to the target value, or \\\&quot;IMPOSSIBLE\\\&quot; if no such pair exists.\&quot;,\&quot;/src/begginerLvevelSecondHalf/CountSubArrays.java\&quot;:\&quot;This file contains a single class `CountSubArrays` and a single function `main()`.\\n\\n`CountSubArrays`: This class is responsible for counting the number of subarrays in a given array.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user, creates an array, and performs the subarray counting operation.\\n\\nThe file does not contain any other classes or functions. It appears to be a simple program that takes an array as input and counts the number of subarrays within it.\&quot;,\&quot;/src/begginerLevel/ExpenseList.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that calculates the final expense amount after a series of discounts are applied. The program takes input for the number of test cases and the number of discounts to be applied, and then calculates the final expense amount using a formula involving exponential decay.\&quot;,\&quot;/src/begginerLevel/IsItAVowelOrConsonant.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes a single character input from the user and determines whether it is a vowel or a consonant.\\n\\nThe program first creates a `Scanner` object to read input from the user. It then reads a single character, converts it to uppercase, and checks if it is a vowel by comparing it to an array of vowels. If the character is a vowel, the program prints \\\&quot;Vowel\\\&quot;, otherwise it prints \\\&quot;Consonant\\\&quot;.\&quot;,\&quot;/src/begginerLvevelSecondHalf/APFreeSequences.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;AP Free Sequences\\\&quot; problem. The program takes input from the user, including the number of test cases and the sequences for each test case, and then calculates the difference between consecutive elements in the sequences. The program does not provide any output or further processing of the calculated differences.\&quot;,\&quot;/src/begginerLvevelSecondHalf/DotifyPlaylist.java\&quot;:\&quot;This file contains a single class `DotifyPlaylist` and a single function `main()`.\\n\\n`DotifyPlaylist`: This class contains the main logic for the program.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user and performs some operations on it.\\n\\nThe file appears to be a program that solves a problem related to a playlist in a music application called \\\&quot;Dotify\\\&quot;. The program takes input from the user, including the number of test cases, the number of songs in the playlist, and the number of songs to be played. The program then performs some operations on this input, but the specific details of the problem and the solution are not clear from the provided code.\&quot;,\&quot;/src/begginerLevel/RecentContestProblems.java\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`main`: This function reads in a number of test cases, and for each test case, it reads in a list of strings, counts the number of strings that contain \\\&quot;START38\\\&quot; and the number that do not, and prints out the counts.\\n\\nThe file as a whole appears to be a solution to a programming problem that involves counting the occurrences of a specific string in a list of strings.\&quot;,\&quot;/src/begginerLvevelSecondHalf/StringProtocol.java\&quot;:\&quot;This file contains a single class `StringProtocol` and a single function `main()`.\\n\\n`StringProtocol`: This class contains the main logic for solving the problem of counting the number of consecutive characters in a given string.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user, processes the input, and prints the output.\\n\\nThe file as a whole solves a problem related to processing strings, where the task is to count the number of consecutive characters in a given string and print the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/TrickORTreat.java\&quot;:\&quot;This file contains a single class `TrickORTreat` and two functions `main` and `minimumDistance`.\\n\\n`TrickORTreat`: This class contains the main logic for solving the \\\&quot;Trick or Treat\\\&quot; problem, where the goal is to find the number of valid combinations of candies and chocolates.\\n\\n`main`: This function is the entry point of the program, where it reads input, processes the data, and prints the output.\\n\\n`minimumDistance`: This function takes an array of strings and two book titles, and returns the minimum distance between the two book titles in the array.\&quot;,\&quot;/src/begginerLevel/CandyDistribution.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the problem of distributing candies among a group of friends. The program takes input for the number of candies and the number of friends, and then determines whether the candies can be distributed evenly among the friends such that each friend gets an even number of candies.\&quot;,\&quot;/src/begginerLvevelSecondHalf/AkashAndFunction.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer input `t` and then for each of the `t` cases, it takes an integer input `n` and prints the integer part of `(n+1)/2`.\&quot;,\&quot;/src/begginerLevel/ChefDrinksTea.java\&quot;:\&quot;This file contains a single class `ChefDrinksTea` and a single function `main()`.\\n\\n`ChefDrinksTea`: This class contains the main logic for calculating the cost of tea consumed by a chef.\\n\\n`main()`: This function takes input from the user, calculates the cost of tea consumed by the chef, and prints the result.\\n\\nThe file solves a problem where a chef consumes a certain amount of tea daily, and the cost of refilling the tea jar depends on the capacity of the jar and the cost per refill. The program calculates the total cost of tea consumed by the chef based on the given inputs.\&quot;,\&quot;/src/begginerLevel/PrintingBinaryArray.java\&quot;:\&quot;This file does not contain any classes or functions. It appears to be an empty Java class named `PrintingBinaryArray` within the `begginerLevel` package. The purpose of this file is not clear from the provided code, as it does not contain any implementation or functionality.\&quot;,\&quot;/src/contest/RatioByTwo.java\&quot;:\&quot;This file contains a Java program that solves a problem related to the ratio of two numbers. It includes the following classes and functions:\\n\\n`RatioByTwo`: This class contains the main logic of the program, which involves solving a problem related to the ratio of two numbers.\\n\\n`solve(FastReader, CustomPrintStream)`: This function takes in a `FastReader` object and a `CustomPrintStream` object, and solves the problem for a given number of test cases.\\n\\n`main(String[])`: This is the main entry point of the program, which creates a `FastReader` object and a `CustomPrintStream` object, and calls the `solve()` function.\\n\\n`cout(Object)`: This function is a helper function that prints the given object to the console.\\n\\n`FastReader`: This class is a custom implementation of a fast reader, which reads input from the console efficiently.\\n\\n`CustomPrintStream`: This class is a custom implementation of a print stream, which provides additional functionality such as printing \\\&quot;YES\\\&quot; or \\\&quot;NO\\\&quot; messages.\&quot;,\&quot;/src/begginerLevel/GameBetweenFriends.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that simulates a game between two friends. The program takes input for the number of test cases, and for each test case, it takes the initial scores of the two friends and the points they can earn in each round. The program then updates the scores based on the given rules and determines the winner of the game.\&quot;,\&quot;/src/begginerLevel/CompleteTheCredits.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer input `t` and then for each of the `t` inputs, it checks if the value `x` is greater than 65, less than 35, or between 35 and 65, and prints \\\&quot;Overload\\\&quot;, \\\&quot;Underload\\\&quot;, or \\\&quot;Normal\\\&quot; respectively.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ReachCodetown.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes input from the user, checks if a given string of length 8 contains the correct pattern of vowels and consonants, and prints \\\&quot;YES\\\&quot; if the pattern is valid, and \\\&quot;NO\\\&quot; otherwise.\\n\\nThe file is a solution to the \\\&quot;Reach Codetown\\\&quot; problem, where the task is to check if a given string of length 8 follows a specific pattern of vowels and consonants.\&quot;,\&quot;/src/begginerLevel/BytelandianGoldCoins.java\&quot;:\&quot;This file contains a single class `BytelandianGoldCoins` and a single function `getMaxDollars`.\\n\\n`BytelandianGoldCoins`: This class implements a solution to the Bytelandian Gold Coins problem, where the goal is to find the maximum amount of dollars that can be obtained by repeatedly exchanging a Bytelandian gold coin.\\n\\n`getMaxDollars`: This function recursively calculates the maximum amount of dollars that can be obtained from a given Bytelandian gold coin, using dynamic programming to store and reuse previously computed results.\\n\\nThe main function of the program is to read input values from the user, call the `getMaxDollars` function for each input, and print the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/CoinFlip.java\&quot;:\&quot;This file contains a single class `CoinFlip` that solves a problem related to coin flipping.\\n\\n`CoinFlip`: This class solves the problem of determining the number of heads or tails that will appear when a coin is flipped a certain number of times.\\n\\n`main`: This function is the entry point of the program. It reads input from the user, performs the necessary calculations, and prints the output.\&quot;,\&quot;/src/begginerLevel/ItsMyServe.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that determines the winner of a game called \\\&quot;It\\u0027s My Serve\\\&quot; based on the input values of `x` and `y`. The program takes in the number of test cases `t`, and for each test case, it reads the values of `x` and `y`, and then prints \\\&quot;Alice\\\&quot; if the winner is Alice, or \\\&quot;Bob\\\&quot; if the winner is Bob.\&quot;,\&quot;/src/begginerLvevelSecondHalf/DrumpForPresident.java\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`main`: This function takes input from the user, processes the input, and prints the output.\\n\\nThe file is a Java program that solves a problem related to finding the number of \\\&quot;good\\\&quot; elements in an array. The program takes input for the number of test cases, the size of the array, and the value of `k`. It then reads the array elements, counts the number of occurrences of each element, and determines the number of \\\&quot;good\\\&quot; elements (elements that are not in their correct position but have at least `k` occurrences).\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndTheWildCard.java\&quot;:\&quot;This file contains a single class `ChefAndTheWildCard` that solves a problem related to comparing two strings, where one string can contain wildcard characters.\\n\\n`ChefAndTheWildCard`: This class checks if two strings of equal length are identical, considering that one or both strings can contain wildcard characters.\\n\\n`main`: This function reads input, compares the two strings, and prints the result (either \\\&quot;Yes\\\&quot; or \\\&quot;No\\\&quot;) based on whether the strings are identical or not.\&quot;,\&quot;/src/begginerLevel/ChefAndHisApps.java\&quot;:\&quot;This file contains a single class `ChefAndHisApps` that solves a problem related to managing apps on a phone with limited storage.\\n\\n`ChefAndHisApps`: This class solves the problem of determining the minimum number of apps that need to be deleted to install a new app on a phone with limited storage.\\n\\n`main`: This function reads input from the user, calculates the minimum number of apps that need to be deleted, and prints the result.\&quot;,\&quot;/src/begginerLevel/TwoRanges.java\&quot;:\&quot;This file contains a single class `TwoRanges` that solves a problem related to two ranges of integers.\\n\\n`TwoRanges`: This class reads input from the user, processes the ranges, and prints the size of the unique set of integers.\\n\\n`main`: This function is the entry point of the program. It reads the number of test cases, processes each test case, and prints the size of the unique set of integers for each test case.\&quot;,\&quot;/src/begginerLevel/WorkSmarterNotHarder.java\&quot;:\&quot;This file contains a single class `WorkSmarterNotHarder` and a single function `main()`. The file does not appear to have any other classes or functions.\\n\\n`WorkSmarterNotHarder`: This class contains the main entry point of the program.\\n\\n`main()`: This function reads input from the user, including the number of test cases and other values, but does not perform any further processing or output.\\n\\nOverall, this file appears to be a simple program that takes input from the user but does not perform any significant computation or output.\&quot;,\&quot;/src/begginerLvevelSecondHalf/FarmerFeb.java\&quot;:\&quot;This file contains a single class `FarmerFeb` that solves a problem related to finding the smallest odd number that is a sum of two given numbers.\\n\\n`FarmerFeb`: This class solves the problem of finding the smallest odd number that is a sum of two given numbers.\\n\\n`main`: This function takes input, processes it, and prints the result for each test case.\&quot;,\&quot;/src/begginerLvevelSecondHalf/EqualizeAB.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes input from the user, compares two integers `a` and `b`, and determines whether they can be equalized by adding or subtracting a multiple of `x` to either `a` or `b`. The program then prints \\\&quot;YES\\\&quot; if it is possible to equalize `a` and `b`, and \\\&quot;NO\\\&quot; otherwise.\&quot;,\&quot;/src/begginerLevel/EqualizingNumbers.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes in a series of pairs of integers, and for each pair, it checks if the absolute difference between the two numbers is even or odd, and prints \\\&quot;YES\\\&quot; if the difference is even, and \\\&quot;NO\\\&quot; if the difference is odd.\&quot;,\&quot;/src/begginerLvevelSecondHalf/Laddu.java\&quot;:\&quot;This file contains a single class named `Laddu` and does not have any functions defined within it. The file appears to be a starting point for a program related to the concept of \\\&quot;Laddu\\\&quot;, which is a popular Indian sweet. However, the file does not contain any implementation details or functionality, and it is likely intended to be expanded upon in the future.\\n\\n`Laddu`: A class that represents the concept of a \\\&quot;Laddu\\\&quot;, a popular Indian sweet.\&quot;,\&quot;/src/begginerLvevelSecondHalf/PalindromicSubstrings.java\&quot;:\&quot;This file contains a single class `PalindromicSubstrings` that solves a problem related to finding palindromic substrings in two given strings.\\n\\n`PalindromicSubstrings`: This class checks if there exists a common character between two given strings and prints \\\&quot;Yes\\\&quot; if such a character exists, otherwise it prints \\\&quot;No\\\&quot;.\\n\\n`main`: This function takes input from the user, processes the input, and calls the necessary methods to solve the problem.\&quot;,\&quot;/src/begginerLevel/PossibleVictory.java\&quot;:\&quot;This file contains a single class `PossibleVictory` with no functions. The file appears to be a Java class file for a beginner-level programming exercise, but it does not contain any implementation details. The purpose of this file is not clear from the provided code.\&quot;,\&quot;/src/begginerLevel/BlobbyVolleyScores.java\&quot;:\&quot;This file contains a single class `BlobbyVolleyScores` and does not have any functions defined. The file appears to be a Java class that is part of a \\\&quot;beginner level\\\&quot; package, but it does not contain any implementation details or a `main()` method, so it is not clear what the purpose of this class is.\\n\\n`BlobbyVolleyScores`: A Java class that is part of a \\\&quot;beginner level\\\&quot; package, but does not contain any implementation details or a `main()` method.\&quot;,\&quot;/src/begginerLvevelSecondHalf/HolesInTheText.java\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`main`: This function takes input from the user, counts the number of holes in the characters of the input string, and prints the total count.\\n\\nThe file is a Java program that solves the \\\&quot;Holes in the Text\\\&quot; problem, where the task is to count the number of holes in the characters of a given string. The program uses a Scanner to take input from the user, iterates through the characters of the input string, and counts the number of holes based on the given rules (e.g., \\u0027A\\u0027, \\u0027D\\u0027, \\u0027O\\u0027, \\u0027R\\u0027, \\u0027P\\u0027 have one hole, and \\u0027B\\u0027 has two holes). The final count is then printed to the console.\&quot;,\&quot;/src/begginerLevel/SpeedLimitTest.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that compares the distance traveled by Alice and Bob based on their respective speeds and times. The program takes input for the number of test cases, and for each test case, it calculates the distance traveled by Alice and Bob, and then prints \\\&quot;Alice\\\&quot;, \\\&quot;Bob\\\&quot;, or \\\&quot;Equal\\\&quot; based on the comparison of the distances.\&quot;,\&quot;/src/begginerLevel/ConstructN.java\&quot;:\&quot;This file contains a single class `ConstructN` and a single function `main()`.\\n\\n`ConstructN`: This class contains the main logic for determining whether a given number `n` can be constructed or not.\\n\\n`main()`: This function takes input from the user, iterates through the input numbers, and prints \\\&quot;Yes\\\&quot; if the number can be constructed, and \\\&quot;No\\\&quot; if it cannot.\\n\\nThe file as a whole is a simple program that checks whether a given number can be constructed or not, based on the following rules:\\n- If the number is less than 7 and is odd, it cannot be constructed.\\n- Otherwise, the number can be constructed.\&quot;,\&quot;/src/begginerLevel/DistinctColors.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that reads in a series of integers, finds the maximum value in each set, and prints the maximum value.\\n\\nThe program starts by importing the necessary Java packages, including `java.util.Map` and `java.util.Scanner`. The `main()` method is the entry point of the program, which takes in the number of test cases (`t`) and then processes each test case.\\n\\nFor each test case, the program reads in the number of integers (`n`) and then the integers themselves (`arr`). It then finds the maximum value in the array and prints it to the console.\&quot;,\&quot;/src/begginerLevel/FarmerAndHisPlot.java\&quot;:\&quot;This file contains a single class `FarmerAndHisPlot` and two functions `main` and `gcd`.\\n\\n`FarmerAndHisPlot`: This class contains the main logic to solve the problem of finding the minimum number of plots required to cover a rectangular farm.\\n\\n`main`: This function is the entry point of the program, which takes input from the user, calculates the minimum number of plots required, and prints the result.\\n\\n`gcd`: This function calculates the greatest common divisor of two given integers using the Euclidean algorithm.\&quot;,\&quot;/src/DSAPreparetion1/Palindrome.java\&quot;:\&quot;This file contains a single class `Palindrome` and two functions `isPalindrome` and `rotateMatrix`.\\n\\n`Palindrome`: This class contains the main method that takes input from the user and performs operations on a matrix.\\n\\n`isPalindrome`: This function checks if a given string is a palindrome.\\n\\n`rotateMatrix`: This function rotates a given square matrix by 90 degrees in the clockwise direction.\&quot;,\&quot;/src/begginerLevel/SugarcaneJuiceBusiness.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that calculates the total number of glasses of sugarcane juice that can be sold and the total profit from the business, given the number of sugarcanes available. The program takes input from the user, performs the necessary calculations, and outputs the total number of glasses of sugarcane juice that can be sold.\&quot;,\&quot;/src/begginerLvevelSecondHalf/TransfusionChain.java\&quot;:\&quot;This file contains a single class `TransfusionChain` and two functions `titleToNumber` and `findMedian`.\\n\\n`TransfusionChain`: This class solves a problem related to blood transfusion chains.\\n\\n`titleToNumber`: This function converts a string representation of a column title in Excel to its corresponding integer value.\\n\\n`findMedian`: This function takes an array of integers and rearranges them to find the median.\\n\\nThe file also contains a `main` method that reads input, processes it, and prints the output.\&quot;,\&quot;/src/begginerLevel/PrimalityTest.java\&quot;:\&quot;This file contains a single class `PrimalityTest` that implements a program to test the primality of a given set of numbers.\\n\\n`PrimalityTest`: This class implements a program to test the primality of a given set of numbers.\\n\\n`main(String[] args)`: This function reads a set of numbers from the user, and for each number, it determines whether the number is prime or not, and prints the result.\&quot;,\&quot;/src/begginerDSA/PracticeProblem_AlternateAdditons.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a practice problem related to alternate additions. The program takes input for the number of test cases and the values of `a` and `b`, and then determines whether the difference between `b` and `a` is divisible by 3 or has a remainder of 1. Based on this, it prints \\\&quot;YES\\\&quot; or \\\&quot;NO\\\&quot; for each test case.\&quot;,\&quot;/src/begginerLvevelSecondHalf/BinaryStingCost.java\&quot;:\&quot;This file contains a single class `BinaryStingCost` that solves a problem related to binary strings. The main function `main` reads input, processes the binary strings, and prints the output.\\n\\n`BinaryStingCost`: A class that solves a problem related to binary strings.\\n\\n`main`: The main function that reads input, processes the binary strings, and prints the output.\&quot;,\&quot;/src/begginerLvevelSecondHalf/LuigiAndUniformity.java\&quot;:\&quot;This file contains a single class `LuigiAndUniformity` and two functions `main` and `gcd`.\\n\\n`LuigiAndUniformity`: This class contains the main logic for solving the \\\&quot;Luigi and Uniformity\\\&quot; problem.\\n\\n`main`: This function is the entry point of the program, which takes input, calculates the number of elements in the array that are not equal to the greatest common divisor (GCD) of all the elements, and prints the result.\\n\\n`gcd`: This function calculates the greatest common divisor of two integers using the Euclidean algorithm.\&quot;,\&quot;/src/begginerLevel/MileageMatters.java\&quot;:\&quot;This file contains a single class `MileageMatters` that solves a problem related to the cost of fuel for a given distance and fuel efficiency.\\n\\n`MileageMatters`: This class determines the most cost-effective fuel type (petrol or diesel) for a given distance, fuel cost, and fuel efficiency.\\n\\n`main`: This function takes input from the user, calculates the cost of petrol and diesel for the given distance, and prints the most cost-effective fuel type.\&quot;,\&quot;/src/begginerLevel/CounttheACs.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer input `t` representing the number of test cases, and for each test case, it takes an integer input `p` representing the price of an air conditioner. The program then checks if the sum of the digits of `p` divided by 100 and the remainder of `p` divided by 100 is less than or equal to 10. If the condition is true, it prints the sum of the digits, otherwise, it prints -1.\&quot;,\&quot;/src/begginerLvevelSecondHalf/RetrieveTheArray.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that retrieves an array and calculates the difference between each element and the average of the array. The program takes input for the number of test cases, the size of the array, and the elements of the array, and then prints the difference between each element and the average.\&quot;,\&quot;/src/begginerLvevelSecondHalf/NewPiece.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to a chess piece. The program takes input for a set of coordinates representing the positions of two chess pieces, and then determines the minimum number of moves required to move one piece to the other\\u0027s position, based on certain rules.\\n\\nThe program first takes the number of test cases as input, and then for each test case, it takes the coordinates of the two chess pieces as input. It then analyzes the coordinates and prints the minimum number of moves required to move one piece to the other\\u0027s position, based on the following rules:\\n\\n1. If the two pieces are on the same square, the minimum number of moves is 0.\\n2. If the sum of the coordinates of the two pieces is odd, the minimum number of moves is 1.\\n3. If the sum of the coordinates of the two pieces is even, the minimum number of moves is 2.\&quot;,\&quot;/src/begginerLvevelSecondHalf/BearAndCandies123.java\&quot;:\&quot;This file contains a single class `BearAndCandies123` that solves the \\\&quot;Bear and Candies 123\\\&quot; problem from Codeforces.\\n\\n`BearAndCandies123`: This class solves the \\\&quot;Bear and Candies 123\\\&quot; problem, where two players, Limak and Bob, take turns taking candies from a pile, and the player who takes the last candy wins.\\n\\n`main`: This function reads input from the user, calculates the winner for each test case, and prints the result.\&quot;,\&quot;/src/begginerLevel/GoldMining.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that solves a problem related to gold mining. The program takes input for the number of test cases, the number of gold mines, the cost of mining, and the profit per mine. It then determines whether it is possible to make a profit by mining all the gold mines and prints \\\&quot;YES\\\&quot; or \\\&quot;NO\\\&quot; accordingly.\&quot;,\&quot;/src/begginerLvevelSecondHalf/PeakFinding.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that finds the peak element in a series of mountain heights. The program takes input from the user, stores the mountain heights in an array, and then prints the maximum height among them.\&quot;,\&quot;/src/begginerLvevelSecondHalf/DivisibleByI.java\&quot;:\&quot;This file contains a single class `DivisibleByI` and a single function `main()`.\\n\\n`DivisibleByI`: This class contains the main logic for the program.\\n\\n`main()`: This function takes user input, processes it, and performs some operations related to divisibility.\\n\\nThe file appears to be a program that takes an integer input `t` and then `n` integers, and performs some operations related to divisibility. However, the specific operations are not clear from the provided code.\&quot;,\&quot;/src/begginerLvevelSecondHalf/SquareString.java\&quot;:\&quot;This file contains a single class `SquareString` and does not have any functions defined. The file appears to be a Java program that is intended to work with strings and perform some operations on them, but the specific functionality is not clear from the provided code.\\n\\n`SquareString`: A class that likely performs operations on strings, but the specific functionality is not clear from the provided code.\&quot;,\&quot;/src/begginerLvevelSecondHalf/DecoratingChristmasTree.java\&quot;:\&quot;This file contains a single class `DecoratingChristmasTree` and a single function `main()`.\\n\\n`DecoratingChristmasTree`: This class is responsible for decorating a Christmas tree.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user and performs some operations related to decorating the Christmas tree.\\n\\nThe file does not contain any other classes or functions. It appears to be a simple program that takes input from the user and performs some operations related to decorating a Christmas tree.\&quot;,\&quot;/src/DSAPreparetion1/ColorTheCube.java\&quot;:\&quot;This file contains a single class `ColorTheCube` that solves a problem related to coloring a cube.\\n\\n`ColorTheCube`: This class contains a `main()` function that reads input, performs calculations, and prints the result.\\n\\n`main()`: This function reads the number of test cases, then for each test case, it reads the size of the cube and the values of the cube faces, calculates the sum of the values, and prints the result.\&quot;,\&quot;/src/begginerLevel/ChefAndRemissness.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes input of two integers `a` and `b` from the user, finds the maximum of the two, and then prints the maximum value and the sum of `a` and `b`. The program runs in a loop for the number of test cases specified by the user.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndCookOffContests.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Chef and Cook-Off Contests\\\&quot; problem. The program takes input from the user, which includes the number of contests and the difficulty levels of the contests. It then determines whether the chef can participate in all three types of contests (cakewalk, simple, and easy) and at least one of the medium or medium-hard contests, and at least one of the medium-hard or hard contests. The program then prints \\\&quot;Yes\\\&quot; if the chef can participate in all the required contests, and \\\&quot;No\\\&quot; otherwise.\&quot;,\&quot;/src/begginerLevel/ValentineIsComing.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that solves a problem related to Valentine\\u0027s Day. The program takes input of the number of test cases, and for each test case, it takes two integers `x` and `y`. If `x` is less than `y`, it prints `0`, otherwise, it prints the integer division of `x` by `y`.\&quot;,\&quot;/src/begginerLevel/Wordle.java\&quot;:\&quot;This file contains a single class `Wordle` and a single function `main()`.\\n\\n`Wordle`: This class implements a simple Wordle-like game, where the user is asked to input two strings, and the program outputs a string of \\\&quot;G\\\&quot; and \\\&quot;B\\\&quot; characters indicating which characters in the two input strings match.\\n\\n`main()`: This function is the entry point of the program, which takes in a number of test cases, and for each test case, it reads two strings from the user, compares them, and outputs the result.\&quot;,\&quot;/src/begginerLevel/MinimumPizzas.java\&quot;:\&quot;This file contains a single class `MinimumPizzas` that solves a problem related to determining the minimum number of pizzas required to feed a group of friends, given the number of friends and the number of slices each friend can eat.\\n\\n`MinimumPizzas`: This class contains a `main()` function that takes input from the user, calculates the minimum number of pizzas required, and prints the result.\\n\\n`main()`: This function reads the number of test cases, the number of friends, and the number of slices each friend can eat, and then calculates the minimum number of pizzas required to feed all the friends.\&quot;,\&quot;/src/begginerLvevelSecondHalf/PathParity.java\&quot;:\&quot;This file contains a single class `PathParity` and does not have any functions defined. The file appears to be a Java program that takes input from the user and performs some operations, but the specific functionality is not clear from the provided code.\\n\\n`PathParity`: This class appears to be a Java program that performs some operations based on user input.\&quot;,\&quot;/src/begginerLevel/EasyPronunciation.java\&quot;:\&quot;This file contains a single class `EasyPronunciation` that checks if a given string has more than 4 consecutive consonants, and prints \\\&quot;Yes\\\&quot; if it doesn\\u0027t, and \\\&quot;No\\\&quot; if it does.\\n\\n`EasyPronunciation`: A class that checks if a given string has more than 4 consecutive consonants.\\n\\n`main`: The main function that takes input, calls the `inPresent` function, and prints the result.\\n\\n`inPresent`: A function that checks if a given string has more than 4 consecutive consonants.\\n\\n`solve`: A function that checks if a given character is a consonant.\&quot;,\&quot;/src/begginerDSA/PracticeProblemConstructN.java\&quot;:\&quot;This file does not contain any classes or functions. It is a simple Java program that takes an integer input `n` from the user and prints the result of the expression `(n + 4)/5`.\&quot;,\&quot;/src/begginerLvevelSecondHalf/CoronavirusSpread.java\&quot;:\&quot;This file contains a single class `CoronavirusSpread` that solves a problem related to the spread of the coronavirus. The program takes input for the number of test cases and the number of people in each test case, along with the number of days each person was infected. It then calculates the minimum and maximum number of consecutive days a person was infected and prints the results.\\n\\n`CoronavirusSpread`: Solves a problem related to the spread of the coronavirus by calculating the minimum and maximum number of consecutive days a person was infected.\\n\\n`main`: The main function that takes input, processes the data, and prints the results.\&quot;,\&quot;/src/begginerLevel/ChefAndInteractiveContest.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes in an integer `n` and an integer `r`, followed by `n` integers, and then prints \\\&quot;Good boi\\\&quot; if the integer is greater than or equal to `r`, and \\\&quot;Bad boi\\\&quot; otherwise.\&quot;,\&quot;/src/begginerLvevelSecondHalf/DaysInMonth.java\&quot;:\&quot;This file contains a single class `DaysInMonth` and three functions: `toLowerCase()`, `isPerfectSquare()`.\\n\\n`DaysInMonth`: This class solves the problem of finding the number of days in a month given the start day of the month and the number of days.\\n\\n`toLowerCase()`: This function converts a given string to lowercase.\\n\\n`isPerfectSquare()`: This function checks if a given number is a perfect square.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ThreeFriends.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that checks if the sum of any two of the three given integers is equal to the third integer. The program takes input from the user, performs the necessary calculations, and prints \\\&quot;YES\\\&quot; if the condition is met, and \\\&quot;NO\\\&quot; otherwise.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndStudent.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Chef and Student\\\&quot; problem. The program takes input from the user, which represents a string of characters, and counts the number of occurrences of the pattern \\\&quot;\\u003e\\u003c\\\&quot; in the string. The program then prints the count for each input string.\&quot;,\&quot;/src/begginerLvevelSecondHalf/SimilarDishes.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes user input, compares the dishes in the input, and prints whether the dishes are similar or dissimilar.\\n\\nThe file is a Java program that takes input of four dishes from the user, checks if at least two of the dishes are similar, and prints \\\&quot;similar\\\&quot; or \\\&quot;dissimilar\\\&quot; based on the result.\&quot;,\&quot;/src/begginerLevel/ComplementaryStrandInDNA.java\&quot;:\&quot;This file contains a single class `ComplementaryStrandInDNA` that implements a program to find the complementary strand of a given DNA sequence.\\n\\n`ComplementaryStrandInDNA`: This class takes a DNA sequence as input, and generates the complementary strand by replacing each nucleotide with its complementary counterpart (A-\\u003eT, T-\\u003eA, C-\\u003eG, G-\\u003eC).\\n\\n`main`: This function is the entry point of the program. It reads the DNA sequence from the user, generates the complementary strand, and prints the result.\&quot;,\&quot;/src/begginerLevel/GoodProgram.java\&quot;:\&quot;This file does not contain any classes or functions. It is a simple program that takes an integer input `t` and then for each of the `t` inputs, it checks if the number `n` is divisible by 4 and prints \\\&quot;Goog\\\&quot; if it is, and \\\&quot;Not Good\\\&quot; otherwise.\&quot;,\&quot;/src/begginerLevel/CarAndBus.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that compares the speed of a car and a bike, and prints the result based on the input provided by the user.\\n\\nThe program takes input from the user, where the user enters the speed of the car and the speed of the bike. The program then compares the two speeds and prints \\\&quot;Car\\\&quot; if the car is faster, \\\&quot;Bike\\\&quot; if the bike is faster, and \\\&quot;Same\\\&quot; if the speeds are equal.\\n\\nThe program runs in a loop, allowing the user to enter multiple sets of car and bike speeds, and the program will print the result for each set.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ModeOfFrequencies.java\&quot;:\&quot;This file contains a single class `ModeOfFrequencies` and a single function `longestSubarrayWithSumK`.\\n\\n`ModeOfFrequencies`: This class is responsible for finding the mode of frequencies in an array.\\n\\n`longestSubarrayWithSumK`: This function finds the length of the longest subarray in the given array that has a sum equal to the provided value `k`.\\n\\nThe file also includes a `main` method that takes input, processes it, and calls the `longestSubarrayWithSumK` function.\&quot;,\&quot;/src/begginerLevel/ChefAndFruits.java\&quot;:\&quot;This file contains a single class `ChefAndFruits` that solves a problem related to finding the minimum number of operations required to make the difference between two numbers equal to or less than a given value.\\n\\n`ChefAndFruits`: This class solves the problem of finding the minimum number of operations required to make the difference between two numbers equal to or less than a given value.\\n\\n`main`: This function is the entry point of the program. It reads input from the user, calculates the minimum number of operations required, and prints the result.\&quot;,\&quot;/src/begginerLevel/AreaOrPerimeter.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that calculates the area and perimeter of a rectangle based on the user\\u0027s input, and then prints the result based on which is greater.\\n\\nThe program uses the `Scanner` class to read the length and breadth of the rectangle from the user, calculates the area and perimeter, and then compares them to determine which one is greater. The result is then printed to the console.\&quot;,\&quot;/src/begginerLevel/ChessBoardDistance.java\&quot;:\&quot;This file contains a single class `ChessBoardDistance` and a single function `main()`.\\n\\n`ChessBoardDistance`: This class contains a program that calculates the minimum number of moves required to move a chess piece from one square on a chessboard to another.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user, calculates the minimum number of moves required to move the chess piece, and prints the result.\&quot;,\&quot;/src/begginerLevel/DiscusThrow.java\&quot;:\&quot;This file contains a single class `DiscusThrow` and one function `main()`.\\n\\n`DiscusThrow`: This class contains the main logic for finding the maximum value among three given integers.\\n\\n`main()`: This function takes input from the user, finds the maximum value among the three integers, and prints the result.\\n\\nThe file is a Java program that solves the Discus Throw problem, where the user inputs three integers, and the program outputs the maximum value among them.\&quot;,\&quot;/src/begginerLevel/ICanUseBothHands.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to the number of pages a person can read using both hands. The program takes input for the number of test cases, the number of pages that can be read with the left hand, the number of pages that can be read with the right hand, and the total number of pages to be read. It then calculates the total number of pages that can be read using both hands and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/CandyLove.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Candy Love\\\&quot; problem. The program takes input for the number of test cases and the number of candy bars for each test case. It then calculates the sum of the candy bar values and checks if the sum is odd or even. If the sum is odd, it prints \\\&quot;YES\\\&quot;, otherwise it prints \\\&quot;NO\\\&quot;.\&quot;,\&quot;/src/begginerLevel/CherfJudgeACompetition.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes input from the user, including the number of test cases (`t`) and the values of `n` and `x` for each test case. The program then creates an array `arr` of size `n` and declares a variable `r` with the value `3`. However, the program does not perform any further operations or provide any functionality beyond this.\&quot;,\&quot;/src/begginerLvevelSecondHalf/LargestAndSecondLargest.java\&quot;:\&quot;This file contains a single class `LargestAndSecondLargest` that has a single function `main()`. The purpose of this program is to find the largest and second-largest elements in an array and print their sum.\\n\\n`LargestAndSecondLargest`: This class contains the main logic for finding the largest and second-largest elements in an array.\\n\\n`main()`: This function takes input from the user, finds the largest and second-largest elements in the array, and prints their sum.\&quot;,\&quot;/src/begginerLvevelSecondHalf/Candies.java\&quot;:\&quot;This file contains a single class `Candies` and a single function `main()`.\\n\\n`Candies`: This class contains the main logic for solving a problem related to candies.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user, processes it, and performs the necessary computations to solve the problem.\\n\\nThe file appears to be a solution to a problem where the user inputs the number of test cases, and for each test case, the user inputs the number of candies. The program then processes the input and performs some computations to solve the problem.\&quot;,\&quot;/src/begginerLevel/SumOrDifference.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes two integers as input from the user and then prints the difference between the two numbers if the first number is greater than the second, or the sum of the two numbers if the second number is greater than or equal to the first.\&quot;,\&quot;/src/begginerLvevelSecondHalf/PlayingWithStrings.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes input from the user, compares the number of \\u00271\\u0027 characters in two input strings, and prints \\\&quot;YES\\\&quot; if the counts are equal, and \\\&quot;NO\\\&quot; otherwise. The program runs in a loop for a given number of test cases.\&quot;,\&quot;/src/begginerLvevelSecondHalf/Solution.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`morseToEnglish`: This function takes a Morse code string as input and converts it to the corresponding English text.\\n\\n`findMorseIndex`: This function takes a Morse code string as input and returns the index of the corresponding character in the `MORSE_LIST` array.\\n\\nThe file appears to be a solution to a problem where the task is to convert Morse code to English text. The solution uses a predefined `MORSE_LIST` array to map Morse code to the corresponding English characters.\&quot;,\&quot;/src/begginerLvevelSecondHalf/PrintingBinaryArray.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes an integer `t` as input, and then for each of the `t` test cases, it takes an integer `n` and `n` integers as input. For each input integer, it prints the opposite value (0 is printed as 1, and 1 is printed as 0) followed by a space. After processing all the test cases, the program prints a newline character.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndFruits.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Chef and Fruits\\\&quot; problem from the Beginner Level Second Half category. The program takes input for the number of test cases, and for each test case, it calculates the absolute difference between two numbers (n and m) and subtracts the value of k from it. If the difference is greater than k, it prints the remaining difference; otherwise, it prints 0.\&quot;,\&quot;/src/begginerLvevelSecondHalf/EqualStrings.java\&quot;:\&quot;This file contains a single class `EqualStrings` that solves the problem of finding the number of distinct characters that need to be changed to make two strings equal.\\n\\n`EqualStrings`: This class contains the main logic to solve the problem of finding the number of distinct characters that need to be changed to make two strings equal.\\n\\n`main`: This function is the entry point of the program. It takes input, processes it, and prints the output.\&quot;,\&quot;/src/begginerLevel/FarmersLeague.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that solves a problem related to a Farmers League. The program takes an integer `t` as input, which represents the number of test cases, and for each test case, it takes an integer `n` as input, which represents the number of farmers. The program then calculates and prints the total number of points that the farmers can earn, which is `(n/2) * 3`.\&quot;,\&quot;/src/begginerLvevelSecondHalf/FitInDataType.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes an integer `t` as input, and for each of the `t` test cases, it takes two integers `n` and `x` as input. It then prints the value of `x` if `n` is greater than `x`, or the value of `x` modulo `(n + 1)` if `n` is less than or equal to `x`.\&quot;,\&quot;/src/begginerLvevelSecondHalf/IPLAndRCB.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to the Indian Premier League (IPL) and the Royal Challengers Bangalore (RCB) cricket team. The program takes input for the number of test cases, the minimum number of points required for RCB to qualify, and the number of remaining matches. It then calculates the minimum number of points RCB needs to win in the remaining matches to qualify, or outputs 0 if RCB has already qualified.\&quot;,\&quot;/src/begginerLevel/DegreeOfPolynomial.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes input of the degree of a polynomial and prints the highest degree of the polynomial.\\n\\nThe program first takes the number of test cases as input, and then for each test case, it takes the coefficients of the polynomial as input. It then finds the highest degree of the polynomial by iterating through the coefficients and keeping track of the index of the last non-zero coefficient, which represents the highest degree. Finally, it prints the highest degree for each test case.\&quot;,\&quot;/src/begginerLvevelSecondHalf/MakingAMeal.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: The main function that takes user input, counts the occurrences of each letter in the input strings, and calculates the maximum number of meals that can be made based on the available ingredients.\\n\\nThe file is a solution to a problem where the goal is to find the maximum number of meals that can be made from a given set of ingredients, where each meal requires a specific combination of ingredients.\&quot;,\&quot;/src/begginerLevel/CredCoins.java\&quot;:\&quot;This file contains a single class `CredCoins` and a single function `main()`.\\n\\n`CredCoins`: This class contains the main logic for calculating the total number of CRED coins earned based on the given input.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user, calculates the total number of CRED coins earned, and prints the result.\\n\\nThe program is designed to solve a problem related to earning CRED coins based on the number of bills paid using CRED and the number of CRED coins earned per bill.\&quot;,\&quot;/src/begginerLevel/ChefAndNextGen.java\&quot;:\&quot;This file contains a single class `ChefAndNextGen` that solves a problem related to the production of power and helium. The `main` function is the only function in this file, and it reads input from the user, calculates the power produced and the total helium available, and then prints \\\&quot;Yes\\\&quot; or \\\&quot;No\\\&quot; based on the comparison of these values.\\n\\n`ChefAndNextGen`: A class that solves a problem related to the production of power and helium.\\n\\n`main`: The main function that reads input, calculates the power produced and the total helium available, and prints the result.\&quot;,\&quot;/src/begginerLevel/OddsAndEvens.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes input of the number of test cases and the values of `p` and `c` for each test case, and then determines whether the sum of `p` and `c` is even or odd, and prints the name of the corresponding player (Bob or Alice).\&quot;,\&quot;/src/begginerLvevelSecondHalf/gvbfx.java\&quot;:\&quot;This file does not contain any classes or functions. It appears to be an empty Java class file named `gvbfx` within the `begginerLvevelSecondHalf` package. The purpose of this file is unclear, as it does not contain any code or functionality.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ProgramYourOwnCalculator.java\&quot;:\&quot;This file contains a single class and two functions:\\n\\n`ProgramYourOwnCalculator`: This class implements a simple calculator program that performs basic arithmetic operations (addition, subtraction, multiplication, and division) based on user input.\\n\\n`solve`: This function takes two numbers and an operator as input, performs the corresponding arithmetic operation, and returns the result.\\n\\nThe file as a whole provides a simple implementation of a calculator program that allows the user to input two numbers and an operator, and then displays the result of the calculation.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ZeroOnesEqualOneZeros.java\&quot;:\&quot;This file contains a single class `ZeroOnesEqualOneZeros` and a single `main` function. The file does not appear to have any other classes or functions.\\n\\n`ZeroOnesEqualOneZeros`: This class contains a `main` function that initializes an integer variable `x` to 10 and a boolean variable `flag` to `false`. It then enters a `while` loop that checks the value of `flag`, but the loop condition is always `false` because `flag` is never set to `true` within the loop.\\n\\n`main`: The `main` function is the entry point of the program. It initializes the variables `x` and `flag`, and then enters a `while` loop that never executes because the loop condition is always `false`.\&quot;,\&quot;/src/begginerLevel/TheRatingDilemma.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer input `t` and then for each of the `t` inputs, it prints the value of `(n+1)*(-1)`, where `n` is the input integer.\&quot;,\&quot;/src/begginerLvevelSecondHalf/DoubleStrings.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer input `t` representing the number of test cases, and for each test case, it takes an integer input `n`. If `n` is even, it prints `n`, otherwise it prints `n-1`. This program is designed to solve a problem related to doubling strings.\&quot;,\&quot;/src/begginerLvevelSecondHalf/TanuAndHeadBob.java\&quot;:\&quot;This file contains a single class `TanuAndHeadBob` and a single function `main()`.\\n\\n`TanuAndHeadBob`: This class implements a solution to the \\\&quot;Tanu and Head-Bob\\\&quot; problem, where the goal is to determine whether a person is Indian, not Indian, or not sure based on their head-bobbing behavior.\\n\\n`main()`: The `main()` function is the entry point of the program, which takes input from the user, processes the head-bobbing behavior, and outputs the corresponding result.\\n\\nIn summary, this file solves the \\\&quot;Tanu and Head-Bob\\\&quot; problem by reading input from the user, analyzing the head-bobbing behavior, and printing the appropriate output.\&quot;,\&quot;/src/begginerLvevelSecondHalf/TrainPartner.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer input `n` and outputs the corresponding train berth number and type based on the following rules:\\n\\n- If `n` is divisible by 8, the berth number is `(n-1)SL`.\\n- If `n` is 1 more than a multiple of 8, the berth number is `(n+3)LB`.\\n- If `n` is 2 more than a multiple of 8, the berth number is `(n+3)MB`.\\n- If `n` is 3 more than a multiple of 8, the berth number is `(n+3)UB`.\\n- If `n` is 4 more than a multiple of 8, the berth number is `(n-3)LB`.\\n- If `n` is 5 more than a multiple of 8, the berth number is `(n-3)MB`.\\n- If `n` is 6 more than a multiple of 8, the berth number is `(n-3)UB`.\\n- If `n` is 7 more than a multiple of 8, the berth number is `(n+1)SU`.\\n\\nThe program runs for a given number of test cases, and for each test case, it takes an integer input `n` and outputs the corresponding train berth number and type.\&quot;,\&quot;/src/begginerLvevelSecondHalf/TwoDifferentPalindromes.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that checks if two given integers `a` and `b` can form two different palindromes. The program takes input for the number of test cases and the values of `a` and `b` for each test case. It then prints \\\&quot;Yes\\\&quot; if it is possible to form two different palindromes, and \\\&quot;No\\\&quot; otherwise.\&quot;,\&quot;/src/begginerLevel/CriketRanking.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that compares the scores of two cricket teams and determines the winner based on the comparison of the individual scores.\\n\\nThe program takes input from the user, which includes the number of test cases and the individual scores of the two teams. It then calculates the total score for each team and compares them to determine the winner. The output is the name of the winning team.\&quot;,\&quot;/src/begginerLevel/ChefAndStocks.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Chef and Stocks\\\&quot; problem. The program takes input of the number of stocks and their prices, and then calculates the maximum profit that can be obtained by buying and selling the stocks, assuming that the chef can only buy one stock at a time and must sell it before buying another.\&quot;,\&quot;/src/begginerLevel/DrunkAlcoholic.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that calculates the number of steps taken by a drunk alcoholic person. The program takes an integer `t` as input, which represents the number of test cases, and for each test case, it takes an integer `k` as input, which represents the number of steps the person takes. The program then calculates the total number of steps taken by the person, where each odd-numbered step adds 3 to the total, and each even-numbered step subtracts 1 from the total. The final result is printed for each test case.\&quot;,\&quot;/src/begginerLevel/TheLeadGame.java\&quot;:\&quot;This file contains a single class `TheLeadGame` and does not have any functions defined. The file appears to be the starting point for a program related to a game, but it does not contain any implementation details.\\n\\n`TheLeadGame`: This class serves as the entry point for the game application.\&quot;,\&quot;/src/begginerLevel/JudgingDelay.java\&quot;:\&quot;This file contains a single class `JudgingDelay` that solves a problem related to judging delays in a competition. The program takes input for the number of test cases and the number of participants, and then for each participant, it checks if the absolute difference between the start time and the judging time is greater than 5, and if so, increments a counter. Finally, it prints the total count of participants with a judging delay greater than 5.\\n\\n`JudgingDelay`: A class that solves a problem related to judging delays in a competition.\\n\\n`main`: The main function that takes input, processes the data, and prints the output.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ZeroString.java\&quot;:\&quot;This file contains a single class `ZeroString` and a single function `checkOperations`.\\n\\n`ZeroString`: This class contains a main method that takes input, calls the `checkOperations` function, and prints the result.\\n\\n`checkOperations`: This function takes a string `s` and its length `n` as input, and returns the minimum number of operations required to convert the string to a string of all 0s or all 1s.\\n\\nThe file solves a problem where the goal is to convert a given string of 0s and 1s to a string of all 0s or all 1s by performing the minimum number of operations. The operations allowed are to change a 0 to a 1 or a 1 to a 0.\&quot;,\&quot;/src/begginerLvevelSecondHalf/MovieWeekend.java\&quot;:\&quot;This file contains a single class `MovieWeekend` and two functions `hasArrayTwoCandidates` and `hasArrayTwoCandidates1`.\\n\\n`MovieWeekend`: This class contains the main method that solves a problem related to finding the index of the maximum product of length and width of a movie.\\n\\n`hasArrayTwoCandidates`: This function checks if there are two elements in the given array that sum up to the target value.\\n\\n`hasArrayTwoCandidates1`: This function also checks if there are two elements in the given array that sum up to the target value, but it uses a HashMap to achieve this.\&quot;,\&quot;/src/begginerLevel/WhichFuelIsCheaper.java\&quot;:\&quot;This file contains a single class `WhichFuelIsCheaper` that has a single `main()` function. The program takes input for the current prices of petrol and diesel, the increase in prices per month, and the number of months, and then determines which fuel is cheaper over the given time period.\\n\\n`WhichFuelIsCheaper`: A class that determines which fuel (petrol or diesel) is cheaper over a given time period.\\n\\n`main()`: The main function that takes input, calculates the final prices of petrol and diesel, and prints the cheaper fuel.\&quot;,\&quot;/src/arrays/CopsTheThiefDevu.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that reads input from the user, including the size of an array, the number of houses per minute that a cop can search, and the number of cops per minute that a thief can evade. The program then reads the values of the array and performs some unspecified operation on them.\&quot;,\&quot;/src/begginerLvevelSecondHalf/Subanagrams.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that reads in a number `n` and then `n` strings, and for each string, it counts the frequency of each lowercase letter in the string and stores the counts in an array `res`.\&quot;,\&quot;/src/begginerLvevelSecondHalf/RockPaperScissor.java\&quot;:\&quot;This file contains a single class `RockPaperScissor` that implements a game of Rock-Paper-Scissors between two players, Chef and Chefnia.\\n\\n`RockPaperScissor`: This class implements a game of Rock-Paper-Scissors between two players, where the winner is determined based on the rules of the game.\\n\\n`main`: This function is the entry point of the program, where it reads the number of games to be played, the size of the game, and the choices made by the two players, and then determines the winner of each game based on the rules of Rock-Paper-Scissors.\&quot;,\&quot;/src/begginerLevel/ChessFormat.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes input of two integers `a` and `b`, and based on their sum, it prints the corresponding chess format number (1, 2, 3, or 4) as per the given conditions.\&quot;,\&quot;/src/begginerLevel/PassingMarks1.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that checks if a student has passed a set of exams based on the minimum passing marks and the total marks required. The program takes input for the minimum passing marks for each subject, the total marks required, and the marks obtained by the student in each subject, and then outputs \\\&quot;Yes\\\&quot; if the student has passed, and \\\&quot;No\\\&quot; otherwise.\&quot;,\&quot;/src/begginerLvevelSecondHalf/SignMoves.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Sign Moves\\\&quot; problem. The program takes an integer `t` as input, which represents the number of test cases, and then for each test case, it takes an integer `n` as input. It then calculates the answer based on whether `n` is odd or even, and prints the result.\&quot;,\&quot;/src/begginerLevel/NonNegativeNumber.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes input from the user, counts the number of zeros and negative numbers in an array, and then prints 0 if there are any zeros or an even number of negative numbers, and 1 otherwise.\\n\\nThe program is designed to solve a problem related to non-negative numbers, where the goal is to determine whether a given array of integers can be transformed into a non-negative array by flipping the sign of some elements.\&quot;,\&quot;/src/begginerLevel/TooManyItems.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that solves the \\\&quot;Too Many Items\\\&quot; problem. The program takes an integer `t` as input, which represents the number of test cases. For each test case, it takes an integer `n` as input, which represents the number of items. The program then calculates the minimum number of bags required to carry all the items, assuming each bag can hold 10 items, and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/AverageOfThree.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer input `t` and then for each test case, it prints the three consecutive integers whose average is the input integer `N`.\&quot;,\&quot;/src/begginerLvevelSecondHalf/BallonDOr.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that solves the \\\&quot;Ballon D\\u0027Or\\\&quot; problem. The program takes input for the number of test cases and the number of players for each test case. It then counts the number of players who have a score of 2 and checks if the count is even or odd. If the count is even, it prints \\\&quot;YES\\\&quot;, otherwise it prints \\\&quot;NO\\\&quot;.\&quot;,\&quot;/src/begginerLvevelSecondHalf/EndSorted.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;End Sorted\\\&quot; problem. The program takes an input of the number of test cases and the length of the array, and then for each test case, it finds the minimum number of moves required to sort the array in ascending order, where the first element is 1 and the last element is the length of the array.\&quot;,\&quot;/src/begginerLvevelSecondHalf/TravelPass.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Travel Pass\\\&quot; problem. The program takes input for the number of test cases, the length of the string, the cost of a 0 and a 1, and the string itself. It then calculates the minimum cost to travel by counting the number of 0s and 1s in the string and multiplying them by their respective costs. The result is then printed for each test case.\&quot;,\&quot;/src/begginerLvevelSecondHalf/Weeding.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that solves a problem related to weeding. The program takes input for the number of test cases, the number of weeds, the maximum height of the weeds, and the height of the last weed. It then checks if the height of the last weed plus the allowed increase in height is less than or equal to the maximum height, and prints \\\&quot;Yes\\\&quot; or \\\&quot;No\\\&quot; accordingly.\&quot;,\&quot;/src/begginerLvevelSecondHalf/GameOfPooks.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that solves the \\\&quot;Game of Pooks\\\&quot; problem. The program takes an integer `t` as input, which represents the number of test cases, and then for each test case, it takes an integer `n` as input. The program then prints the minimum number of moves required to win the game, based on the value of `n`. If `n` is 1, the program prints 1. If `n` is less than 4, the program prints `n-1`. Otherwise, the program prints `n`.\&quot;,\&quot;/src/begginerLevel/ChefAndSocks.java\&quot;:\&quot;This file contains a single class `ChefAndSocks` that solves a problem related to a chef\\u0027s buying power and the cost of jackets and socks.\\n\\n`ChefAndSocks`: This class contains a main method that takes in the cost of a jacket, the cost of a sock, and the chef\\u0027s buying power, and determines whether the chef is \\\&quot;Lucky\\\&quot; or \\\&quot;Unlucky\\\&quot; based on the number of socks they can buy with the remaining money after buying the jacket.\\n\\n`main`: This function is the entry point of the program. It reads the input values, calculates the remaining money after buying the jacket, and determines whether the chef is \\\&quot;Lucky\\\&quot; or \\\&quot;Unlucky\\\&quot; based on whether the number of socks that can be bought with the remaining money is even or odd.\&quot;,\&quot;/src/begginerLvevelSecondHalf/BreakTheStick.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Break the Stick\\\&quot; problem. The program takes input for the number of test cases, the length of the stick, and the number of breaks allowed. It then determines whether it is possible to break the stick into two equal parts using the given number of breaks.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndSubarrays.java\&quot;:\&quot;This file contains a single class `ChefAndSubarrays` that solves a problem related to finding subarrays where the sum of elements is equal to the product of elements.\\n\\n`ChefAndSubarrays`: This class solves the problem of finding the number of subarrays in a given array where the sum of elements is equal to the product of elements.\\n\\n`main`: This function is the entry point of the program. It takes input, processes the data, and prints the output.\&quot;,\&quot;/src/begginerLvevelSecondHalf/TableStrength.java\&quot;:\&quot;This file contains a single class `TableStrength` that solves a problem related to table strength.\\n\\n`TableStrength`: This class contains a solution to the table strength problem, where the goal is to find the maximum product of an element and its index in a given array.\\n\\n`main`: This function is the entry point of the program. It takes input, performs the necessary operations, and prints the output.\&quot;,\&quot;/src/begginerLevel/MalivkaIsPeculiarAboutColorOfBallons.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to the color of balloons. The program takes input from the user, counts the number of \\u0027a\\u0027 and \\u0027b\\u0027 characters in the input string, and then prints the minimum of the two counts.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndTwoStrings.java\&quot;:\&quot;This file contains a single class `ChefAndTwoStrings` and a single function `chefAndTwoStrings`.\\n\\n`ChefAndTwoStrings`: This class contains the main entry point of the program, which reads input, calls the `chefAndTwoStrings` function, and prints the output.\\n\\n`chefAndTwoStrings`: This function takes two strings `s1` and `s2` as input, and calculates the minimum and maximum differences between the two strings, considering the \\u0027?\\u0027 character as a wildcard.\\n\\nThe purpose of this program is to solve the \\\&quot;Chef and Two Strings\\\&quot; problem, where the goal is to find the minimum and maximum differences between two strings, given that the \\u0027?\\u0027 character can be replaced by any character.\&quot;,\&quot;/src/begginerLevel/BestOfTwo.java\&quot;:\&quot;This file contains a single class `BestOfTwo` and two functions `solve()`.\\n\\n`BestOfTwo`: This class contains the main logic for solving the problem of finding the best score between Alice and Bob.\\n\\n`solve(int arr[])`: This function takes an array of 3 integers and returns the maximum score that can be obtained by selecting the two highest values.\\n\\n`solve(Scanner sc)`: This function takes a `Scanner` object as input, reads 3 integers, sorts them, and returns the sum of the two highest values.\\n\\nThe file solves a problem where two players, Alice and Bob, each have 3 scores, and the goal is to determine who has the higher score. The solution involves finding the maximum score for each player and comparing them to determine the winner or a tie.\&quot;,\&quot;/src/begginerLevel/Solubility.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that calculates the solubility of a substance based on given input parameters and prints the result.\\n\\nThe program takes input from the user, including the number of test cases, the percentage of the substance that is soluble, and the amount of the substance that is soluble and insoluble. It then calculates the total solubility of the substance and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndDolls.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Chef and Dolls\\\&quot; problem from the Beginner Level Second Half category. The program takes input from the user, performs an XOR operation on the input values, and prints the result, which represents the unique doll type.\&quot;,\&quot;/src/begginerLevel/ChefAndRaces.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that solves the \\\&quot;Chef and Races\\\&quot; problem from the Beginner Level category on a coding platform. The program takes input for the number of test cases, and for each test case, it takes the values of `x`, `y`, `a`, and `b`. It then calculates the number of races in which the chef can participate and prints the result.\&quot;,\&quot;/src/begginerLevel/DetermineTheWinner.java\&quot;:\&quot;This file contains a single class `DetermineTheWinner` that determines the winner of a contest based on the number of problems solved and the number of participants.\\n\\n`DetermineTheWinner`: This class determines the winner of a contest based on the number of problems solved and the number of participants.\\n\\n`main`: This function reads input from the user, calculates the winner of the contest, and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChristmasCandy.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Christmas Candy\\\&quot; problem. The program takes input for the number of friends and the number of candies each friend has, and then calculates the number of friends who did not receive the maximum number of candies.\&quot;,\&quot;/src/begginerLvevelSecondHalf/PermutationAndModulus.java\&quot;:\&quot;This file contains a single class named `PermutationAndModulus` and does not have any functions defined within it. The file appears to be a placeholder for a class that may be used to explore concepts related to permutations and modulus operations, but the current implementation is empty.\\n\\n`PermutationAndModulus`: A class that may be used to explore concepts related to permutations and modulus operations.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ABPlusC.java\&quot;:\&quot;This file contains a single class `ABPlusC` and a single function `main()`.\\n\\n`ABPlusC`: This class solves the problem of finding three integers A, B, and C such that A + B + C \\u003d x, where x is a given input.\\n\\n`main()`: This function takes input from the user, finds the values of A, B, and C that satisfy the given condition, and prints them out.\&quot;,\&quot;/src/begginerLvevelSecondHalf/MaximumScore.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes user input, processes it, and prints the maximum score that can be obtained by flipping the minimum number of 0s in a binary array.\\n\\nThe file is a Java program that solves the \\\&quot;Maximum Score\\\&quot; problem, where the goal is to find the maximum score that can be obtained by flipping the minimum number of 0s in a binary array. The program takes input from the user, processes the binary array, and prints the maximum score.\&quot;,\&quot;/src/begginerDSA/PracticeProblemMarioAndTheBrokenString.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Mario and the Broken String\\\&quot; problem. The program takes input from the user, splits the input string into two halves, and checks if the two halves are equal. If they are equal, it prints \\\&quot;Yes\\\&quot;, otherwise it prints \\\&quot;No\\\&quot;. The program runs for a given number of test cases.\&quot;,\&quot;/src/begginerLvevelSecondHalf/FinalSum.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function reads input, calculates the sum of the elements and the sum of the parity of the ranges, and prints the final sum.\\n\\nThe file is a Java program that solves a problem where the user inputs the number of elements, the number of queries, the elements, and the ranges for the queries. The program calculates the sum of the elements and the sum of the parity of the ranges, and prints the final sum.\&quot;,\&quot;/src/begginerLevel/BodyMassIndex.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that calculates the Body Mass Index (BMI) for a given set of input values and prints the corresponding BMI category.\\n\\nThe program takes in the number of test cases `t` and then for each test case, it reads the weight `m` and height `h` of a person, calculates the BMI, and prints the corresponding BMI category (1 for underweight, 2 for normal, 3 for overweight, and 4 for obese).\&quot;,\&quot;/src/begginerLevel/TwoRooks.java\&quot;:\&quot;This file contains a single class `TwoRooks` and a single function `main()`.\\n\\n`TwoRooks`: This class checks if two rooks on a chessboard can attack each other.\\n\\n`main()`: This function takes input from the user, checks if the two rooks can attack each other, and prints the result.\\n\\nThe file is a simple program that determines whether two rooks on a chessboard can attack each other based on their positions.\&quot;,\&quot;/src/contest/ChessOlympaid.java\&quot;:\&quot;This file contains a single class `ChessOlympaid` that solves a problem related to a chess competition.\\n\\n`ChessOlympaid`: This class determines whether a team can win the chess competition based on the current scores and the remaining games.\\n\\n`main`: This function takes input for the current scores of the team and the opponent, calculates the maximum possible points for the team, and compares it to the opponent\\u0027s current points to determine if the team can win the competition.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ProcessingAString.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that processes a string input and calculates the sum of all the digits present in the string. The program takes multiple input strings, processes each one, and prints the sum of the digits in the output.\&quot;,\&quot;/src/begginerLvevelSecondHalf/AirPortManagement.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function is the entry point of the program, which takes input from the user, processes the data, and prints the output.\\n\\nThe program is designed to manage an airport\\u0027s schedule. It takes input for the arrival and departure times of flights, and then calculates the maximum number of flights that can be handled simultaneously at the airport.\&quot;,\&quot;/src/begginerLvevelSecondHalf/EasyMath.java\&quot;:\&quot;This file contains a single class `EasyMath` and two functions `main()` and `solve()`.\\n\\n`EasyMath`: This class contains the main logic for solving the problem of finding the maximum sum of digits of the product of any two elements in a given array.\\n\\n`main()`: This function takes input, processes the data, and calls the `solve()` function to find the maximum sum of digits of the product of any two elements in the array.\\n\\n`solve()`: This function calculates the sum of digits of a given number.\&quot;,\&quot;/src/begginerLvevelSecondHalf/PetStore.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to pet stores. The program takes input for the number of test cases and the number of pets in each test case, and then determines whether the number of pets of each type is even or not. If the number of pets of each type is even, the program prints \\\&quot;YES\\\&quot;, otherwise it prints \\\&quot;NO\\\&quot;.\&quot;,\&quot;/src/begginerLevel/RedLightGreenLight.java\&quot;:\&quot;This file contains a single class `RedLightGreenLight` that solves the \\\&quot;Red Light Green Light\\\&quot; problem. The program takes input for the number of test cases, the number of people, and the height of the person. It then counts the number of people whose height is greater than the given height and prints the result.\\n\\n`RedLightGreenLight`: A class that solves the \\\&quot;Red Light Green Light\\\&quot; problem.\\n\\n`main`: The main function that takes input, processes the data, and prints the output.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ValidMinimum.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that checks if the minimum of three numbers is valid. The program takes input from the user, sorts the three numbers, and then checks if the first two numbers are equal. If they are, it prints \\\&quot;YES\\\&quot;, otherwise it prints \\\&quot;NO\\\&quot;.\&quot;,\&quot;/src/begginerLevel/SelfDefenceTraining.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that reads in a series of integers from the user, and for each set of integers, it counts the number of integers that are between 10 and 60 (inclusive) and prints the result.\\n\\nThe program starts by creating a `Scanner` object to read input from the user. It then reads in an integer `t` that represents the number of sets of integers to process. For each set, it reads in an integer `n` that represents the number of integers in the set, and then reads in `n` integers and counts the number of integers that are between 10 and 60 (inclusive). Finally, it prints the count for each set of integers.\&quot;,\&quot;/src/begginerLvevelSecondHalf/SubOrSwap.java\&quot;:\&quot;This file contains a single class and one function:\\n\\n`SubOrSwap`: This class contains a main method that takes input from the user, calls the `gcd` function to find the greatest common divisor of the input numbers, and prints the result.\\n\\n`gcd`: This function calculates the greatest common divisor of two integers using the Euclidean algorithm.\&quot;,\&quot;/src/begginerLevel/OlympicsRanking.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that compares the total number of medals (gold, silver, and bronze) between two teams and prints the team with the higher total.\\n\\nThe program takes input for the number of gold, silver, and bronze medals for two teams, and then compares the total number of medals for each team. It then prints the team number (1 or 2) that has the higher total.\&quot;,\&quot;/src/begginerLevel/MarioTrtansformation.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes an integer input `t` and then for each of the `t` inputs, it determines whether the input number is \\\&quot;Normal\\\&quot;, \\\&quot;Huge\\\&quot;, or \\\&quot;Small\\\&quot; based on the remainder of the input number when divided by 3.\&quot;,\&quot;/src/begginerLevel/CheflandVisa.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that checks if a person\\u0027s visa requirements are met based on certain criteria. The program takes input from the user, which includes the minimum and maximum values for three different parameters, and then checks if the person\\u0027s values meet the visa requirements. If the person\\u0027s values are greater than or equal to the minimum values, the program prints \\\&quot;Yes\\\&quot;, otherwise it prints \\\&quot;No\\\&quot;.\&quot;,\&quot;/src/begginerLevel/GuessTheBottomFace.java\&quot;:\&quot;This file does not contain any classes or functions. It is a simple program that takes an integer input `x` and prints the bottom face of a dice, which is `7 - x`.\\n\\nThe program first takes an integer `t` as input, which represents the number of test cases. Then, for each test case, it takes an integer `x` as input and prints the bottom face of the dice, which is `7 - x`.\&quot;,\&quot;/src/begginerLvevelSecondHalf/DannyWantsToKnow.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem where Danny wants to know the sum of the products of corresponding elements in two arrays for a given range of indices.\\n\\nThe program takes input for the size of the arrays, the number of queries, the elements of the two arrays, and the range of indices for each query. It then calculates the sum of the products of the corresponding elements in the given range and prints the result for each query.\&quot;,\&quot;/src/contest/NearlyEqual.java\&quot;:\&quot;This file contains a single class `NearlyEqual` and two functions `main` and `calculateHammingDistance`.\\n\\n`NearlyEqual`: This class solves the problem of finding the minimum Hamming distance between a substring of a given string and another given string.\\n\\n`main`: This function is the entry point of the program, which takes input, calculates the minimum Hamming distance, and prints the result.\\n\\n`calculateHammingDistance`: This function calculates the Hamming distance between two given strings.\&quot;,\&quot;/src/prepareDSAInterviews/basicProgrammingOne/NumberOfRectangles.java\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`main`: This function takes input from the user, calculates the number of rectangles that can be formed within a given grid of size `n` x `m`, and prints the result.\\n\\nThe file is a Java program that solves the problem of finding the number of rectangles that can be formed within a given grid of size `n` x `m`. The program takes input from the user, performs the necessary calculations, and prints the result.\&quot;,\&quot;/src/begginerLevel/CircularTrack.java\&quot;:\&quot;This file contains a single class named `CircularTrack` and does not have any functions defined within it. The file appears to be a starting point for a program that deals with a circular track, but there is no implementation provided in the current code.\\n\\n`CircularTrack`: This class is likely intended to represent a circular track, but the current implementation is empty and does not provide any functionality.\&quot;,\&quot;/src/begginerLevel/BlackCellsInChessBoard.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that calculates the number of black cells in a chessboard of size `n x n` and prints the result.\\n\\nThe program takes an integer `n` as input, representing the size of the chessboard, and then calculates the number of black cells using the formula `(n^2) / 2`. The result is then printed to the console.\&quot;,\&quot;/src/arrays/Candies.java\&quot;:\&quot;This file contains the `Candies` class and two functions: `isSplitable` and `subarraySum`.\\n\\n`Candies`: This class contains the main method that takes input, calls the `subarraySum` function, and prints the result.\\n\\n`isSplitable`: This function checks if the given array can be split into two subarrays with equal sum.\\n\\n`subarraySum`: This function finds the number of subarrays in the given array that have a sum equal to the target value `k`.\&quot;,\&quot;/src/begginerLevel/Scorehigh.java\&quot;:\&quot;This file contains a single class `Scorehigh` and a single function `main()`.\\n\\n`Scorehigh`: This class contains the main logic for the program, which reads input, finds the maximum score among four scores, and prints the maximum score.\\n\\n`main()`: This function is the entry point of the program, which reads the number of test cases, and for each test case, reads four scores and prints the maximum score.\\n\\nThe file as a whole is a simple program that takes input of multiple test cases, each with four scores, and prints the maximum score for each test case.\&quot;,\&quot;/src/begginerLvevelSecondHalf/OnlyPluses.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: The main function that takes user input, checks if a given string is a substring of another string, and prints the result.\\n\\n`isSubstring`: A function that checks if a given string is a substring of another string.\\n\\nThe file is a Java program that takes two strings as input and checks if the second string is a substring of the first string. It then prints \\\&quot;YES\\\&quot; if the second string is a substring, and \\\&quot;NO\\\&quot; otherwise.\&quot;,\&quot;/src/begginerLvevelSecondHalf/Chocolate.java\&quot;:\&quot;This file contains a single class `Chocolate` and a single function `main()`.\\n\\n`Chocolate`: This class contains the main logic for the program.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user and performs some operations on it.\\n\\nThe file appears to be a Java program that solves a problem related to chocolate. It takes input from the user, performs some operations, and likely outputs the result. However, without more context, it\\u0027s difficult to provide a more detailed summary of the program\\u0027s functionality.\&quot;,\&quot;/src/begginerLvevelSecondHalf/EvenSumSubArrayTwo.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Even Sum Subarray Two\\\&quot; problem. The program takes an input of the number of test cases and the elements of an array for each test case. It then checks if the sum of the array elements is even or odd. If the sum is even, it prints 0. If the sum is odd, it checks if there are at least two odd elements in the array. If so, it prints 2, otherwise, it prints -1.\&quot;,\&quot;/src/begginerLevel/MaxNutrition.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that reads input from the user, which includes the number of test cases, the number of fruits, and the nutrition values of each fruit. The program then stores the nutrition values in a HashMap, but does not perform any further processing or output.\&quot;,\&quot;/src/begginerLvevelSecondHalf/TheAttackOfQueen.java\&quot;:\&quot;This file contains a single class `TheAttackOfQueen` and a single function `main()`.\\n\\n`TheAttackOfQueen`: This class contains the main logic for solving the \\\&quot;Attack of Queen\\\&quot; problem.\\n\\n`main()`: This function is the entry point of the program, which takes input, performs the necessary calculations, and prints the output.\\n\\nThe program solves the \\\&quot;Attack of Queen\\\&quot; problem, where the goal is to find the minimum number of moves required for a queen to attack a given position on a chessboard. The program takes input for the size of the chessboard, the queen\\u0027s current position, and the target position, and then calculates the minimum number of moves required for the queen to reach the target position.\&quot;,\&quot;/src/begginerLevel/CarsAndBikes.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes an integer input `t` and then for each of the `t` inputs, it checks if the number is divisible by 4 and if the remainder of the number divided by 4 is even. It then prints \\\&quot;no\\\&quot; if the number is divisible by 4, and \\\&quot;Yes\\\&quot; if the remainder of the number divided by 4 is even.\&quot;,\&quot;/src/begginerLevel/MiniumCarsRequired.java\&quot;:\&quot;This file contains a single class `MiniumCarsRequired` that solves a problem related to finding the minimum number of cars required to transport a given number of people.\\n\\n`MiniumCarsRequired`: This class calculates the minimum number of cars required to transport a given number of people, assuming that each car can carry up to 4 people.\\n\\n`main`: This function takes input from the user, representing the number of people to be transported, and calculates the minimum number of cars required to transport them.\&quot;,\&quot;/src/begginerDSA/ContinuationOfBasicMath.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes an integer `t` as input, and for each of the `t` cases, it takes an integer `n` as input and prints all the divisors of `n` in ascending order.\\n\\nThe program uses the `Scanner` class to read input from the user, and the `ArrayList` and `Arrays` classes to store and manipulate the divisors of `n`.\&quot;,\&quot;/src/begginerDSA/ReverseNumbersManual.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes two integer inputs from the user, reverses the second input, and then checks if the reversed number is equal to the first input. If they are equal, it prints \\\&quot;Yes\\\&quot;, otherwise it prints \\\&quot;No\\\&quot;.\&quot;,\&quot;/src/begginerLevel/BuildingRace.java\&quot;:\&quot;This file contains a single class `BuildingRace` that solves a problem related to a building race between two contestants, Chef and Chefina. The program takes input for the height and speed of each contestant and determines the winner or if it\\u0027s a tie.\\n\\n`BuildingRace`: This class solves the problem of a building race between two contestants, Chef and Chefina.\\n\\n`main`: This function is the entry point of the program. It reads the input, calculates the speed of each contestant, and determines the winner or if it\\u0027s a tie.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndGroups.java\&quot;:\&quot;This file contains a single class `ChefAndGroups` that solves the \\\&quot;Chef and Groups\\\&quot; problem from the Beginner Level Second Half category.\\n\\n`ChefAndGroups`: This class contains the main logic to solve the \\\&quot;Chef and Groups\\\&quot; problem, which involves counting the number of groups of consecutive \\u00271\\u0027s in a given string.\\n\\n`main`: This function is the entry point of the program. It reads the input, processes the string, and prints the count of groups of consecutive \\u00271\\u0027s.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ConvertToPermutation.java\&quot;:\&quot;This file contains a single class `ConvertToPermutation` with no functions. The file appears to be a Java class that is part of a package called `begginerLvevelSecondHalf`, but it does not contain any implementation details. The purpose of this class is not clear from the provided code.\&quot;,\&quot;/src/begginerLvevelSecondHalf/GroupAsssignment.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes user input, processes it, and determines whether a group of people can be divided into equal-sized groups based on their party preferences.\\n\\nThe file is a Java program that solves a problem related to grouping people based on their party preferences. It takes input for the number of people and their party preferences, and then checks if the people can be divided into equal-sized groups based on their preferences.\&quot;,\&quot;/src/begginerLevel/ElectionsInChefland.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that reads in a series of integers representing the number of votes received by each candidate in an election, and then counts the number of candidates who received at least a certain threshold number of votes (x). The program then prints out the count for each test case.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndGameWithSequence.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to a game with a sequence of numbers. The program takes input for the number of test cases and the sequence of numbers for each test case, and then determines the minimum number of moves required to make all the numbers in the sequence even.\&quot;,\&quot;/src/begginerLvevelSecondHalf/PlusTwoORMinusOne.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer input `t` and then for each input `y`, it checks if `y` is 0, and if so, it prints 1, otherwise it prints `y * 3`.\\n\\nThe program is designed to solve a problem where the user needs to either add 2 to the input or subtract 1 from the input, depending on the value of the input.\&quot;,\&quot;/src/begginerLevel/ASaveWaterSaveLife.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to water consumption. The program takes input for the number of test cases, and for each test case, it calculates the total water consumed based on the given parameters (h, x, y, c) and then prints \\\&quot;Yes\\\&quot; if the consumed water is greater than or equal to the available water (c), and \\\&quot;No\\\&quot; otherwise.\&quot;,\&quot;/src/begginerLvevelSecondHalf/EvenSumSubArray.java\&quot;:\&quot;This file contains a single class `EvenSumSubArray` and a single function `isValid`.\\n\\n`EvenSumSubArray`: This class contains a main method that takes input from the user, checks if the input string is a palindrome, and prints \\\&quot;YES\\\&quot; if it is, and \\\&quot;NO\\\&quot; otherwise.\\n\\n`isValid`: This function takes a string as input and checks if it is a palindrome by comparing the characters at the beginning and end of the string, and returning `true` if they are all the same, and `false` otherwise.\&quot;,\&quot;/src/begginerLvevelSecondHalf/MaximiseXOR.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes input from the user, calculates the maximum XOR value that can be obtained by combining the binary strings, and prints the result.\\n\\nThe file is a Java program that solves the \\\&quot;Maximise XOR\\\&quot; problem. It takes input of multiple test cases, where each test case consists of two binary strings. The program then calculates the maximum XOR value that can be obtained by combining the two strings and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndSteps.java\&quot;:\&quot;This file contains a single class `ChefAndSteps` that solves a problem related to Chef\\u0027s steps. The program takes input from the user, processes the distances, and outputs a string representing whether each distance is divisible by a given number `k`.\\n\\n`ChefAndSteps`: A class that solves the problem of determining which distances are divisible by a given number `k`.\\n\\n`main`: The main function that takes input, processes the distances, and outputs the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/AnotherCardGameProblem.java\&quot;:\&quot;This file contains a single class `AnotherCardGameProblem` and two functions `calcGCD1` and `calcGCD`.\\n\\n`AnotherCardGameProblem`: This class solves a problem related to a card game, where it calculates the power of two players based on their card values and determines the winner.\\n\\n`calcGCD1`: This function calculates the greatest common divisor (GCD) of two numbers using a recursive approach.\\n\\n`calcGCD`: This function calculates the greatest common divisor (GCD) of two numbers using an iterative approach.\\n\\nThe file as a whole solves a problem related to a card game, where it takes input for the card values of two players, calculates their respective powers, and determines the winner based on the comparison of their powers.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndSubarray.java\&quot;:\&quot;This file contains a single class `ChefAndSubarray` that solves a problem related to finding the maximum length of a contiguous subarray with non-zero elements.\\n\\n`ChefAndSubarray`: This class contains the main logic to solve the problem of finding the maximum length of a contiguous subarray with non-zero elements.\\n\\n`main`: This function reads the input, processes the array, and prints the maximum length of a contiguous subarray with non-zero elements.\&quot;,\&quot;/src/begginerLvevelSecondHalf/StickBreak.java\&quot;:\&quot;This file contains a single class `StickBreak` that solves a problem related to breaking sticks.\\n\\n`StickBreak`: This class solves the problem of breaking sticks into `k` equal parts, and determines whether it is possible to do so without any remainder.\\n\\n`main`: This function is the entry point of the program. It takes input from the user, processes it, and prints the output.\&quot;,\&quot;/src/begginerLevel/ChefAndSnackDown.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that checks whether a given year is a year in which the \\\&quot;SnackDown\\\&quot; contest was hosted. The program takes input from the user, and for each input, it checks if the year is one of the years in which the contest was hosted (2010, 2015, 2016, 2017, 2019). If the year is found, it prints \\\&quot;HOSTED\\\&quot;, otherwise it prints \\\&quot;NOT HOSTED\\\&quot;.\&quot;,\&quot;/src/begginerLvevelSecondHalf/MaskPolicy.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Mask Policy\\\&quot; problem. The program takes an input `t` representing the number of test cases, and for each test case, it takes two integers `n` and `a` representing the total number of people and the number of people who have masks, respectively. The program then prints the minimum of `a` and `(n - a)`, which represents the minimum number of people who need to wear masks to comply with the policy.\&quot;,\&quot;/src/begginerLevel/DiceNumber.java\&quot;:\&quot;This file contains a single class `DiceNumber` and two functions `main()` and `solve()`.\\n\\n`DiceNumber`: This class contains the main logic for the program, which involves taking input, processing it, and printing the result.\\n\\n`main()`: This function is the entry point of the program. It reads input, processes it, and calls the `solve()` function to determine the winner.\\n\\n`solve()`: This function takes the scores of Alice and Bob and prints the winner or a tie.\\n\\nThe program is designed to solve a problem where two players, Alice and Bob, each roll three dice and create a three-digit number from the results. The player with the higher number wins the game.\&quot;,\&quot;/src/begginerLevel/SmallFactorials.java\&quot;:\&quot;This file contains a single class `SmallFactorials` that calculates the factorial of a given number using the `BigInteger` class and a custom implementation.\\n\\n`SmallFactorials`: A class that calculates the factorial of a given number.\\n\\n`main`: The main function that takes user input, calculates the factorial, and prints the result.\&quot;,\&quot;/src/begginerLevel/CanReach.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that checks whether a given point (x, y) can be reached by a person who can only move in multiples of a given step size K. The program takes input for the number of test cases, the coordinates (x, y), and the step size K, and then prints \\\&quot;Yes\\\&quot; if the point can be reached, and \\\&quot;No\\\&quot; otherwise.\&quot;,\&quot;/src/begginerLevel/TheCoolerDilemma.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;The Cooler Dilemma\\\&quot; problem. The program takes an input of the number of test cases, and for each test case, it takes two integers `x` and `y`. It then calculates the number of coolers that can be bought with the given budget `y` and the cost of each cooler `x`, and prints the result.\&quot;,\&quot;/src/begginerLevel/Runningcomparsion.java\&quot;:\&quot;This file contains a single class `Runningcomparsion` and two functions `main` and `happyDay`.\\n\\n`Runningcomparsion`: This class contains the main logic for the program, which compares the running distances of Alice and Bob and determines the number of happy days.\\n\\n`main`: This function is the entry point of the program, which takes input for the number of test cases and the running distances of Alice and Bob, and then calls the `happyDay` function to determine the number of happy days.\\n\\n`happyDay`: This function takes the running distances of Alice and Bob and determines the number of happy days, where a happy day is one where both Alice and Bob are happy with their running distances.\&quot;,\&quot;/src/begginerLvevelSecondHalf/XorPalindrome.java\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`main`: This function takes input from the user, checks if the given string is a palindrome, and prints the minimum number of characters that need to be changed to make it a palindrome.\\n\\nThe file is a Java program that solves the \\\&quot;XOR Palindrome\\\&quot; problem, where the goal is to find the minimum number of characters that need to be changed in a given string to make it a palindrome.\&quot;,\&quot;/src/begginerLevel/ChefAndBattery.java\&quot;:\&quot;This file contains a single class `ChefAndBattery` that solves a problem related to battery charging.\\n\\n`ChefAndBattery`: This class contains a solution to the problem of charging a battery from a given initial value to 50.\\n\\n`main`: This function is the entry point of the program. It reads input from the user, performs the battery charging operation, and prints the number of steps required to reach the target value of 50.\&quot;,\&quot;/src/begginerLvevelSecondHalf/CodeChechStreak.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes user input, processes the data, and outputs the winner between \\\&quot;Om\\\&quot; and \\\&quot;Addy\\\&quot; or a \\\&quot;Draw\\\&quot; based on the maximum consecutive streak of non-zero values in their respective arrays.\\n\\nThe file is a Java program that implements a code checking streak problem. It takes input for the number of test cases and the values for two arrays, \\\&quot;addy\\\&quot; and \\\&quot;om\\\&quot;. It then calculates the maximum consecutive streak of non-zero values for each array and compares them to determine the winner or a draw.\&quot;,\&quot;/src/begginerLvevelSecondHalf/SartjakAndHisMagicGrid.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer `t` as input, and then prints a grid of `n` x `n` where each element is the value `1`. The program is designed to solve the \\\&quot;Sartjak and His Magic Grid\\\&quot; problem, where the goal is to create a magic grid with the given constraints.\&quot;,\&quot;/src/begginerLvevelSecondHalf/SlowStart.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Slow Start\\\&quot; problem from a beginner-level coding challenge. The program takes input for the number of test cases, and for each test case, it calculates the number of days it takes for a person to reach a certain height, given the initial height and the daily growth rate.\&quot;,\&quot;/src/begginerLvevelSecondHalf/CeilAndAMinusBProblem.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes two integer inputs, `A` and `B`, and calculates the difference `C \\u003d A - B`. If the last digit of `C` is 9, it prints `C-1`, otherwise, it prints `C+1`.\&quot;,\&quot;/src/prepareDSAInterviews/basicProgrammingOne/FindInteger.java\&quot;:\&quot;This file contains a single class `FindInteger` and one function `main()`.\\n\\n`FindInteger`: This class contains the main logic to find the number of bites required to finish a candy of length `N` where each bite is of length `K`.\\n\\n`main()`: This function takes input from the user, processes the input, and prints the output based on the given conditions.\\n\\nIn summary, this file is a Java program that solves the problem of finding the number of bites required to finish a candy of length `N` where each bite is of length `K`. If the length of the candy is not divisible by the bite size, the program returns `-1`.\&quot;,\&quot;/src/begginerLevel/SumsInATraingle.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer input `t` and then prints a square pattern of numbers for `n` lines, where `n` is the second input.\&quot;,\&quot;/src/begginerLvevelSecondHalf/EqualString.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes input from the user, including the number of test cases and two strings for each test case, and performs some operation on the strings, but the specific operation is not clear from the provided code.\&quot;,\&quot;/src/begginerLevel/HardestProblemBet.java\&quot;:\&quot;This file contains a single class `HardestProblemBet` that solves a problem where three numbers are given, and the goal is to determine whether Alice, Bob, or a draw is the outcome.\\n\\n`HardestProblemBet`: This class solves the \\\&quot;Hardest Problem Bet\\\&quot; problem, where three numbers are given, and the goal is to determine whether Alice, Bob, or a draw is the outcome.\\n\\n`main`: This function takes input from the user, processes the three numbers, and outputs the result (Alice, Bob, or Draw) for each test case.\&quot;,\&quot;/src/begginerLevel/ChefAndHisFruitSalad.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that solves a problem related to Chef and his fruit salad. The program takes input of the number of test cases and the number of apples and oranges, and then calculates the maximum number of fruit salads that Chef can make.\&quot;,\&quot;/src/begginerLvevelSecondHalf/BuyingNewTablet.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes user input for the number of test cases, the number of tablets available, the budget, and the dimensions and prices of each tablet, and then prints the area of the largest tablet that can be bought within the budget, or \\\&quot;No tablet\\\&quot; if no tablet can be bought.\\n\\nThe file is a Java program that solves the \\\&quot;Buying New Tablet\\\&quot; problem, where the goal is to find the tablet with the largest area that can be bought within a given budget.\&quot;,\&quot;/src/begginerLevel/LargestAndSecondLargest.java\&quot;:\&quot;This file contains a single class `LargestAndSecondLargest` that has a single function `main()`. The purpose of this program is to find the largest and second-largest elements in an array of integers and print their sum.\\n\\n`LargestAndSecondLargest`: This class contains the main logic for finding the largest and second-largest elements in an array.\\n\\n`main()`: This function takes input from the user, finds the largest and second-largest elements in the array, and prints their sum.\&quot;,\&quot;/src/begginerLevel/ValidTriangle.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that checks whether the angles of a triangle are valid (i.e., the sum of the angles is 180 degrees). The program takes input from the user for the three angles of the triangle and prints \\\&quot;Yes\\\&quot; if the angles are valid, and \\\&quot;No\\\&quot; otherwise.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndStrings.java\&quot;:\&quot;This file contains a single class `ChefAndStrings` that solves a problem related to strings. The main function `main` reads input, processes the strings, and outputs the result.\\n\\n`ChefAndStrings`: A class that solves a problem related to strings.\\n\\n`main`: The main function that reads input, processes the strings, and outputs the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/TruthTellerAndLiars.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that solves a problem related to truth tellers and liars. The program takes input for the number of test cases, and for each test case, it takes the number of truth tellers and liars. If the number of truth tellers is greater than the number of liars, it prints the minimum number of people that can be formed by combining truth tellers and liars, otherwise, it prints -1.\&quot;,\&quot;/src/begginerLevel/UtkarshAndPacementTests.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to placement tests. The program takes input from the user, which includes three characters and two more characters, and then it outputs the character that matches either the first or the second of the two additional characters.\&quot;,\&quot;/src/begginerLvevelSecondHalf/MixingExtraordinaire.java\&quot;:\&quot;This file contains a single class `MixingExtraordinaire` that solves a problem related to mixing drinks.\\n\\n`MixingExtraordinaire`: This class takes input of the number of drinks and their quantities, and calculates the sum of all possible combinations of the products of pairs of drink quantities.\\n\\n`main`: This function is the entry point of the program. It reads the input, calculates the sum of all possible combinations, and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/TwoTrains.java\&quot;:\&quot;This file contains a single class `TwoTrains` and two functions `main` and `generateFibonacciNumbers`.\\n\\n`TwoTrains`: This class contains the main logic for solving the \\\&quot;Two Trains\\\&quot; problem.\\n\\n`main`: This function reads input, processes it, and prints the output for the \\\&quot;Two Trains\\\&quot; problem.\\n\\n`generateFibonacciNumbers`: This function generates an array of Fibonacci numbers up to the given length.\&quot;,\&quot;/src/begginerLvevelSecondHalf/PackagingCupcakes.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that solves a problem related to packaging cupcakes. The program takes an integer input `t` representing the number of test cases, and for each test case, it takes an integer input `n` representing the number of cupcakes. The program then calculates and prints the minimum number of boxes required to package the cupcakes, which is `(n / 2) + 1`.\&quot;,\&quot;/src/begginerDSA/CountPositiveAndNonZeroElements.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes input from the user, counts the number of positive, negative, and divisible-by-k elements in a list, and prints the results.\\n\\nThe file is a Java program that solves the problem of counting the number of positive, negative, and divisible-by-k elements in a list of integers. The program takes input from the user, processes the list, and outputs the counts for each category.\&quot;,\&quot;/src/begginerLevel/practiceProblemWordle.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the Wordle problem. The program takes an input `n` and then for each of the `n` cases, it reads two strings `s` and `t`, compares the characters at each position, and prints a string `m` that indicates whether each character is a \\\&quot;G\\\&quot; (green) or a \\\&quot;B\\\&quot; (black).\&quot;,\&quot;/src/begginerLevel/FindingSquareRoots.java\&quot;:\&quot;This file contains a single class `FindingSquareRoots` that has a single function `main()`. The purpose of this file is to take input from the user, store it in an array, and then print the array.\\n\\n`FindingSquareRoots`: A class that finds the square roots of a set of numbers.\\n\\n`main()`: The main function that takes input from the user, stores it in an array, and then prints the array.\&quot;,\&quot;/src/begginerLevel/BathInWinters.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that calculates the total number of buckets required to take a bath during the winter, given the amount of water required per bath and the capacity of each bucket.\\n\\nThe program takes input from the user, including the number of test cases and the values for the amount of water required per bath and the capacity of each bucket. It then calculates the total number of buckets required and prints the result for each test case.\&quot;,\&quot;/src/arrays/CountOfMaxium.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes user input, processes an array of integers, and prints the minimum value and the frequency of the maximum occurring value in the array.\\n\\nThe file is a Java program that solves the problem of finding the minimum value among the elements that occur the maximum number of times in an array.\&quot;,\&quot;/src/begginerLvevelSecondHalf/AverageNumber.java\&quot;:\&quot;This file contains a single class `AverageNumber` and a single function `main()`.\\n\\n`AverageNumber`: This class contains the main logic for calculating the average of a set of numbers.\\n\\n`main()`: This function is the entry point of the program, which takes user input, processes it, and performs the necessary calculations to find the average.\\n\\nThe file does not contain any other classes or functions. It appears to be a program that calculates the average of a set of numbers, where the user provides the number of elements, the values of the elements, and a target average value. The program then processes this input and performs the necessary calculations.\&quot;,\&quot;/src/begginerLevel/AirConditionerTemperature.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes input of three integers `a`, `b`, and `c`, and checks if `a` is less than or equal to `b` and `c` is less than or equal to `b`. If the condition is true, it prints \\\&quot;Yes\\\&quot;, otherwise it prints \\\&quot;No\\\&quot;. The program runs for `t` number of test cases.\&quot;,\&quot;/src/begginerLevel/ChefAndString.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Chef and String\\\&quot; problem from the Beginner Level category on a coding platform. The program takes input from the user, processes the input string, and outputs the number of pairs of adjacent characters that are different.\\n\\nThe program\\u0027s main functionality can be summarized as follows:\\n\\nThe program reads in a number of test cases from the user, and for each test case, it reads in a string. It then iterates through the string, counting the number of pairs of adjacent characters that are different, and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/PieceOfCake1.java\&quot;:\&quot;This file contains a single class `PieceOfCake1` that solves a problem related to finding if a given string can be divided into two equal halves, where each half has the same frequency of characters.\\n\\n`PieceOfCake1`: This class solves the \\\&quot;Piece of Cake\\\&quot; problem, where the goal is to determine if a given string can be divided into two equal halves, where each half has the same frequency of characters.\\n\\n`main`: This function is the entry point of the program, which takes input, processes the string, and prints the result.\&quot;,\&quot;/src/begginerLevel/LaLiga.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that reads input from the user, processes the data, and outputs the winner between Barcelona and Real Madrid based on the given scores.\\n\\nThe program first takes an integer `t` as input, which represents the number of test cases. Then, for each test case, it reads the scores of the four teams (Barcelona, Malaga, Real Madrid, and Eibar) and determines the winner based on the given conditions. If Barcelona has a higher score than Eibar and Malaga has a higher score than Real Madrid, the program outputs \\\&quot;Barcelona\\\&quot;. Otherwise, it outputs \\\&quot;RealMadrid\\\&quot;.\&quot;,\&quot;/src/begginerLvevelSecondHalf/YogaClass.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to a yoga class. The program takes input for the number of students, the cost of a type 1 yoga class, and the cost of a type 2 yoga class. It then calculates the maximum earnings that can be obtained by either having all students take the type 1 class or a combination of type 1 and type 2 classes, and prints the result.\&quot;,\&quot;/src/begginerLevel/GradeltheSteel.java\&quot;:\&quot;This file contains a single class `GradeltheSteel` that implements a program to determine the grade of steel based on certain criteria.\\n\\n`GradeltheSteel`: This class determines the grade of steel based on the given criteria of hardness, carbon content, and tensile strength.\\n\\n`main`: This function reads the input, processes the data, and prints the corresponding grade of steel based on the given criteria.\\n\\nThe file also includes a while loop that prints \\\&quot;NEVER GIVE UP\\\&quot; indefinitely if a boolean variable `alive` is true, and prints \\\&quot;You are dead\\\&quot; if the variable is false.\&quot;,\&quot;/src/begginerLevel/CyclicQuadrilateral.java\&quot;:\&quot;This file contains a single class `CyclicQuadrilateral` and a single function `main()`.\\n\\n`CyclicQuadrilateral`: This class checks whether a given quadrilateral is cyclic or not.\\n\\n`main()`: This function takes input for the angles of a quadrilateral, calculates the sum of the opposite angles, and determines whether the quadrilateral is cyclic or not.\&quot;,\&quot;/src/begginerLevel/CostOfGroceries.java\&quot;:\&quot;This file contains a single class `CostOfGroceries` that solves a problem related to the cost of groceries.\\n\\n`CostOfGroceries`: This class calculates the total cost of groceries that meet a minimum freshness value.\\n\\n`main`: This function takes input, processes it, and outputs the total cost of groceries that meet the minimum freshness value.\&quot;,\&quot;/src/arrays/MergeTwoSortedArrays.java\&quot;:\&quot;This file contains a single class `MergeTwoSortedArrays` and a single function `probabilityOfHeads`.\\n\\n`MergeTwoSortedArrays`: This class merges two sorted arrays into a single sorted array.\\n\\n`probabilityOfHeads`: This function calculates the probability of getting exactly `target` heads after tossing a set of coins with given probabilities of heads.\&quot;,\&quot;/src/begginerLevel/ExpertSetter.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes input of two integers `x` and `y`, calculates the ratio `x/y`, and prints \\\&quot;Yes\\\&quot; if the ratio is greater than or equal to 0.5, and \\\&quot;No\\\&quot; otherwise. The program runs for `t` number of test cases.\&quot;,\&quot;/src/begginerLevel/EmotionalProximity.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that calculates the emotional proximity of a person based on given parameters. The program takes input for the number of test cases, and for each test case, it calculates the final emotional proximity based on the given values for `p`, `x`, `y`, and `z`. The program then prints the calculated emotional proximity for each test case.\&quot;,\&quot;/src/begginerLvevelSecondHalf/TheOneWhereItAllBegan.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer input `t` and then for each of the `t` cases, it takes an integer input `n` and checks if `n` is greater than 21. If `n` is greater than 21, it prints \\\&quot;YES\\\&quot;, otherwise it prints \\\&quot;NO\\\&quot;.\&quot;,\&quot;/src/begginerLevel/GoodWeather.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes input from the user, representing the weather conditions for 7 days, and determines whether there were more sunny days than rainy days. The program then prints \\\&quot;Yes\\\&quot; if there were more sunny days, and \\\&quot;No\\\&quot; otherwise.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ThreeWayCommunications.java\&quot;:\&quot;This file contains a single class named `ThreeWayCommunications` and does not have any functions defined. The file appears to be a starting point for a program that may involve three-way communication, but there is no further implementation provided in the given code.\\n\\n`ThreeWayCommunications`: This class serves as a container for the main entry point of the program, but it does not have any functionality implemented yet.\&quot;,\&quot;/src/begginerLevel/AvoidConatc.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Avoid Contact\\\&quot; problem. The program takes input for the number of test cases and the values of `x` and `y`, and then calculates the minimum number of steps required to avoid contact between two people, based on the given conditions.\&quot;,\&quot;/src/begginerLvevelSecondHalf/LittleElephantAndCandies.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Little Elephant and Candies\\\&quot; problem. The program takes input for the number of test cases, the number of elephants, the total number of candies, and the number of candies each elephant has. It then calculates the total number of candies the elephants have and determines whether it is less than or equal to the total number of candies available. The program then prints \\\&quot;Yes\\\&quot; if the total number of candies the elephants have is less than or equal to the total number of candies available, and \\\&quot;No\\\&quot; otherwise.\&quot;,\&quot;/src/begginerLevel/SaleSeason.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that implements a simple sales season discount logic. The program takes an input value `x` representing the original price of an item, and then applies a discount based on the following rules:\\n\\n- If `x` is less than or equal to 100, the discounted price is `x`.\\n- If `x` is between 101 and 1000, the discounted price is `x - 25`.\\n- If `x` is between 1001 and 5000, the discounted price is `x - 100`.\\n- If `x` is greater than 5000, the discounted price is `x - 500`.\\n\\nThe program then prints the discounted price to the console.\&quot;,\&quot;/src/begginerLvevelSecondHalf/TestingRobot.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that simulates the movement of a robot on a one-dimensional line. The program takes input for the number of test cases, the initial position of the robot, and the sequence of left and right movements. It then calculates the number of unique positions the robot visits and prints the result.\&quot;,\&quot;/src/begginerDSA/ReviewProblem4.java\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`main`: This function takes input from the user, performs a character-by-character transformation on the input string, and prints the resulting string.\\n\\nThe file is a Java program that solves a problem where the user inputs a string, and the program outputs a new string where each character is the opposite character in the alphabet (e.g., \\u0027a\\u0027 becomes \\u0027z\\u0027, \\u0027b\\u0027 becomes \\u0027y\\u0027, etc.).\&quot;,\&quot;/src/begginerLevel/GCDandLCM.java\&quot;:\&quot;This file contains a single class `GCDandLCM` that calculates the Greatest Common Divisor (GCD) and Least Common Multiple (LCM) of two given numbers.\\n\\n`GCDandLCM`: A class that calculates the GCD and LCM of two numbers.\\n\\n`main`: The main function that takes input, calculates the GCD and LCM, and prints the results.\\n\\n`GCD`: A function that calculates the Greatest Common Divisor of two numbers using the Euclidean algorithm.\\n\\n`LCM`: A function that calculates the Least Common Multiple of two numbers using the formula `(a * b) / GCD(a, b)`.\&quot;,\&quot;/src/begginerLevel/HelpingChef.java\&quot;:\&quot;This file contains a single class `HelpingChef` and a single function `main()`.\\n\\n`HelpingChef`: This class contains the main logic for the program.\\n\\n`main()`: This function is the entry point of the program, which takes user input, processes it, and prints the appropriate output.\\n\\nThe program is designed to help a chef by checking if the given number is greater than 10. If the number is greater than 10, it prints \\\&quot;Thanks for help Chef!\\\&quot;, otherwise, it prints -1.\&quot;,\&quot;/src/begginerLevel/AvoidSquaresPlease.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer `t` as input, and then for each of the `t` cases, it takes an integer `n` as input and prints the numbers from 1 to `n` on a new line.\&quot;,\&quot;/src/begginerLevel/ChefAndLockoutDraws.java\&quot;:\&quot;This file contains a single class `ChefAndLockoutDraws` that solves a problem related to lockout draws. The main function `main` reads input, sorts an array, and checks if the first two elements sum up to the third element, printing \\\&quot;Yes\\\&quot; or \\\&quot;No\\\&quot; accordingly.\\n\\n`ChefAndLockoutDraws`: A class that solves a problem related to lockout draws.\\n\\n`main`: Reads input, sorts an array, and checks if the first two elements sum up to the third element, printing \\\&quot;Yes\\\&quot; or \\\&quot;No\\\&quot; accordingly.\&quot;,\&quot;/src/begginerLvevelSecondHalf/CielAndA_BProblem.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes two integers `a` and `b` as input, calculates the difference `c \\u003d a - b`, and then prints the value of `c` plus or minus 1 depending on whether the last digit of `c` is 9 or not.\&quot;,\&quot;/src/begginerLevel/nOtIMEtOwAIT.java\&quot;:\&quot;This file contains a single class `nOtIMEtOwAIT` and a single function `main()`.\\n\\n`nOtIMEtOwAIT`: This class contains the main logic for solving a problem where the goal is to determine if there exists at least one element in an array that, when added to a given value `x`, equals a target value `h`.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user, processes the input, and outputs the result.\\n\\nIn summary, this file is a Java program that solves a problem where the goal is to determine if there exists at least one element in an array that, when added to a given value, equals a target value.\&quot;,\&quot;/src/begginerLvevelSecondHalf/EqualCoins.java\&quot;:\&quot;This file contains a single class `EqualCoins` and a single function `main()`.\\n\\n`EqualCoins`: This class contains a solution to the \\\&quot;Equal Coins\\\&quot; problem, where the goal is to determine if it is possible to make a certain amount of money using a combination of coins with different values.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user, processes it, and outputs the result of the \\\&quot;Equal Coins\\\&quot; problem.\\n\\nIn summary, this file implements a solution to the \\\&quot;Equal Coins\\\&quot; problem, where the user can input the number of coins of different values, and the program determines if it is possible to make a certain amount of money using those coins.\&quot;,\&quot;/src/begginerLevel/JengaNight.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes input of the number of test cases `t` and the value `x`, and then checks if `x` is divisible by the number of blocks `n`. If `x` is divisible by `n`, it prints \\\&quot;yes\\\&quot;, otherwise it prints \\\&quot;No\\\&quot;.\&quot;,\&quot;/src/begginerLevel/FourHundredMRace.java\&quot;:\&quot;This file contains a single class `FourHundredMRace` that solves a problem related to a 400-meter race.\\n\\n`FourHundredMRace`: This class determines the winner of a 400-meter race among three runners, Alice, Bob, and Charlie, based on their respective speeds.\\n\\n`main`: This function takes input from the user, calculates the number of laps each runner can complete in 400 meters, and then determines the winner based on the comparison of the number of laps.\&quot;,\&quot;/src/begginerLvevelSecondHalf/AccessControl.java\&quot;:\&quot;This file contains a single class `AccessControl` that solves a problem related to access control. The program takes input for the number of test cases, the maximum access level, and a string representing the access levels at each step. It then checks if the access level can be maintained throughout the string and prints \\\&quot;Yes\\\&quot; or \\\&quot;No\\\&quot; accordingly.\\n\\n`AccessControl`: A class that implements an access control system based on a given string of access levels.\\n\\n`main`: The main function that reads input, processes the access control problem, and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ValentineGifts.java\&quot;:\&quot;This file contains a single class `ValentineGifts` that solves a problem related to Valentine\\u0027s Day gifts.\\n\\n`ValentineGifts`: This class determines whether a person has enough budget to buy a Valentine\\u0027s Day gift based on a given budget.\\n\\n`main`: This function takes input from the user, checks if the given budget is sufficient to buy a gift, and prints the appropriate output.\&quot;,\&quot;/src/begginerLvevelSecondHalf/BreakTheElements.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Break the Elements\\\&quot; problem. The program takes an input of the number of test cases and the elements of an array for each test case. It then counts the number of even elements in the array and prints the result based on the given conditions.\\n\\nThe program performs the following tasks:\\n\\n1. Reads the number of test cases from the user input.\\n2. For each test case, reads the size of the array and the elements of the array.\\n3. Counts the number of even elements in the array.\\n4. Prints the result based on the given conditions (0 if all elements are even or all elements are odd, otherwise the count of even elements).\&quot;,\&quot;/src/begginerLvevelSecondHalf/ABalancedContest.java\&quot;:\&quot;This file contains a single class `ABalancedContest` and a single function `main()`.\\n\\n`ABalancedContest`: This class contains the main logic for solving the \\\&quot;A Balanced Contest\\\&quot; problem.\\n\\n`main()`: This function reads input from the user, processes the input, and prints the output based on the problem statement.\\n\\nThe file solves the \\\&quot;A Balanced Contest\\\&quot; problem, where the goal is to determine if a contest has a balanced set of participants based on their skill levels and the problem difficulty.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ToDivideNotToDivide.java\&quot;:\&quot;This file contains a single class `ToDivideNotToDivide` and a single function `main()`. The file appears to be a Java program that takes input from the user and performs some operation, but the specific functionality is not clear from the provided code.\\n\\n`ToDivideNotToDivide`: A class that contains the main function of the program.\\n\\n`main()`: The entry point of the program that takes input from the user and performs some operation, but the specific functionality is not clear from the provided code.\&quot;,\&quot;/src/begginerLvevelSecondHalf/PositiveProducts.java\&quot;:\&quot;This file contains a single class `PositiveProducts` and two functions `main()` and `reversed()`.\\n\\n`PositiveProducts`: This class contains the main logic for solving the problem of finding the number of positive products in an array of integers.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user, processes the input, and prints the result.\\n\\n`reversed()`: This function takes an integer array as input and reverses the order of the elements in the array.\\n\\nThe program solves the problem of finding the number of positive products in an array of integers. It first counts the number of positive and negative numbers in the array, and then calculates the number of positive products using the formula for combinations.\&quot;,\&quot;/src/begginerLevel/DecrementOrIncrement.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer input from the user and performs a simple operation on it based on whether the number is divisible by 4 or not. If the number is divisible by 4, it increments the number by 1, otherwise, it decrements the number by 1. The result is then printed to the console.\&quot;,\&quot;/src/begginerLvevelSecondHalf/BrokenTelephone.java\&quot;:\&quot;This file contains a single class `BrokenTelephone` that solves the \\\&quot;Broken Telephone\\\&quot; problem. The program takes input of the number of test cases and the array of numbers for each test case, and then counts the number of elements in the array that are different from their neighbors.\\n\\n`BrokenTelephone`: A class that solves the \\\&quot;Broken Telephone\\\&quot; problem.\\n\\n`main`: The main function that takes input, processes the data, and prints the output.\&quot;,\&quot;/src/contest/LuckyClover.java\&quot;:\&quot;This file contains a single class `LuckyClover` and a single function `main()`.\\n\\n`LuckyClover`: This class contains the main logic for calculating the number of leaves in a lucky clover.\\n\\n`main()`: This function takes an integer input `n` and calculates the total number of leaves in a lucky clover with `n` clovers, and prints the result.\\n\\nThe file as a whole is a simple program that calculates the number of leaves in a lucky clover given the number of clovers.\&quot;,\&quot;/src/begginerLvevelSecondHalf/CountOfMaximum.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes input from the user, counts the frequency of each element in the input array, and prints the minimum element and the maximum frequency.\\n\\nThe file is a Java program that solves the problem of finding the minimum element among the elements that have the maximum frequency in an input array.\&quot;,\&quot;/src/begginerLvevelSecondHalf/HowMuchScholarship.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer input `r` and determines the amount of scholarship the user is eligible for based on the following criteria:\\n\\n- If `r` is less than or equal to 50, the user is eligible for a 100 scholarship.\\n- If `r` is greater than 50 and less than or equal to 100, the user is eligible for a 50 scholarship.\\n- If `r` is greater than 100, the user is not eligible for any scholarship.\\n\\nThe program then prints the appropriate scholarship amount to the console.\&quot;,\&quot;/src/begginerLvevelSecondHalf/GoodJoke.java\&quot;:\&quot;This file contains a single class `GoodJoke` and two functions `main` and `enterLimit_Price`.\\n\\n`GoodJoke`: This class contains the main logic for solving the \\\&quot;Good Joke\\\&quot; problem.\\n\\n`main`: This function takes input, processes it, and prints the output for the \\\&quot;Good Joke\\\&quot; problem.\\n\\n`enterLimit_Price`: This function is empty and does not have any implementation.\\n\\nThe file appears to be a solution to the \\\&quot;Good Joke\\\&quot; problem, where the task is to find the XOR of all numbers from 1 to n, given the values of n and the pairs (a, b) for each number.\&quot;,\&quot;/src/begginerLevel/EqualIntegers.java\&quot;:\&quot;This file contains a single class `EqualIntegers` that solves a problem related to making two integers equal using a specific set of operations.\\n\\n`EqualIntegers`: This class takes two integers as input and determines the minimum number of operations required to make them equal.\\n\\n`main`: This function is the entry point of the program. It reads the input, processes the integers, and prints the minimum number of operations required to make them equal.\&quot;,\&quot;/src/begginerLevel/LazyChef.java\&quot;:\&quot;This file contains a single class `LazyChef` and one function `main()`.\\n\\n`LazyChef`: This class contains the main logic for solving the \\\&quot;Lazy Chef\\\&quot; problem.\\n\\n`main()`: This function takes user input, processes it, and prints the minimum cost for the Lazy Chef problem.\\n\\nThe file solves the \\\&quot;Lazy Chef\\\&quot; problem, where the chef has to choose between two options to prepare a dish: either spend `x * m` units of time or `x + d` units of time. The program finds the minimum time required and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndServers.java\&quot;:\&quot;This file contains a single class `ChefAndServers` that solves a problem related to a chef and servers.\\n\\n`ChefAndServers`: This class solves a problem where a chef and a cook need to serve a certain number of people, and the output depends on the total number of people and the number of servers available.\\n\\nThe `main()` function: This function takes input from the user, calculates the total number of people to be served, and determines whether the chef or the cook should serve the people based on the given conditions.\&quot;,\&quot;/src/begginerDSA/PreviewProblem2.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to finding the sum of the first `k` natural numbers and comparing it to a given number `n`. The program takes input from the user, performs the necessary calculations, and outputs \\\&quot;Yes\\\&quot; if the sum of the first `k` natural numbers is less than or equal to `n`, and \\\&quot;No\\\&quot; otherwise.\&quot;,\&quot;/src/begginerLevel/GetLowestFree.java\&quot;:\&quot;This file contains a single class `GetLowestFree` and two functions `main` and `solvwe`.\\n\\n`GetLowestFree`: This class contains the main logic for finding the lowest free value between two given values.\\n\\n`main`: This function is the entry point of the program, which takes input from the user and calls the `solvwe` function to find the lowest free value.\\n\\n`solvwe`: This function takes three integer values `h`, `x`, and `y` as input and returns the lowest free value among them.\&quot;,\&quot;/src/begginerLevel/TransformTheExpression.java\&quot;:\&quot;This file contains a single class `TransformTheExpression` with no functions. The file appears to be a starting point for a program that aims to transform an expression, but the implementation is not provided.\&quot;,\&quot;/src/begginerLevel/IsTheScoreConsistent.java\&quot;:\&quot;This file contains a single class `IsTheScoreConsistent` and a single function `main()`.\\n\\n`IsTheScoreConsistent`: This class contains the main logic to determine if a given set of scores is consistent or not.\\n\\n`main()`: This function reads input from the user, processes the scores, and prints the result (whether the scores are consistent or not) for each test case.\\n\\nThe file as a whole solves the problem of determining whether a given set of scores is consistent or not, based on the provided constraints.\&quot;,\&quot;/src/begginerLvevelSecondHalf/AppendFor.java\&quot;:\&quot;This file contains a single class `AppendFor` which has a `main` function. The file appears to be a Java program that takes input from the user and performs some operations, but the specific functionality is not clear from the provided code.\\n\\n`AppendFor`: A class that contains the main function for the program.\\n\\n`main`: The entry point of the program that takes input from the user and performs some operations, but the specific functionality is not clear from the provided code.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChnageIt.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes user input, creates a HashMap to store the frequency of each element in the input array, finds the maximum frequency, and then prints the minimum number of elements that need to be changed to make all elements in the array equal.\\n\\nThe file is a solution to the \\\&quot;Change It\\\&quot; problem, which involves finding the minimum number of elements that need to be changed in an array to make all elements equal.\&quot;,\&quot;/src/begginerLevel/WhichMaxture.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes input from the user and determines whether the given mixture is a \\\&quot;Solution\\\&quot;, \\\&quot;Solid\\\&quot;, or \\\&quot;Liquid\\\&quot; based on the values of the input variables `a` and `b`.\\n\\nThe program starts by creating a `Scanner` object to read input from the user. It then enters a loop that runs `t` times, where `t` is the number of test cases. In each iteration of the loop, the program reads two integers `a` and `b` from the user and then prints the appropriate output based on the values of `a` and `b`.\&quot;,\&quot;/src/begginerLvevelSecondHalf/Football.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes user input, calculates the maximum score difference between two teams, and prints the result.\\n\\nThe file is a Java program that solves a problem related to a football game. The program takes input for the number of test cases and the scores of two teams for each test case. It then calculates the maximum score difference between the two teams and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/StringGame.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes user input, checks if each character in the input string has an even frequency, and prints \\\&quot;YES\\\&quot; if all characters have an even frequency, and \\\&quot;NO\\\&quot; otherwise.\\n\\nThe file is a Java program that solves a problem related to strings. It takes input from the user, processes the input string, and outputs a result based on the properties of the string.\&quot;,\&quot;/src/begginerLvevelSecondHalf/TheManCode.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes an integer input `t` and then for each of the `t` test cases, it takes an integer input `n` and prints the integer part of `(n + 1) / 2` and `(n + 2) / 3`.\&quot;,\&quot;/src/arrays/CountSubarray.java\&quot;:\&quot;This file contains a single class `CountSubarray` and a single function `countSubarrays()`.\\n\\n`CountSubarray`: This class contains a main method that takes user input for an array of integers, a target value `K`, and then calls the `countSubarrays()` function to count the number of subarrays in the input array that have a maximum value equal to `K`.\\n\\n`countSubarrays()`: This function takes an array of integers, the size of the array, and a target value `K`, and returns the count of subarrays in the input array that have a maximum value equal to `K`.\&quot;,\&quot;/src/begginerLevel/BearAndLadder.java\&quot;:\&quot;This file contains a single class `BearAndLadder` and a single function `main()`.\\n\\n`BearAndLadder`: This class contains the main logic for solving the \\\&quot;Bear and Ladder\\\&quot; problem.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user and processes it to solve the \\\&quot;Bear and Ladder\\\&quot; problem.\\n\\nThe file does not contain any other classes or functions. It appears to be a simple program that solves the \\\&quot;Bear and Ladder\\\&quot; problem, where the user inputs two integers `a` and `b`, and the program processes this input to find the solution.\&quot;,\&quot;/src/begginerLvevelSecondHalf/DoubledDistance.java\&quot;:\&quot;This file contains a single class `DoubledDistance` and two functions `main` and `canBeReordered`.\\n\\n`DoubledDistance`: This class solves the problem of determining whether a given array of integers can be reordered such that the differences between consecutive elements form an arithmetic progression with a common difference of 2.\\n\\n`main`: This function is the entry point of the program, which takes input, calls the `canBeReordered` function, and prints the result.\\n\\n`canBeReordered`: This function takes an array of integers as input and returns `true` if the array can be reordered to form an arithmetic progression with a common difference of 2, and `false` otherwise.\&quot;,\&quot;/src/begginerLvevelSecondHalf/JustLikeMob.java\&quot;:\&quot;This file contains a single class `JustLikeMob` and two functions `main` and `pairSum`.\\n\\n`JustLikeMob`: This class contains the main logic for solving the problem of determining whether a given number `x` can be represented as the sum of `n` and `m` elements in a sequence, where the sequence is generated using a specific pattern.\\n\\n`main`: This function is the entry point of the program, which takes input from the user, processes it, and outputs the result.\\n\\n`pairSum`: This function takes an array of integers and a target sum, and returns a list of all pairs of elements in the array that add up to the target sum.\&quot;,\&quot;/src/begginerLvevelSecondHalf/FakeCertificate.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to fake certificates. The program takes input of the number of test cases and the string representing the certificate, and then calculates the maximum number of consecutive zeros in the string plus the number of ones in the string. The result is then printed for each test case.\&quot;,\&quot;/src/begginerLevel/MeltGold.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to melting gold. The program takes input of the number of test cases and the initial values of `x` and `y`, and then calculates the minimum number of steps required to make `x` greater than or equal to `y` by adding a certain value to `y` in each step.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndDigitsOfANumber.java\&quot;:\&quot;This file contains a single class `ChefAndDigitsOfANumber` that solves a problem related to the digits of a number. The program takes input of a series of numbers, and for each number, it checks if the number has either exactly one \\u00270\\u0027 or exactly one \\u00271\\u0027, and prints \\\&quot;Yes\\\&quot; if this condition is met, and \\\&quot;No\\\&quot; otherwise.\\n\\n`ChefAndDigitsOfANumber`: This class solves the problem of determining if a given number has either exactly one \\u00270\\u0027 or exactly one \\u00271\\u0027 in its digits.\\n\\n`main`: This function is the entry point of the program. It takes input, processes the numbers, and prints the output.\&quot;,\&quot;/src/begginerLvevelSecondHalf/NQueensPuzzleSolved.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it solves the N-Queens Puzzle problem by calculating the number of possible solutions for a given value of N using a mathematical formula. The program takes input from the user for the number of queens (N) and then prints the approximate number of possible solutions.\&quot;,\&quot;/src/begginerLevel/CupFinals.java\&quot;:\&quot;This file contains a single class `CupFinals` that solves a problem related to the skill difference between two players in a cup final.\\n\\n`CupFinals`: This class takes input from the user, calculates the skill difference between two players, and determines whether the difference is within a given threshold.\\n\\n`main`: This function is the entry point of the program. It reads the input, calculates the skill difference, and prints the result.\&quot;,\&quot;/src/begginerLevel/WhichDivision.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer input `a` and determines which division the number belongs to based on the following criteria:\\n\\n- If `a` is between 1000 and 1599 (inclusive), it prints `3`.\\n- If `a` is between 1600 and 1999 (inclusive), it prints `2`.\\n- If `a` is less than 1000 or greater than or equal to 2000, it prints `1`.\\n\\nThe program runs for `t` number of test cases, where `t` is also taken as input.\&quot;,\&quot;/src/begginerLvevelSecondHalf/HowManyMaximums.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;How Many Maximums\\\&quot; problem. The program takes input from the user, which includes the number of test cases and the string of digits for each test case. It then counts the number of local maxima in the string and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/Lapindromes.java\&quot;:\&quot;This file contains a single class `Lapindromes` and two functions `main` and `absDiff`.\\n\\n`Lapindromes`: This class contains the main logic to check if a given string is a \\\&quot;Lapindrome\\\&quot; (a string that is palindromic when split into two equal halves).\\n\\n`main`: This function is the entry point of the program, which takes input from the user, checks if the input string is a Lapindrome, and prints the result.\\n\\n`absDiff`: This function takes an `ArrayList` of integers and calculates the absolute difference between the sum of elements at even indices and the sum of elements at odd indices.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndFeedback.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that checks whether a given binary string is \\\&quot;Good\\\&quot; or \\\&quot;Bad\\\&quot; based on the following criteria:\\n\\n1. If the binary string has at least one character that is different from its adjacent characters, then it is considered \\\&quot;Bad\\\&quot;.\\n2. If the binary string does not have any character that is different from its adjacent characters, then it is considered \\\&quot;Good\\\&quot;.\\n3. The program takes multiple test cases as input and prints the result for each test case.\&quot;,\&quot;/src/begginerLvevelSecondHalf/Password.java\&quot;:\&quot;This file contains a single class `Password` and two functions `main()` and `isSecure()`.\\n\\n`Password`: This class contains the main logic for checking if a given password is secure or not.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user, checks if the password is secure, and prints the result.\\n\\n`isSecure()`: This function checks if a given password is secure based on the following criteria: the password must be at least 10 characters long, contain at least one lowercase letter, one uppercase letter, one digit, and one special character.\&quot;,\&quot;/src/begginerLvevelSecondHalf/DividingStamps.java\&quot;:\&quot;This file contains a single class `DividingStamps` and a single function `main()`.\\n\\n`DividingStamps`: This class contains a program that checks if the sum of the elements in an array is equal to the sum of the first `n` natural numbers.\\n\\n`main()`: This function takes input from the user, calculates the sum of the first `n` natural numbers and the sum of the elements in the array, and then prints \\\&quot;YES\\\&quot; if the two sums are equal, and \\\&quot;NO\\\&quot; otherwise.\&quot;,\&quot;/src/begginerLvevelSecondHalf/MinimumAttendanceRequirement.java\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`main`: This function takes input from the user, calculates the number of ones and zeros in the input string, and then determines whether the minimum attendance requirement of 90 can be met by attending the remaining classes.\\n\\nThe file as a whole is a program that solves the problem of determining whether a student can meet the minimum attendance requirement by attending the remaining classes, given the current attendance status.\&quot;,\&quot;/src/begginerLvevelSecondHalf/LuckBoundries.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Luck Boundaries\\\&quot; problem. The program takes input from the user, which includes the number of test cases and a string of characters. It then searches for the substring \\\&quot;10\\\&quot; in the input string and prints the count of such substrings, as well as the remaining part of the string after the last occurrence of \\\&quot;10\\\&quot;.\&quot;,\&quot;/src/begginerLevel/FlipTheCards.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Flip the Cards\\\&quot; problem. The program takes input for the number of test cases and the number of cards, and then calculates the minimum number of cards that need to be flipped to make all the cards face up.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndGlove.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes user input, compares the elements of two arrays, and prints the appropriate output based on the comparison.\\n\\nThe file is a Java program that solves the \\\&quot;Chef and Glove\\\&quot; problem from the Beginner Level Second Half category. The program takes input for the number of elements in the arrays and the values of the arrays, and then checks if the glove can be worn in the front, back, or both directions, or if it cannot be worn at all.\&quot;,\&quot;/src/begginerLevel/BuyLamps.java\&quot;:\&quot;This file contains a single class `BuyLamps` that solves a problem related to buying lamps.\\n\\n`BuyLamps`: This class solves the problem of buying a certain number of lamps, where each lamp can be either red or blue, and the cost of each type of lamp is different.\\n\\n`main`: This function is the entry point of the program. It takes input from the user, calculates the minimum cost of buying the lamps, and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/UpsAndDowns.java\&quot;:\&quot;This file contains one class and two functions:\\n\\n`UpsAndDowns`: A class that solves the \\\&quot;Ups and Downs\\\&quot; problem, where the goal is to arrange a given array of numbers in an alternating up-down pattern.\\n\\n`main`: The main function that reads input, calls the necessary functions, and prints the output.\\n\\n`monthsUntilCrowded`: A function that calculates the number of months it takes for a tank with a given volume and initial number of male and female dinkies to become crowded.\\n\\nThe file also includes some commented-out code that appears to be related to the \\\&quot;monthsUntilCrowded\\\&quot; function, but it is not being used in the current implementation.\&quot;,\&quot;/src/begginerLevel/TheSquidGame.java\&quot;:\&quot;This file contains a single class `TheSquidGame` and a single function `main()`.\\n\\n`TheSquidGame`: This class contains the main logic for the Squid Game problem.\\n\\n`main()`: This function reads input, calculates the total sum of the array elements excluding the minimum value, and prints the result.\\n\\nThe file solves the Squid Game problem, where the goal is to find the total sum of the array elements excluding the minimum value.\&quot;,\&quot;/src/begginerLvevelSecondHalf/Superincreasing.java\&quot;:\&quot;This file contains a single class `Superincreasing` and a single function `main()`.\\n\\n`Superincreasing`: This class contains the main logic for determining whether a given number `x` is a superincreasing sequence up to the `k`-th position.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user, processes it, and prints the result.\\n\\nThe program reads in a series of test cases, where each test case consists of three integers: `n`, `k`, and `x`. It then checks whether the number `x` is a superincreasing sequence up to the `k`-th position, and prints \\\&quot;Yes\\\&quot; or \\\&quot;No\\\&quot; accordingly.\&quot;,\&quot;/src/begginerLevel/CheflandGames.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Chefland Games\\\&quot; problem. The program takes input from the user, checks if all four numbers in the input are zero, and then prints \\\&quot;IN\\\&quot; if all numbers are zero, or \\\&quot;OUT\\\&quot; otherwise. The program runs for a given number of test cases.\&quot;,\&quot;/src/begginerLvevelSecondHalf/MakeMoney.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes user input, sorts an array of bag prices, and calculates the maximum amount of money that can be made by buying and selling the bags.\\n\\nThe file is a Java program that solves the \\\&quot;Make Money\\\&quot; problem, where the goal is to maximize the total amount of money earned by buying and selling bags of different prices. The program takes input for the number of bags, the maximum price that can be paid for a bag, and the cost of converting a bag to the maximum price. It then sorts the bag prices, and for each bag, it checks if the difference between the maximum price and the bag price is greater than or equal to the conversion cost. If so, it converts the bag to the maximum price and adds the maximum price to the total coins earned, subtracting the conversion cost. Otherwise, it simply adds the bag price to the total coins earned. Finally, the program outputs the total amount of money earned.\&quot;,\&quot;/src/begginerLvevelSecondHalf/SubAndSwap.java\&quot;:\&quot;This file contains a single class and two functions:\\n\\n`SubAndSwap`: This class contains the main method that takes input, calls the `gcd` function, and prints the result.\\n\\n`gcd`: This function calculates the greatest common divisor of two integers using the Euclidean algorithm.\\n\\nThe purpose of this file is to implement a program that calculates the greatest common divisor of two integers given as input. The program uses a loop to handle multiple test cases, and the `gcd` function to perform the actual calculation.\&quot;,\&quot;/src/contest/NonPrimes101.java\&quot;:\&quot;This file contains a single class `NonPrimes101` and a single function `main()`.\\n\\n`NonPrimes101`: This class is responsible for solving a problem related to non-prime numbers.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user and performs some operations on the input.\\n\\nThe file appears to be a Java program that solves a problem related to non-prime numbers. It takes input from the user and performs some operations on the input, but the specific details of the problem and the operations are not clear from the provided code.\&quot;,\&quot;/src/begginerLvevelSecondHalf/RandomPair.java\&quot;:\&quot;This file contains a single class `RandomPair` and a single function `targetElement`.\\n\\n`RandomPair`: This class contains the main method that takes input from the user, creates an array, and calls the `targetElement` function to check if there are any two elements in the array that sum up to the given target value.\\n\\n`targetElement`: This function takes an array and a target value as input, and uses a two-pointer approach to check if there are any two elements in the array that sum up to the target value.\&quot;,\&quot;/src/begginerLvevelSecondHalf/TheOneWithRuss.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes user input, processes it, and outputs the result based on the given conditions.\\n\\nThe file is a Java program that solves a problem where the goal is to determine if there are at least `x` elements in two arrays `a` and `b` that have an absolute difference less than or equal to `k`. The program takes multiple test cases as input, processes them, and outputs \\\&quot;Yes\\\&quot; or \\\&quot;NO\\\&quot; based on the result.\&quot;,\&quot;/src/begginerLevel/MutatedMinions.java\&quot;:\&quot;This file contains a single class `MutatedMinions` that solves a problem related to counting the number of elements in an array that satisfy a certain condition.\\n\\n`MutatedMinions`: This class contains a solution to the problem of counting the number of elements in an array that are divisible by 7 when added with a given integer `k`.\\n\\n`main`: This function is the entry point of the program. It reads input from the user, processes the input, and prints the output.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndCoupon.java\&quot;:\&quot;This file contains a single class `ChefAndCoupon` that solves a problem related to a chef and a coupon.\\n\\n`ChefAndCoupon`: This class solves the problem of determining whether a customer should use a coupon or not based on the total cost of their orders.\\n\\nThe file does not contain any functions. Instead, it has a `main()` method that takes input, performs the necessary calculations, and outputs the result.\\n\\nThe `main()` method: This method reads input, calculates the total cost with and without the coupon, and prints whether the customer should use the coupon or not.\&quot;,\&quot;/src/begginerLvevelSecondHalf/DifficultyRatingOrder.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that checks whether the difficulty ratings of a set of problems are in increasing order or not. The program takes input from the user, processes the difficulty ratings, and outputs \\\&quot;Yes\\\&quot; if the ratings are in increasing order, and \\\&quot;No\\\&quot; otherwise.\&quot;,\&quot;/src/begginerLvevelSecondHalf/RemoveBadElements.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes user input, counts the frequency of each element in the input array, and prints the minimum number of elements that need to be removed to make the array have only one unique element.\\n\\nThe file is a Java program that solves the problem of removing elements from an array to make it have only one unique element. It uses a HashMap to count the frequency of each element and then prints the minimum number of elements that need to be removed.\&quot;,\&quot;/src/begginerLvevelSecondHalf/PieceOfCake.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: The main function that takes user input, processes the input string, and determines whether the string can be divided into two equal halves with the same character frequency.\\n\\nThe file is a Java program that solves the \\\&quot;Piece of Cake\\\&quot; problem, where the goal is to determine if a given string can be divided into two equal halves with the same character frequency. The program uses a HashMap to count the frequency of each character in the input string, and then checks if the difference between the maximum frequency and the length of the string minus the maximum frequency is equal to the maximum frequency.\&quot;,\&quot;/src/begginerLevel/ThePreparations.java\&quot;:\&quot;This file contains a single class `ThePreparations` and a single function `main()`.\\n\\n`ThePreparations`: This class contains the main logic for the program.\\n\\n`main()`: This function takes user input, calculates the total watch time, and prints \\\&quot;Yes\\\&quot; if the given time is greater than the watch time, or \\\&quot;NO\\\&quot; otherwise.\\n\\nThe program is designed to solve a problem where a user has a certain amount of time available, and they need to watch a certain number of videos for a certain duration. The program determines whether the user has enough time to watch all the videos.\&quot;,\&quot;/src/begginerLvevelSecondHalf/MultipleChoseExam.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a multiple-choice exam problem. The program takes input for the number of questions and the answers provided by the student and the chef, and then calculates the number of correct answers. The program runs for multiple test cases.\&quot;,\&quot;/src/begginerLevel/RCBandPlayoffs.java\&quot;:\&quot;This file contains a single class `RCBandPlayoffs` that solves a problem related to the playoffs in a sports league.\\n\\n`RCBandPlayoffs`: This class determines whether a team can qualify for the playoffs based on the given conditions.\\n\\n`main`: This function takes input from the user, processes it, and prints the result of whether the team can qualify for the playoffs or not.\&quot;,\&quot;/src/DSAPreparetion1/LuckyNumber.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that determines whether a given number is a \\\&quot;lucky number\\\&quot; or not.\\n\\nThe program takes an integer `t` as input, which represents the number of test cases. For each test case, it reads an integer `n` and checks if it is a lucky number. A lucky number is defined as a number that can be expressed as a power of 2, where the power is an even number.\\n\\nThe program achieves this by repeatedly dividing `n` by 2 and counting the number of times it can do so. If the count is even, the number is considered a lucky number and the program prints `1`. Otherwise, it prints `0`.\&quot;,\&quot;/src/begginerLvevelSecondHalf/RockPaperScissors.java\&quot;:\&quot;This file contains a single class `RockPaperScissors` that implements a solution to a problem related to the game of Rock-Paper-Scissors.\\n\\n`RockPaperScissors`: This class contains the main logic to solve the problem of finding the minimum number of moves required to make the given string of characters (representing the game choices) valid.\\n\\n`main`: This function is the entry point of the program. It takes input, processes it, and prints the output for each test case.\&quot;,\&quot;/src/begginerLvevelSecondHalf/EvenPairSum.java\&quot;:\&quot;This file contains two classes: `EvenPairSum` and `romanToInt`.\\n\\n`EvenPairSum`: This class solves the problem of finding the number of even pairs in a given range of numbers.\\n\\n`romanToInt`: This class provides a function that converts a Roman numeral string to its corresponding integer value.\&quot;,\&quot;/src/begginerLvevelSecondHalf/StudingAlphabet.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: The main function that takes user input, calls the `arraySolution` function to check if each word can be formed using the characters in the given string, and prints the result.\\n\\n`setSolution`: A function that uses a `HashSet` to check if each character in the given word is present in the input string.\\n\\n`mapSolution`: A function that uses a `HashMap` to check if each character in the given word is present in the input string.\\n\\n`arraySolution`: A function that uses a boolean array to check if each character in the given word is present in the input string.\\n\\nThe file is a Java program that takes a string and a number of words as input, and then checks if each word can be formed using the characters in the input string. It provides three different approaches to solve this problem, using a `HashSet`, a `HashMap`, and a boolean array.\&quot;,\&quot;/src/begginerLevel/TheBeginingEraOfCybererverse.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer `t` as input, and then for each of the `t` cases, it takes two integers `n` and `k` as input and prints the integer division of `k` by `n`.\&quot;,\&quot;/src/begginerLevel/Weights.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes input from the user and determines whether a given weight can be formed by the sum of any combination of three other weights.\\n\\nThe program starts by creating a `Scanner` object to read input from the user. It then takes in an integer `t` which represents the number of test cases. For each test case, it reads four integers `w`, `x`, `y`, and `z`, which represent the weights. The program then checks if `w` is equal to any of the other three weights, or if `w` is equal to the sum of any two of the other three weights, or if `w` is equal to the sum of all three of the other weights. If any of these conditions are true, the program prints \\\&quot;Yes\\\&quot;, otherwise it prints \\\&quot;No\\\&quot;.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndString.java\&quot;:\&quot;This file contains a single class `ChefAndString` that solves a problem related to strings. The main function `main` reads input, processes the strings, and prints the appropriate output.\\n\\n`ChefAndString`: This class solves the problem of determining whether a given string can be made alternating by removing at most one character.\\n\\n`main`: This function reads input, processes the strings, and prints the appropriate output based on the properties of the input strings.\&quot;,\&quot;/src/DSAPreparetion1/PixelDamage.java\&quot;:\&quot;This file contains a single class `PixelDamage` that has a single `main` function. The program takes input for the number of test cases, and for each test case, it calculates the distance between a given point and the bottom-right corner of a rectangle, and then prints 1 if the distance is less than a given value, or 0 otherwise.\\n\\n`PixelDamage`: The class that contains the main function to solve the problem.\\n\\n`main`: The main function that reads input, calculates the distance, and prints the result.\&quot;,\&quot;/src/begginerLevel/NearestCourt.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Nearest Court\\\&quot; problem. The program takes input of the coordinates of two courts and calculates the distance between the midpoint of the two courts and the nearest court. The program then prints the minimum distance.\&quot;,\&quot;/src/begginerLevel/TheOldSaintAndThreeQuestions.java\&quot;:\&quot;This file contains a single class `TheOldSaintAndThreeQuestions` that solves a problem related to the number of ones in the answers given by a hero and an old saint.\\n\\n`TheOldSaintAndThreeQuestions`: This class takes input from the user, compares the number of ones in the hero\\u0027s and old saint\\u0027s answers, and prints \\\&quot;Pass\\\&quot; if they are equal, and \\\&quot;Fail\\\&quot; otherwise.\\n\\n`main`: This function is the entry point of the program. It reads the number of test cases, and for each test case, it reads the hero\\u0027s and old saint\\u0027s answers, compares the number of ones, and prints the result.\&quot;,\&quot;/src/begginerLevel/HowManyDigitsDoIHave.java\&quot;:\&quot;This file contains a single class `HowManyDigitsDoIHave` and two functions `main()` and `solve()`.\\n\\n`HowManyDigitsDoIHave`: This class contains the main logic to determine the number of digits in a given integer.\\n\\n`main()`: This function takes user input, calls the `solve()` function to get the length of the integer, and then prints the number of digits or a message indicating that the number has more than 3 digits.\\n\\n`solve()`: This function takes an integer as input and returns the length of the integer as an integer.\&quot;,\&quot;/src/begginerLvevelSecondHalf/PrimeReversal.java\&quot;:\&quot;This file contains a single class `PrimeReversal` that solves a problem related to prime numbers and their reversals.\\n\\n`PrimeReversal`: This class takes input from the user, processes it, and determines whether the number of zeros in two given strings are equal.\\n\\n`main`: This function is the entry point of the program. It reads input from the user, processes it, and prints the result.\&quot;,\&quot;/src/begginerLevel/AOrB.java\&quot;:\&quot;This file contains a single class `AOrB` and a single function `main()`.\\n\\n`AOrB`: This class contains the main logic for solving the problem of determining the maximum points between two problems, A and B.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user, calculates the maximum points for each problem, and prints the result.\\n\\nThe file solves a problem where there are two problems, A and B, with different point values. The program takes the number of attempts for each problem as input, and then calculates the maximum points that can be obtained by solving either problem A or B.\&quot;,\&quot;/src/begginerLevel/GoodQualityBulbs.java\&quot;:\&quot;This file contains a single class `GoodQualityBulbs` and a single function `main()`.\\n\\n`GoodQualityBulbs`: This class contains the main logic for the program.\\n\\n`main()`: This function is the entry point of the program, which takes user input and performs some calculations.\\n\\nThe program appears to be a beginner-level program that takes input for the number of test cases (`t`) and the values of `m` and `h` for each test case, but does not perform any further calculations or output any results.\&quot;,\&quot;/src/begginerLevel/Indivisible.java\&quot;:\&quot;This file contains a single class `Indivisible` and a single function `main()`.\\n\\n`Indivisible`: This class contains a program that finds the smallest positive integer that is not divisible by any of the three given integers.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user, processes it, and prints the smallest positive integer that is not divisible by any of the three given integers.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndHisApartmentDues.java\&quot;:\&quot;This file contains a single class `ChefAndHisApartmentDues` that solves a problem related to calculating the total dues for a chef\\u0027s apartment.\\n\\n`ChefAndHisApartmentDues`: This class calculates the total dues for a chef\\u0027s apartment based on the given input.\\n\\n`main`: This function is the entry point of the program, which takes input, processes it, and prints the total dues.\&quot;,\&quot;/src/begginerLvevelSecondHalf/SpellShortening.java\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`main`: This function takes input from the user, processes the input string by removing the larger character from adjacent pairs, and prints the resulting string.\\n\\nThe file is a Java program that solves the \\\&quot;Spell Shortening\\\&quot; problem. It takes a series of input strings, and for each string, it removes the larger character from adjacent pairs until no such pair exists. The resulting shortened string is then printed.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefInFantasyLeague.java\&quot;:\&quot;This file contains a single class `ChefInFantasyLeague` that solves a problem related to a fantasy league.\\n\\n`ChefInFantasyLeague`: This class takes input for a number of test cases, and for each case, it determines whether a chef can create a team within a given budget by selecting the minimum-cost defender and forward.\\n\\n`main`: This function is the entry point of the program. It reads the input, processes the data, and prints the output for each test case.\&quot;,\&quot;/src/arrays/IntersectingArrays.java\&quot;:\&quot;This file contains a single class `IntersectingArrays` and two functions:\\n\\n`IntersectingArrays`: A class that provides a solution to the problem of finding the intersection of two sorted arrays.\\n\\n`intersect`: A function that takes two sorted integer arrays as input and returns a list of integers representing the intersection of the two arrays.\\n\\n`main`: The main function that takes input from the user, calls the `intersect` function, and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/MaximiseAdjacentSum.java\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`main`: This function takes user input, sorts the input array, and calculates the maximum sum of all elements except the first two elements, and prints the result.\\n\\nThe file is a Java program that solves the \\\&quot;Maximise Adjacent Sum\\\&quot; problem, where the goal is to find the maximum sum of all elements in an array, except for the first two elements.\&quot;,\&quot;/src/begginerLevel/ChnageRowAndColumnBoth.java\&quot;:\&quot;This file contains a single class `ChnageRowAndColumnBoth` and a single function `main()`.\\n\\n`ChnageRowAndColumnBoth`: This class contains a program that determines the minimum number of moves required to move from one position to another on a grid, where the starting and ending positions can be changed in both the row and column directions.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user, processes it, and outputs the minimum number of moves required to move from the starting position to the ending position on the grid.\&quot;,\&quot;/src/begginerLvevelSecondHalf/FriendsMeetup.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes input from the user, compares two integers, and prints \\\&quot;YES\\\&quot; if they are equal or the first integer is greater than the second, and \\\&quot;NO\\\&quot; otherwise. The program runs for a given number of test cases.\&quot;,\&quot;/src/begginerLvevelSecondHalf/LostWEekends.java\&quot;:\&quot;This file contains a single class `LostWEekends` that solves a problem related to working hours.\\n\\n`LostWEekends`: This class determines whether a person will be able to complete their required working hours in a 5-day week.\\n\\n`main`: This function takes input from the user, calculates the total required working hours, and determines whether the person will be able to complete the required hours in a 5-day week.\&quot;,\&quot;/src/DSAPreparetion1/TaxiCost.java\&quot;:\&quot;This file contains a single class `TaxiCost` that solves a problem related to taxi cost based on the number of rainy days and the cost per day.\\n\\n`TaxiCost`: This class calculates the total taxi cost based on the number of rainy days and the cost per day.\\n\\n`main`: This function takes input, processes it, and prints the total taxi cost for each test case.\&quot;,\&quot;/src/begginerLevel/BlackJack.java\&quot;:\&quot;This file contains a single class `BlackJack` that implements a simple BlackJack game. The program takes input of two integers `a` and `b`, and then tries to find a third integer `i` between 1 and 10 such that the sum of `a`, `b`, and `i` is equal to 21. If such an integer is found, it is printed, otherwise, -1 is printed.\\n\\n`BlackJack`: Implements a simple BlackJack game where the goal is to find a third integer that, when added to two given integers, results in a sum of 21.\\n\\n`main`: The main function that takes input, processes it, and prints the result.\&quot;,\&quot;/src/begginerLevel/EasyMath.java\&quot;:\&quot;This file contains a single class `EasyMath` and a single function `solve()`.\\n\\n`EasyMath`: This class contains a `main()` method that takes user input and calls the `solve()` function.\\n\\n`solve()`: This function takes an array `A` and an integer `B` as input, and returns the maximum sum of any contiguous subarray of length `B` within the array `A`.\\n\\nThe file appears to be a solution to a problem that involves finding the maximum sum of a contiguous subarray of a given length within a larger array.\&quot;,\&quot;/src/begginerLevel/ChefAndCandies.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Chef and Candies\\\&quot; problem. The program takes input from the user, calculates the number of candies that Chef can buy, and prints the result. The program runs in a loop for a given number of test cases.\&quot;,\&quot;/src/begginerLevel/ChefAndProfits.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that calculates the profit or loss for a chef who buys and sells stocks. The program takes input for the number of stocks, the price at which they were bought, and the price at which they were sold, and then calculates and prints the profit or loss.\&quot;,\&quot;/src/begginerLvevelSecondHalf/JumpingInTheHills.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function reads input from the user, processes the input, and prints the output.\\n\\nThe file is a Java program that solves the \\\&quot;Jumping in the Hills\\\&quot; problem. The program takes input from the user, which includes the number of test cases, the number of hills, the maximum up and down distances, and the heights of the hills. The program then calculates the maximum number of hills that can be jumped consecutively and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/AdaDishes.java\&quot;:\&quot;This file contains a single class `AdaDishes` and a single function `main()`.\\n\\n`AdaDishes`: This class contains the main logic for solving the problem of Ada\\u0027s dishes.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user and processes it to solve the problem of Ada\\u0027s dishes.\\n\\nThe file appears to be a solution to a problem related to Ada\\u0027s dishes, where the user inputs a number `t` and then `n` for each of the `t` test cases. The program likely performs some computation or logic based on the input values, but the specific problem statement is not provided in the given code.\&quot;,\&quot;/src/begginerLvevelSecondHalf/TheGreatRun.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function is the entry point of the program, which takes input from the user, calculates the maximum number of girls that can be impressed in a window of size `k`, and prints the result.\\n\\nThe file implements a solution to the \\\&quot;The Great Run\\\&quot; problem, where the goal is to find the maximum number of girls that can be impressed in a window of size `k` as the window slides across an array of girls\\u0027 attractiveness scores.\&quot;,\&quot;/src/begginerLevel/FillCandies.java\&quot;:\&quot;This file contains a single class `FillCandies` that solves a problem related to distributing candies into bags with a fixed number of pockets, each holding a fixed number of candies.\\n\\n`FillCandies`: This class solves the problem of distributing a given number of candies into bags with a fixed number of pockets, where each pocket can hold a fixed number of candies.\\n\\n`main`: This function is the entry point of the program, which takes input from the user, calculates the number of bags required to hold the given number of candies, and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/TCSExamination.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: The main function that takes user input, compares the sum of scores of two teams (Dragon and Sloth), and prints the winner or a tie.\\n\\nThe file is a Java program that simulates a TCS (Tata Consultancy Services) examination. It takes input for the scores of two teams, Dragon and Sloth, and determines the winner based on the total scores and the individual scores of the first two players in each team.\&quot;,\&quot;/src/begginerLevel/PoliceAndThief.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes input of two integers `a` and `b`, and calculates the absolute difference between them, printing the result. The program runs in a loop for a given number of test cases.\&quot;,\&quot;/src/begginerLevel/BadmintonServes.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer input `t` representing the number of test cases, and for each test case, it takes an integer input `p` representing the number of points scored by a player. The program then calculates and prints the minimum number of serves required to reach `p` points, which is `(p / 2) + 1`.\&quot;,\&quot;/src/begginerLevel/MakeAP.java\&quot;:\&quot;This file contains a single class `MakeAP` that has a single function `main()`. The purpose of this program is to take an input of `t` number of test cases, and for each test case, it takes two integers `a` and `b`. If the sum of `a` and `b` is even, it prints the average of `a` and `b`, otherwise, it prints `-1`.\\n\\n`MakeAP`: A class that contains a main function to solve the problem of finding the average of two numbers if their sum is even, or printing `-1` if their sum is odd.\\n\\n`main()`: The main function that takes input, performs the necessary calculations, and prints the output.\&quot;,\&quot;/src/begginerLvevelSecondHalf/Brackets.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Brackets\\\&quot; problem, which involves finding the maximum number of balanced brackets in a given string and then printing the corresponding number of opening and closing brackets.\\n\\nThe program takes input from the user, processes the input string, and outputs the maximum number of balanced brackets. It does this by iterating through the input string, keeping track of the current balance of brackets, and updating the maximum balance seen so far. Finally, it prints the corresponding number of opening and closing brackets.\&quot;,\&quot;/src/begginerDSA/PracticeProblem_DifferentConsecutiveChars.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that solves a practice problem related to counting the number of consecutive characters in a given string. The program takes input from the user, processes the input, and prints the count of consecutive characters for each input string.\&quot;,\&quot;/src/begginerLvevelSecondHalf/MakeBobWin.java\&quot;:\&quot;This file contains a single class `MakeBobWin` and no functions. The file appears to be a Java program that takes input from the user and performs some operations, but the specific purpose of the program is not clear from the provided code.\\n\\n`MakeBobWin`: This class appears to be the main entry point of the program, where the user input is processed and some operations are performed.\&quot;,\&quot;/src/begginerLvevelSecondHalf/SplitN.java\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`main`: This function takes user input, counts the number of set bits in the binary representation of the input number, and prints the result minus 1.\\n\\nThe file as a whole is a Java program that solves the \\\&quot;Split N\\\&quot; problem, where the task is to find the minimum number of splits required to make a given number equal to 1 by repeatedly splitting it in half.\&quot;,\&quot;/src/begginerLevel/SmallFactorial.java\&quot;:\&quot;This file contains a single class `SmallFactorial` that calculates the factorial of a given number.\\n\\n`SmallFactorial`: A class that calculates the factorial of a given number.\\n\\n`main`: The main function that takes input from the user, calculates the factorial of the input number, and prints the result.\&quot;,\&quot;/src/begginerLevel/KitchenTimeTable.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes user input, processes it, and prints the output.\\n\\nThe file is a Java program that solves the \\\&quot;Kitchen Time Table\\\&quot; problem. It takes input for the number of cooks and the time it takes for each cook to complete their task, as well as the start time for each cook. The program then calculates the number of cooks that can be scheduled without any overlap in their tasks and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/TraceOfMatrix.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes input for the number of test cases, the size of the matrix, and the elements of the matrix, and then calculates the maximum trace of the matrix by iterating through all possible starting points and updating the maximum trace found.\\n\\nThe file is a Java program that solves the \\\&quot;Trace of Matrix\\\&quot; problem, where the goal is to find the maximum sum of elements along any diagonal of a square matrix.\&quot;,\&quot;/src/begginerLvevelSecondHalf/EqualCardGame.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that solves the \\\&quot;Equal Card Game\\\&quot; problem. The program takes an integer `t` as input, which represents the number of test cases, and then for each test case, it takes an integer `n` as input, which represents the number of players in the game. The program then calculates the remainder when 52 (the total number of cards) is divided by `n` and prints the result.\&quot;,\&quot;/src/begginerLevel/ProcessingAString.java\&quot;:\&quot;This file contains a single class `ProcessingAString` and two functions `isDigit` and `isDigit2`.\\n\\n`ProcessingAString`: This class processes a string input and calculates the sum of all the digits in the string.\\n\\n`isDigit`: This function takes a string as input and calculates the sum of all the digits in the string.\\n\\n`isDigit2`: This function takes a string as input and calculates the sum of all the digits in the string using a different approach.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndDifficultContest.java\&quot;:\&quot;This file contains a single class `ChefAndDifficultContest` that solves a problem related to a chef and a difficult contest.\\n\\n`ChefAndDifficultContest`: This class solves a problem where a chef needs to determine if a given contest is difficult or not.\\n\\nThe file does not contain any functions. The `main()` method is the entry point of the program, which takes input from the user, processes it, and prints the output.\&quot;,\&quot;/src/begginerLvevelSecondHalf/LittleElephantAndStrings.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that reads in a set of strings and a set of substrings, and then checks whether each substring is contained within at least one of the strings or is longer than 47 characters. It then prints \\\&quot;Good\\\&quot; if the substring is found, and \\\&quot;Bad\\\&quot; otherwise.\&quot;,\&quot;/src/begginerLvevelSecondHalf/LazyJem.java\&quot;:\&quot;This file contains a single class `LazyJem` and a single function `main()`.\\n\\n`LazyJem`: This class contains the main logic for solving the problem of finding the total time required for a lazy person to complete a task.\\n\\n`main()`: This function takes input from the user, performs the necessary calculations to find the total time required, and prints the result.\\n\\nThe file solves a problem where a lazy person has to complete a task that can be divided into smaller subtasks. The person can either complete the task directly or divide it into two smaller subtasks and complete them separately. The goal is to find the minimum total time required to complete the task.\&quot;,\&quot;/src/begginerLvevelSecondHalf/EqualElements.java\&quot;:\&quot;This file contains a single class `EqualElements` that solves the problem of finding the minimum number of elements that need to be removed from an array to make all the remaining elements equal.\\n\\n`EqualElements`: This class contains the main logic to solve the problem of finding the minimum number of elements that need to be removed from an array to make all the remaining elements equal.\\n\\n`main`: This function is the entry point of the program, which takes input from the user, processes the input, and prints the output.\&quot;,\&quot;/src/begginerLevel/GrossSalary.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that calculates the gross salary of employees based on their salary and certain conditions. The program takes input from the user, performs the necessary calculations, and outputs the resulting gross salary.\&quot;,\&quot;/src/begginerLvevelSecondHalf/CountingProblem.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a counting problem. The program takes an input of the number of test cases, and for each test case, it reads an array of integers. It then counts the number of odd elements in the array and checks if the count is odd or zero. If the count is odd or zero, it prints \\\&quot;NO\\\&quot;, otherwise it prints \\\&quot;Yes\\\&quot;.\&quot;,\&quot;/src/begginerLvevelSecondHalf/OddEvenBinaryString.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes an integer `t` as input, representing the number of test cases. For each test case, it takes an integer `n` and `n` integers as input, representing the binary string. The program then checks if the number of 0s in the binary string is even, and prints \\\&quot;YES\\\&quot; if it is, and \\\&quot;NO\\\&quot; otherwise.\&quot;,\&quot;/src/begginerLvevelSecondHalf/DisabledKing.java\&quot;:\&quot;This file contains a single class `DisabledKing` that solves a problem related to a disabled king. The program takes an input of `t` test cases, and for each test case, it takes an integer `n` and prints the value of `n` if it is even, or `n-1` if it is odd.\\n\\n`DisabledKing`: A class that solves a problem related to a disabled king.\\n\\n`main`: The main function that takes input, processes it, and prints the output.\&quot;,\&quot;/src/arrays/Snapchat.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes user input, calculates the maximum streak of consecutive non-zero values in two arrays, and prints the result.\\n\\nThe file is a Java program that solves a problem related to Snapchat. It takes input for multiple test cases, where each test case consists of two arrays of integers. The program then finds the maximum streak of consecutive non-zero values in the two arrays and prints the result.\&quot;,\&quot;/src/begginerLevel/CookieDay.java\&quot;:\&quot;This file contains a single class `CookieDay` that solves a problem related to distributing cookies among a group of kids.\\n\\n`CookieDay`: This class solves the problem of distributing cookies among a group of kids, where each cookie jar contains a different number of cookies, and the goal is to find the minimum number of cookies that cannot be distributed evenly among the kids.\\n\\n`main`: This function is the entry point of the program. It reads input from the user, processes the cookie jars, and outputs the minimum number of cookies that cannot be distributed evenly among the kids.\&quot;,\&quot;/src/begginerLevel/EqualElements.java\&quot;:\&quot;This file contains a single class `EqualElements` that solves the problem of finding the minimum number of elements that need to be removed from an array to make all the remaining elements equal.\\n\\n`EqualElements`: This class contains the main logic to solve the problem of finding the minimum number of elements that need to be removed from an array to make all the remaining elements equal.\\n\\n`main`: This function is the entry point of the program, which takes input from the user, processes the input, and prints the result.\&quot;,\&quot;/src/begginerLevel/AttackOnKindgom.java\&quot;:\&quot;This file contains a single class `AttackOnKindgom` (note the typo in the class name) and a single `main` function.\\n\\n`AttackOnKindgom`: This class contains the main logic for solving the \\\&quot;Attack on Kingdom\\\&quot; problem.\\n\\n`main`: This function is the entry point of the program. It reads input from the user, processes the data, and prints the second coldest day for each test case.\\n\\nThe program solves the \\\&quot;Attack on Kingdom\\\&quot; problem, which involves finding the second coldest day in a given set of temperature values.\&quot;,\&quot;/src/begginerLvevelSecondHalf/WorldRecord.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that reads input from the user, calculates a value based on the input, and then prints \\\&quot;YES\\\&quot; or \\\&quot;NO\\\&quot; based on the calculated value.\\n\\nThe program takes in the following inputs:\\n- `t`: the number of test cases\\n- `k1`, `k2`, `k3`, and `v`: four floating-point values that are used to calculate a final value\\n\\nThe program then calculates the final value as `k1 \\u003d k1 * k2 * k3 * v` and then `k1 \\u003d 100/k1`. If the final value of `k1` is less than 9.575, the program prints \\\&quot;YES\\\&quot;, otherwise it prints \\\&quot;NO\\\&quot;.\&quot;,\&quot;/src/begginerLevel/ChefOnIsland.java\&quot;:\&quot;This file contains a single class `ChefOnIsland` and a single function `main()`.\\n\\n`ChefOnIsland`: This class contains the main logic for determining whether a chef can survive on an island based on the available food and water supplies.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user, calculates the available food and water supplies, and determines whether the chef can survive on the island.\\n\\nThe program solves the problem of determining whether a chef can survive on an island given the available food and water supplies, and the required amount of food and water per day. It does this by reading input from the user, calculating the available supplies, and comparing them to the required amount to determine if the chef can survive.\&quot;,\&quot;/src/begginerLevel/DivisibleByThree.java\&quot;:\&quot;This file contains a single class `DivisibleByThree` that solves a problem related to divisibility by 3.\\n\\n`DivisibleByThree`: This class takes input of two integers `a` and `b`, and finds the minimum number of steps required to make either `a` or `b` divisible by 3.\\n\\n`main`: This function is the entry point of the program, which reads the input, processes it, and prints the output.\&quot;,\&quot;/src/begginerLevel/TestScore.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer `t` as input, and for each of the `t` test cases, it takes two integers `n` and `x` as input. It then checks if `y` (which is not explicitly defined) is divisible by `x`, and prints \\\&quot;Yes\\\&quot; if it is, and \\\&quot;No\\\&quot; otherwise.\&quot;,\&quot;/src/begginerLevel/Judged.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes input from the user, processes it, and outputs a result.\\n\\nThe program first takes an integer `t` as input, which represents the number of test cases. Then, for each test case, it takes 5 integers as input and counts the number of times the value 1 appears in the input. If the count is greater than or equal to 4, the program outputs \\\&quot;YES\\\&quot;, otherwise it outputs \\\&quot;NO\\\&quot;.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndNumberGame.java\&quot;:\&quot;This file contains a single class `ChefAndNumberGame` that solves a problem related to a number game.\\n\\n`ChefAndNumberGame`: This class solves a problem where participants in a game provide a set of numbers, and the goal is to determine the maximum number of participants that can be divided into two groups, one with positive numbers and the other with negative numbers.\\n\\nThe file does not contain any functions. Instead, it has a `main()` method that takes input, processes it, and prints the output.\&quot;,\&quot;/src/begginerLevel/ChefEren.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to Chef Eren. The program takes input from the user, calculates the total cost of even and odd indices, and prints the result.\\n\\nThe program does the following:\\n\\n1. Reads the number of test cases from the user.\\n2. For each test case, it reads the values of `n`, `a`, and `b`.\\n3. It calculates the number of even and odd indices in the range `[1, n]`.\\n4. It then calculates the total cost by multiplying the number of even indices by `a` and the number of odd indices by `b`, and prints the result.\&quot;,\&quot;/src/begginerLevel/ChefAndCardGame.java\&quot;:\&quot;This file contains a single class `ChefAndCardGame` and two functions `main()` and `solve()`.\\n\\n`ChefAndCardGame`: This class implements a solution to the \\\&quot;Chef and Card Game\\\&quot; problem, where two players (Chef and Morty) compete by comparing the sum of digits of their respective numbers.\\n\\n`main()`: This function is the entry point of the program, which reads input, processes the data, and outputs the result of the competition between Chef and Morty.\\n\\n`solve()`: This function calculates the sum of digits of a given number.\&quot;,\&quot;/src/begginerLevel/BellsOfPligrimage.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that reads input from the user and performs some calculations related to bells and mana. The program appears to be a solution to a problem, but without more context, it\\u0027s difficult to provide a more detailed summary.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndEmploymentTest.java\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`main`: This function takes user input, sorts an array, and prints the median value of the array.\\n\\nThe file is a Java program that solves the \\\&quot;Chef and Employment Test\\\&quot; problem. It takes input for the number of test cases, the size of the array, and the array elements. It then sorts the array and prints the median value of the array.\&quot;,\&quot;/src/begginerLevel/FindTheDirection.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes an integer input `t` and then for each of the `t` inputs, it determines the direction (East, South, West, or North) based on the given integer value.\\n\\nThe program uses the modulo operator `%` to determine the direction based on the remainder when the input is divided by 4. If the remainder is 1, the direction is East; if the remainder is 2, the direction is South; if the remainder is 3, the direction is West; and if the remainder is 0, the direction is North.\&quot;,\&quot;/src/begginerLevel/QualifyTheRound.java\&quot;:\&quot;This file contains a single class `QualifyTheRound` that solves a problem related to qualifying for a round based on the number of easy and hard problems solved.\\n\\n`QualifyTheRound`: This class takes input from the user, calculates the total points earned from easy and hard problems, and determines whether the user qualifies for the round or not.\\n\\nThe file does not contain any functions. It only has the `main()` method, which is the entry point of the program. The `main()` method reads input from the user, performs the necessary calculations, and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/MathisonAndPangrams.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Mathison and Pangrams\\\&quot; problem. The program takes input from the user, which includes the number of test cases and the frequency of each letter in the alphabet. It then calculates the sum of the frequencies of the letters that are not present in the given string and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/FromHeavenToEarth.java\&quot;:\&quot;This file contains a single class `FromHeavenToEarth` and a single `main` function.\\n\\n`FromHeavenToEarth`: This class contains the main logic to determine whether an array of integers can be sorted in non-decreasing order by swapping at most one pair of adjacent elements.\\n\\n`main`: This function takes input, processes the input, and prints the result (whether the array can be sorted or not) for each test case.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndTableTennis.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Chef and Table Tennis\\\&quot; problem. The program takes input from the user, counts the number of \\u00270\\u0027 and \\u00271\\u0027 characters in the input string, and then determines whether the number of \\u00270\\u0027 characters is greater than the number of \\u00271\\u0027 characters. If the number of \\u00270\\u0027 characters is greater, the program prints \\\&quot;No\\\&quot;, otherwise it prints \\\&quot;Yes\\\&quot;.\&quot;,\&quot;/src/begginerLvevelSecondHalf/SumOfPalindromic.java\&quot;:\&quot;This file contains a single class `SumOfPalindromic` and two functions `main` and `palindrome`.\\n\\n`SumOfPalindromic`: This class contains the main logic to find the sum of all palindromic numbers between a given range.\\n\\n`main`: This function takes input from the user, iterates through the range, checks if each number is palindromic, and prints the sum of all palindromic numbers.\\n\\n`palindrome`: This function takes an integer as input and returns `true` if the number is palindromic, and `false` otherwise.\&quot;,\&quot;/src/begginerLevel/Codechef.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that reads in a series of integers from the user, counts the number of even integers, and then prints \\\&quot;READY FOR BATTLE\\\&quot; if more than half of the integers are even, or \\\&quot;NOT READY\\\&quot; otherwise.\&quot;,\&quot;/src/begginerLevel/BackToCampus.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that solves a problem related to dividing a number `n` by a divisor `k`. The program takes input for the number of test cases, and for each test case, it calculates the number of groups that can be formed by dividing `n` by `k`. If `n` is divisible by `k`, it prints the result as `n/k`, otherwise, it prints `(n/k) + 1`.\&quot;,\&quot;/src/begginerLvevelSecondHalf/UncleJohny.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function is the entry point of the program, which takes input from the user, sorts an array, and finds the index of a specific element in the sorted array.\\n\\nThe file appears to be a solution to the \\\&quot;Uncle Johny\\\&quot; problem, where the task is to find the position of a specific element in a sorted array after the array is sorted.\&quot;,\&quot;/src/begginerLvevelSecondHalf/DigitSemParties.java\&quot;:\&quot;This file contains a single class `DigitSemParties` and does not have any functions defined. The file appears to be a Java program that takes input from the user and performs some operations on it, but the specific functionality is not clear from the provided code.\\n\\n`DigitSemParties`: This class appears to be a Java program that performs some operations on user input.\&quot;,\&quot;/src/begginerLvevelSecondHalf/MagicWorld.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to the \\\&quot;Magic World\\\&quot; scenario. The program takes input for the number of test cases, and for each test case, it reads the dimensions of a rectangle (a and b) and a square (x). It then determines the minimum number of cuts required to fit the square inside the rectangle and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/AlternatingString.java\&quot;:\&quot;This file contains a single class and a single function:\\n\\n`Node`: A class that represents a node in a linked list, with an integer data value and a reference to the next node.\\n\\n`main`: The main function that reads input, counts the number of 0s and 1s in a given string, and prints the minimum number of operations required to make the string alternating.\\n\\nThe file solves the \\\&quot;Alternating String\\\&quot; problem, where the goal is to find the minimum number of operations required to make a given string alternating (i.e., a string where the characters alternate between 0 and 1). The solution involves counting the number of 0s and 1s in the string and then calculating the minimum number of operations required based on the difference between the counts.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ElectionsInChefland.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that simulates an election process in Chefland. The program takes input for the number of test cases, and for each test case, it takes the vote counts for three candidates, A, B, and C. It then prints the name of the candidate who received more than 50 votes, or \\\&quot;NOTA\\\&quot; if none of the candidates received more than 50 votes.\&quot;,\&quot;/src/begginerLevel/ChefAndProportion.java\&quot;:\&quot;This file contains a single class `ChefAndProportion` that solves a problem related to proportions. The file does not contain any functions, but the `main()` method is the entry point of the program.\\n\\n`ChefAndProportion`: This class solves a problem where the user inputs a number `l` and a number `k`, and the program determines whether `l` is divisible by `k` or not.\\n\\nThe `main()` method: This method takes input from the user, processes the input, and prints the appropriate output based on whether `l` is divisible by `k` or not.\&quot;,\&quot;/src/begginerLevel/FilltheGrid.java\&quot;:\&quot;This file contains a single class `FilltheGrid` and two functions `main()` and `solve()`.\\n\\n`FilltheGrid`: A class that represents a grid with a largest number and its index.\\n\\n`main()`: The main function that takes input, calls the `solve()` function, and prints the largest number and its index.\\n\\n`solve()`: A function that takes an array of integers, finds the largest number and its index, and returns a `FilltheGrid` object with the largest number and its index.\&quot;,\&quot;/src/begginerLevel/PlayPiano.java\&quot;:\&quot;This file contains a single class `PlayPiano` and one function `main()`.\\n\\n`PlayPiano`: This class contains the main logic for the program, which checks if a given string has any consecutive characters.\\n\\n`main()`: This function is the entry point of the program. It reads input from the user, checks if the input string has any consecutive characters, and prints the appropriate output.\\n\\nThe program takes input from the user, checks if the input string has any consecutive characters, and prints \\\&quot;yes\\\&quot; if there are no consecutive characters, and \\\&quot;no\\\&quot; if there are consecutive characters.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ThreeDices.java\&quot;:\&quot;This file contains a single class `ThreeDices` and a single function `main()`.\\n\\n`ThreeDices`: This class contains the main logic for the program.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user and performs some operations on the input.\\n\\nThe file appears to be a program that takes input of two integers `x` and `y`, but the purpose of the program is not clear from the provided code.\&quot;,\&quot;/src/begginerLevel/JanmanshAtFruitMarket.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to a fruit market. The program takes input for the number of test cases, the number of fruits Janmansh can buy, and the prices of the three types of fruits. It then calculates the minimum total amount Janmansh needs to spend to buy the desired number of fruits and prints the result.\&quot;,\&quot;/src/begginerLevel/Problem.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an input `t` representing the number of test cases, and for each test case, it takes two integers `n` and `m`. It then calculates the absolute difference between `n` and `m`, and checks if the difference is even or odd. If the difference is even, it prints \\\&quot;Yes\\\&quot;, otherwise it prints \\\&quot;No\\\&quot;.\&quot;,\&quot;/src/begginerLvevelSecondHalf/OrPermutation.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes an integer `t` as input, and then for each of the `t` cases, it takes an integer `n` as input and prints the numbers from `n` to 1 in descending order.\&quot;,\&quot;/src/DSAPreparetion1/ThreeNumberExpression.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes three numbers as input and checks if any two of them add up to the third number. If such a combination exists, it prints \\\&quot;Yes\\\&quot;, otherwise it prints \\\&quot;No\\\&quot;.\&quot;,\&quot;/src/begginerLevel/MaximumProduction.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Maximum Production\\\&quot; problem. The program takes input for the number of days, three different ways of producing units, and calculates the maximum number of units that can be produced in a week.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ATMMachine.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that simulates an ATM machine. The program takes input for the number of customers, the total amount of money in the ATM, and the amount each customer wants to withdraw. It then determines which customers can withdraw their desired amount and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/CardSwipe.java\&quot;:\&quot;This file contains a single class `CardSwipe` and three functions: `maxAndMin`, `printUnorderPairs`.\\n\\n`CardSwipe`: This class solves a problem related to card swiping, where the goal is to find the maximum number of unique card IDs swiped at any given time.\\n\\n`maxAndMin`: This function takes an integer array as input and prints the maximum and minimum values in the array.\\n\\n`printUnorderPairs`: This function takes an integer array as input and prints all the unordered pairs of elements in the array.\&quot;,\&quot;/src/begginerLevel/TheThreeTopics.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes four integer inputs from the user and checks if the fourth input is equal to any of the first three inputs. If the fourth input matches any of the first three, it prints \\\&quot;Yes\\\&quot;, otherwise it prints \\\&quot;No\\\&quot;.\&quot;,\&quot;/src/begginerLvevelSecondHalf/CutTheBoard.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that calculates the number of cuts required to cut a rectangular board into smaller rectangular pieces. The program takes the dimensions of the board as input and outputs the number of cuts required.\&quot;,\&quot;/src/begginerLvevelSecondHalf/AProblemONSticks.java\&quot;:\&quot;This file contains a single class `AProblemONSticks` and a single function `main()`.\\n\\n`AProblemONSticks`: This class contains the main logic for solving the problem of finding the number of distinct sticks in an array.\\n\\n`main()`: This function reads input from the user, sorts the array, and then counts the number of distinct sticks by keeping track of the maximum value seen so far.\\n\\nThe file as a whole solves the problem of finding the number of distinct sticks in an array, where each stick has a certain length. The solution involves sorting the array and then counting the number of distinct sticks by keeping track of the maximum value seen so far.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ImmortalFrieza.java\&quot;:\&quot;This file contains a single class `ImmortalFrieza` and two functions `main()` and `isFrieza()`.\\n\\n`ImmortalFrieza`: This class contains the main logic to solve the problem of counting the number of occurrences of the word \\\&quot;Frieza\\\&quot; in a given string.\\n\\n`main()`: This function takes input from the user, processes the input string, and prints the output.\\n\\n`isFrieza()`: This function checks if a given character is part of the word \\\&quot;Frieza\\\&quot;.\&quot;,\&quot;/src/begginerLevel/IntegerThatSumToTheSameValue.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer input `n` from the user and calculates the number of pairs of integers `i` and `j` where `i + j \\u003d n` and `i \\u003c j`. The program then prints the count of such pairs.\&quot;,\&quot;/src/begginerLevel/WaterMixing.java\&quot;:\&quot;This file contains a single class `WaterMixing` and a single function `main()`.\\n\\n`WaterMixing`: This class contains the main logic for solving the water mixing problem.\\n\\n`main()`: This function is the entry point of the program, which takes input, performs the water mixing calculation, and prints the result.\\n\\nThe program solves the water mixing problem, where the goal is to determine if it is possible to mix hot water with the water in a bathtub to reach a target temperature. The program takes the initial temperature of the water in the bathtub, the target temperature, and the amount of hot water to be added or removed, and then checks if the target temperature can be reached.\&quot;,\&quot;/src/begginerLvevelSecondHalf/BiLindrome.java\&quot;:\&quot;This file contains a single class `BiLindrome` and two functions `solve` and `biLindrome`.\\n\\n`BiLindrome`: This class contains the main method that takes input, checks if the given string is a bi-palindrome, and prints the result.\\n\\n`solve`: This function takes a string `hatStack` and a string `needle` as input, and returns the index of the first occurrence of `needle` in `hatStack`.\\n\\n`biLindrome`: This function takes a string `s` and its length `n` as input, and returns `true` if the string contains at least two characters that are the same, and `false` otherwise.\&quot;,\&quot;/src/begginerLevel/ChefAndPriceControl.java\&quot;:\&quot;This file contains a single class `ChefAndPriceControl` and two functions `main` and `sovle`.\\n\\n`ChefAndPriceControl`: This class contains the main logic for solving the \\\&quot;Chef and Price Control\\\&quot; problem.\\n\\n`main`: This function is the entry point of the program, which takes input from the user, calls the `sovle` function, and prints the output.\\n\\n`sovle`: This function calculates the total lost revenue by comparing the given prices with the price control limit `k` and returns the total lost revenue.\&quot;,\&quot;/src/begginerLevel/BetterDeal.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that solves the \\\&quot;Better Deal\\\&quot; problem. The program takes input of the number of test cases and the values of `a` and `b` for each test case, and then determines whether the first person, the second person, or both can get a better deal based on the given conditions.\&quot;,\&quot;/src/begginerLevel/ChefAndBirdFarm.java\&quot;:\&quot;This file contains a single class `ChefAndBirdFarm` that solves a problem related to determining the type of birds on a farm based on the total number of legs.\\n\\n`ChefAndBirdFarm`: This class determines the type of birds on a farm based on the total number of legs of all the birds.\\n\\n`main`: This function takes input from the user, calculates the type of birds on the farm, and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/FoodChain.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Food Chain\\\&quot; problem. The program takes input for the number of test cases, and for each test case, it calculates the number of steps required for a given initial number of animals and a given multiplication factor. The program then prints the number of steps for each test case.\&quot;,\&quot;/src/begginerLvevelSecondHalf/LargerSquare.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer `t` as input, and then for each of the `t` cases, it takes two integers `n` and `a` as input. It then calculates the largest square that can fit inside the number `n` and multiplies it by `a` to get the final output.\&quot;,\&quot;/src/begginerLevelSecond.java\&quot;:\&quot;This file contains a single class named `begginerLevelSecond`. Since there are no functions defined within the class, the file appears to be a simple class declaration without any additional functionality.\\n\\n`begginerLevelSecond`: This class is likely a part of a larger project or application, but it does not have any defined functionality in the provided code snippet.\&quot;,\&quot;/src/begginerLevel/WorldChessChampionship.java\&quot;:\&quot;This file contains a single class `WorldChessChampionship` and a single `main()` function.\\n\\n`WorldChessChampionship`: This class implements a program that simulates a world chess championship tournament and calculates the prize money based on the results.\\n\\n`main()`: The `main()` function is the entry point of the program, which takes input from the user, processes the chess match results, and outputs the corresponding prize money.\\n\\nThe program simulates a world chess championship tournament, where the user inputs the number of matches and the results of each match. The program then calculates the total points earned by each player and determines the winner based on the points. The prize money is then calculated based on the winner\\u0027s points and output to the console.\&quot;,\&quot;/src/begginerLevel/TestingRobot.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that simulates the movement of a robot on a one-dimensional line. The program takes input for the number of test cases, the initial position of the robot, and the sequence of movements (left or right). It then calculates the number of unique positions the robot has visited and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/PathParty.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that checks whether a given number `n` and a given number `k` satisfy certain conditions, and prints \\\&quot;YES\\\&quot; or \\\&quot;NO\\\&quot; accordingly. The program takes input for the number of test cases, and then for each test case, it takes input for `n` and `k`, and performs the necessary checks.\&quot;,\&quot;/src/begginerLvevelSecondHalf/AdaAndCrayons.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Ada and Crayons\\\&quot; problem. The program takes input from the user, which includes the number of test cases and the string of colors. It then calculates the minimum number of crayons that Ada needs to use to color the entire string, and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndParty.java\&quot;:\&quot;This file contains a single class `ChefAndParty` that solves a problem related to a chef and a party.\\n\\n`ChefAndParty`: This class solves the problem of determining the number of eligible friends that can attend a party based on the given arrival times of the friends.\\n\\n`main`: This function is the entry point of the program. It reads the input, processes the arrival times of the friends, and outputs the number of eligible friends that can attend the party.\&quot;,\&quot;/src/begginerLevel/DevendraAndWaterSprots.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to water sports. The program takes input from the user, including the total number of test cases, and then for each test case, it checks whether the difference between the total distance and the distance covered by the water sports activities is greater than or equal to the total distance required for the remaining activities. Based on this, it prints \\\&quot;Yes\\\&quot; or \\\&quot;No\\\&quot; as the output.\&quot;,\&quot;/src/begginerLvevelSecondHalf/LargestK.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes two integers `x` and `y` as input, and prints the value of `y / (x-1)` for each set of input.\\n\\nThe program is designed to solve a problem where the user needs to find the largest value of `k` such that `x * k \\u003c\\u003d y`, where `x` and `y` are the input integers.\&quot;,\&quot;/src/begginerLevel/SmallestNumberOfNotes.java\&quot;:\&quot;This file contains a single class `SmallestNumberOfNotes` that solves the problem of finding the smallest number of notes required to make a given amount of money using a set of denominations.\\n\\n`SmallestNumberOfNotes`: This class calculates the smallest number of notes required to make a given amount of money using a set of denominations.\\n\\n`solve(Scanner sc)`: This function takes an input amount and returns the smallest number of notes required to make that amount using the given denominations.\&quot;,\&quot;/README.md\&quot;:\&quot;This file appears to be a description of a CodeChef beginner-level package, which contains code for problems from the CodeChef platform. The file does not contain any class or function definitions, but rather provides a high-level overview of the package.\\n\\nThe file indicates that the CodeChef problems have the same name as the Java classes, and provides an example of the \\\&quot;Bomb The Base\\\&quot; problem and its corresponding Java class \\\&quot;BombTheBase\\\&quot;.\\n\\nIn summary, this file serves as a general description of a CodeChef beginner-level package, without providing any specific class or function details.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndMean.java\&quot;:\&quot;This file contains a single class `ChefAndMean` and three functions: `search`, `isPrime`.\\n\\n`ChefAndMean`: This class appears to be a solution for a problem related to finding the mean of an array.\\n\\n`search`: This function performs a binary search on a given array to find the index of a target element.\\n\\n`isPrime`: This function checks whether a given number is prime or not.\\n\\nThe file also includes a `main` method that takes input, processes it, and likely performs some operations related to the `ChefAndMean` problem.\&quot;,\&quot;/src/arrays/RemoveBadElements.java\&quot;:\&quot;This file contains a single class `RemoveBadElements` and does not have any functions defined. The file appears to be a Java program that aims to remove \\\&quot;bad\\\&quot; elements from an array, but the implementation is not provided in the given code snippet.\\n\\n`RemoveBadElements`: A class that likely contains functionality to remove \\\&quot;bad\\\&quot; elements from an array.\&quot;,\&quot;/src/begginerLevel/LuckyFour.java\&quot;:\&quot;This file contains a single class `LuckyFour` that solves the \\\&quot;Lucky Four\\\&quot; problem, which involves counting the number of occurrences of the digit \\u00274\\u0027 in a given set of integers.\\n\\n`LuckyFour`: This class solves the \\\&quot;Lucky Four\\\&quot; problem by taking a set of integers as input, and for each integer, it counts the number of occurrences of the digit \\u00274\\u0027 and prints the result.\\n\\n`main`: This function is the entry point of the program. It takes user input, processes the input, and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/WeaponChoice.java\&quot;:\&quot;This file contains a single class `WeaponChoice` that solves a problem related to weapon choice.\\n\\n`WeaponChoice`: This class takes input from the user, performs calculations to determine the optimal weapon choice, and outputs the result.\\n\\n`main`: This function is the entry point of the program. It reads input from the user, performs the necessary calculations, and prints the optimal weapon choice.\&quot;,\&quot;/src/begginerLevel/CompressTheVideo.java\&quot;:\&quot;This file contains a single class `CompressTheVideo` that has a single function `main()`. The purpose of this program is to compress a video by removing consecutive duplicate frames.\\n\\n`CompressTheVideo`: A class that compresses a video by removing consecutive duplicate frames.\\n\\n`main()`: The main function that reads in the number of test cases, the number of frames in the video, and the values of each frame, and then outputs the number of unique frames after compression.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ABooks.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function reads input from the user, processes the input, and prints the output.\\n\\nThe file is a Java program that solves the \\\&quot;A. Books\\\&quot; problem from a beginner-level coding challenge. The program takes an integer `t` as input, which represents the number of test cases. For each test case, the program reads an integer `n` and `n` integers representing the heights of the books. It then calculates the number of books that are taller than the current book for each book and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/DailyTrain.java\&quot;:\&quot;This file contains a single class `DailyTrain` and no functions. The file appears to be a Java program that takes an integer input `n` from the user using the `Scanner` class, but does not perform any further operations on the input.\\n\\n`DailyTrain`: A class that reads an integer input from the user and does not perform any further operations.\&quot;,\&quot;/src/begginerLvevelSecondHalf/MagicianVersusChef.java\&quot;:\&quot;This file contains a single class `MagicianVersusChef` that solves the problem of tracking the position of a coin after a series of swaps.\\n\\n`MagicianVersusChef`: This class implements a solution to the problem of tracking the position of a coin after a series of swaps.\\n\\n`main`: This function reads input, performs the coin swapping operations, and prints the final position of the coin.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndWork.java\&quot;:\&quot;This file contains a single class `ChefAndWork` that solves a problem related to packing boxes with a given capacity.\\n\\n`ChefAndWork`: This class contains a solution to the \\\&quot;Chef and Work\\\&quot; problem, where the goal is to find the maximum number of boxes that can be packed into a given capacity.\\n\\n`main`: This function is the entry point of the program. It reads input from the user, processes the data, and outputs the result.\&quot;,\&quot;/src/begginerLevel/ChefAndPairingSlippers.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Chef and Pairing Slippers\\\&quot; problem. The program takes input for the number of test cases, the number of slippers, the number of left slippers, and the cost of each pair of slippers. It then calculates the minimum cost to buy all the pairs of slippers and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/WeirdModuloProblem.java\&quot;:\&quot;This file contains a single class `WeirdModuloProblem` that solves a problem related to the modulo operation.\\n\\n`WeirdModuloProblem`: This class solves a problem where the goal is to find the smallest non-zero remainder when the first element of an array is divided by the second element, and then the result is divided by the third element, and so on.\\n\\n`main`: This function takes input from the user, sorts the array, and then calculates the smallest non-zero remainder using the modulo operation.\&quot;,\&quot;/src/begginerLevel/MinimumNumberOfCoins.java\&quot;:\&quot;This file contains a single class `MinimumNumberOfCoins` that solves the problem of finding the minimum number of coins required to make a given amount of change, using coins of denominations 10 and 5.\\n\\n`MinimumNumberOfCoins`: This class solves the problem of finding the minimum number of coins required to make a given amount of change, using coins of denominations 10 and 5.\\n\\n`main`: This function takes input from the user, processes it, and prints the minimum number of coins required to make the given amount of change, or -1 if the amount is not divisible by 5.\&quot;,\&quot;/src/begginerLevel/Coldplay.java\&quot;:\&quot;This file contains a single class `Coldplay` and one function `main()`.\\n\\n`Coldplay`: This class contains the main logic for the program.\\n\\n`main()`: This function reads input from the user, calculates the number of times a student can buy a Coldplay album, and prints the result.\\n\\nThe program takes input from the user, where the first line contains the number of test cases, and each subsequent line contains two integers `m` and `s`, representing the amount of money the student has and the cost of a Coldplay album, respectively. The program then calculates the number of Coldplay albums the student can buy and prints the result.\&quot;,\&quot;/src/begginerLevel/CountTheHolidays.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that counts the number of non-holiday days in a given set of days. The program takes an input `t` representing the number of test cases, and for each test case, it reads `n` days and counts the number of non-holiday days, where the holidays are defined as the 6th, 7th, 13th, 14th, 20th, 21st, 27th, and 28th of each month. The program then prints the count of non-holiday days plus 8 (the number of holidays).\&quot;,\&quot;/src/begginerLevel/IDOfShip.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that takes input from the user and determines the type of ship based on the first character of the input. The program then prints the corresponding ship type (Destroyer, BattleShip, Cruiser, or Frigate) to the console.\&quot;,\&quot;/src/begginerLvevelSecondHalf/NonAdjacentflips.java\&quot;:\&quot;This file contains a single class `NonAdjacentflips` and two functions `main` and `numOFflips`.\\n\\n`NonAdjacentflips`: This class contains the main logic for solving the problem of finding the minimum number of flips required to make all the characters in a string non-adjacent.\\n\\n`main`: This function is the entry point of the program, which takes input from the user, calls the `numOFflips` function, and prints the result.\\n\\n`numOFflips`: This function takes the length of the string and the string itself as input, and returns the minimum number of flips required to make all the characters in the string non-adjacent.\&quot;,\&quot;/src/begginerLevel/Factorial.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that calculates the number of trailing zeros in the factorial of a given number. The program takes input from the user, calculates the number of trailing zeros, and prints the result.\&quot;,\&quot;/src/begginerLevel/MArbles.java\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`main`: This function takes user input for the number of test cases and the value of `n` and `k`, and then calculates the number of ways to choose `k` marbles from `n` marbles and prints the result.\\n\\nThe file is a Java program that solves a problem related to choosing a certain number of marbles from a given number of marbles. It uses a loop to calculate the number of ways to choose `k` marbles from `n` marbles and prints the result for each test case.\&quot;,\&quot;/src/begginerLevel/ProblemsInYourToDoList.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that solves a problem related to a to-do list. The program takes an input of the number of tasks in the to-do list, and then the values of each task. It then counts the number of tasks that have a value greater than or equal to 1000 and prints the result.\&quot;,\&quot;/src/begginerLevel/OnlineOrOffline.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes input from the user, calculates the cost of an online order after a 10% discount, and then compares it to the cost of dining in to determine whether the user should order online or dine in.\\n\\nThe program first takes the number of test cases as input, and then for each test case, it takes the cost of the online order and the cost of dining in as input. It then calculates the cost of the online order after a 10% discount and compares it to the cost of dining in. Based on the comparison, it prints \\\&quot;Dining\\\&quot;, \\\&quot;Online\\\&quot;, or \\\&quot;Either\\\&quot; to the console.\&quot;,\&quot;/src/begginerLvevelSecondHalf/PoweredParameters.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes user input, sorts an array, calculates the minimum number of operations required to make each element in the array equal to its index plus one, and prints the result or -1 if it\\u0027s impossible.\\n\\nThe file is a solution to the \\\&quot;Powered Parameters\\\&quot; problem, where the goal is to find the minimum number of increments required to make each element in an array equal to its index plus one.\&quot;,\&quot;/src/begginerLvevelSecondHalf/FlatLand.java\&quot;:\&quot;This file contains a single class `FlatLand` and a single function `countSquares`.\\n\\n`FlatLand`: This class contains the main method that takes input, calls the `countSquares` function, and prints the result.\\n\\n`countSquares`: This function takes an integer `n` as input and returns the number of squares that can be formed from `n` by repeatedly subtracting the largest possible square.\\n\\nThe file solves the \\\&quot;Flat Land\\\&quot; problem, which involves finding the minimum number of squares that can be formed from a given number `n` by repeatedly subtracting the largest possible square.\&quot;,\&quot;/src/begginerLevel/BallsAndBoxes.java\&quot;:\&quot;This file contains a single class `BallsAndBoxes` and one function `main()`.\\n\\n`BallsAndBoxes`: This class contains a solution to the problem of determining whether a given number of balls can be distributed among a given number of boxes.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user, calculates the total number of balls that can be distributed among the given number of boxes, and prints \\\&quot;Yes\\\&quot; if the number of balls is greater than or equal to the total, and \\\&quot;No\\\&quot; otherwise.\&quot;,\&quot;/src/begginerLvevelSecondHalf/AGoodSet.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that generates a sequence of numbers where each number is the sum of the previous number and 2. The program takes an integer `t` as input, which represents the number of test cases, and for each test case, it generates and prints the sequence of `n` numbers, where `n` is also an input.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ApplesAndOranges.java\&quot;:\&quot;This file contains a single class `ApplesAndOranges` and a single function `solve()`.\\n\\n`ApplesAndOranges`: This class contains the main entry point of the program, which takes input, calls the `solve()` function, and prints the result.\\n\\n`solve()`: This function implements the Euclidean algorithm to find the greatest common divisor (GCD) of two numbers, `n` and `m`.\\n\\nThe purpose of this program is to find the GCD of two numbers, given as input, using the Euclidean algorithm.\&quot;,\&quot;/src/begginerLevel/PracticeProblemChefAndHappyString.java\&quot;:\&quot;This file contains a single class `PracticeProblemChefAndHappyString` that solves a problem related to finding if a given string contains at least three consecutive vowels.\\n\\n`PracticeProblemChefAndHappyString`: This class solves the problem of determining whether a given string contains at least three consecutive vowels.\\n\\n`main(String[] args)`: This function reads input, processes the input string, and prints the result (whether the string is \\\&quot;Happy\\\&quot; or \\\&quot;Sad\\\&quot;) based on the presence of at least three consecutive vowels.\\n\\n`isVowel(char c)`: This function checks if the given character is a vowel (a, e, i, o, or u).\&quot;,\&quot;/src/begginerLvevelSecondHalf/DominantElement.java\&quot;:\&quot;This file contains a single class `DominantElement` and two functions `main` and `isDominantElement`.\\n\\n`DominantElement`: This class contains the main logic to determine if a given array has a dominant element or not.\\n\\n`main`: This function takes input from the user, processes the input, and determines if the given array has a dominant element or not.\\n\\n`isDominantElement`: This function takes an array as input and checks if the array has a dominant element or not.\\n\\nThe file as a whole is designed to solve the problem of finding a dominant element in an array. A dominant element is an element that appears more than half the time in the array.\&quot;,\&quot;/src/begginerLvevelSecondHalf/CaesarCipher.java\&quot;:\&quot;This file contains a single class `CaesarCipher` and a single function `convertString()`.\\n\\n`CaesarCipher`: This class implements the Caesar cipher algorithm, which is a simple substitution cipher used for encryption and decryption.\\n\\n`convertString()`: This function takes a string as input and performs the Caesar cipher transformation on it, but the implementation is not provided in the given code.\\n\\nThe main purpose of this file is to implement a Caesar cipher algorithm, which is a basic cryptographic technique used to encrypt and decrypt messages. The code provided sets up the necessary variables and calls the `convertString()` function, but the implementation of the function is not complete.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ClosestVowels.java\&quot;:\&quot;This file contains a single class `ClosestVowels` and a single function `isVowel()`.\\n\\n`ClosestVowels`: This class contains a main method that takes input from the user, processes it, and performs some operations related to finding the closest vowels in a given string.\\n\\n`isVowel()`: This function checks whether a given character is a vowel or not.\&quot;,\&quot;/src/begginerLevel/ChefAndContest.java\&quot;:\&quot;This file contains a single class `ChefAndContest` that solves a problem related to a contest between Chef and Chefina.\\n\\n`ChefAndContest`: This class takes input from the user, calculates the final scores of Chef and Chefina, and prints the winner or a draw.\\n\\n`main`: This function is the entry point of the program. It reads the input, calculates the scores, and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChocolateDistribution.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the Chocolate Distribution problem. The program takes an integer `t` as input, which represents the number of test cases, and for each test case, it prints a specific output format consisting of three integers: `1`, `1`, and `n-2`, where `n` is the input value for the current test case.\&quot;,\&quot;/src/begginerLvevelSecondHalf/Infernos.java\&quot;:\&quot;This file contains a single class `Infernos` and a single function `main()`.\\n\\n`Infernos`: This class contains the main logic for solving the problem of finding the maximum number of enemies that can be killed using a given attack power.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user, processes the data, and prints the output.\\n\\nThe program solves the problem of finding the maximum number of enemies that can be killed using a given attack power. It takes input for the number of enemies and the attack power, and then calculates the number of attacks required to kill each enemy. The maximum of the total number of attacks and the maximum enemy health is then printed as the output.\&quot;,\&quot;/src/begginerLevel/Marathon.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to a marathon. The program takes input for the number of days, the distance covered per day, and the prize amounts for three different marathon distances. It then calculates the total distance covered and outputs the corresponding prize amount based on the given conditions.\&quot;,\&quot;/src/begginerLvevelSecondHalf/LaptopRecommendation.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes user input, processes it, and outputs the recommended laptop based on the most recommended laptop among the friends.\\n\\nThe file is a Java program that solves the problem of recommending a laptop based on the preferences of a group of friends. It takes input of the number of friends and their preferred laptop models, and then determines the most recommended laptop model and outputs it or indicates that there is confusion if multiple models are recommended equally.\&quot;,\&quot;/src/contest/makeBobWin.java\&quot;:\&quot;This file contains a single class `makeBobWin` and a single function `main()`.\\n\\n`makeBobWin`: This class contains the main logic to solve the problem of making Bob win.\\n\\n`main()`: This function reads input from the user, processes the input, and prints the output based on the problem statement.\\n\\nThe file solves a problem where the goal is to make Bob win. The problem involves a string of 0s and 1s, and the task is to determine the minimum number of changes required to make the string such that Bob wins.\&quot;,\&quot;/src/begginerLevel/NearestExist.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer input `x` from the user and determines whether the nearest exit is on the \\\&quot;Right\\\&quot; or \\\&quot;Left\\\&quot; based on the value of `x`. If `x` is greater than or equal to 50, it prints \\\&quot;Right\\\&quot;, otherwise it prints \\\&quot;Left\\\&quot;.\&quot;,\&quot;/src/begginerLvevelSecondHalf/DownloadFile.java\&quot;:\&quot;This file contains a single class `DownloadFile` and a single function `main()`.\\n\\n`DownloadFile`: This class contains the main logic for solving the problem of downloading files with a limited bandwidth.\\n\\n`main()`: This function reads input from the user, processes the file download requests, and calculates the total cost of downloading the files.\\n\\nThe file solves the problem of downloading files with a limited bandwidth. It takes input from the user, including the number of test cases, the number of files to download, and the available bandwidth. It then calculates the total cost of downloading the files, taking into account the available bandwidth and the cost of downloading each file.\&quot;,\&quot;/src/begginerLevel/REarrangeingDigitsToGetAMultipleOfFive.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer `t` as input, representing the number of test cases. For each test case, it takes an integer `n` and a string `s` as input, and checks if the string contains the digits \\u00275\\u0027 or \\u00270\\u0027. If it does, it prints \\\&quot;Yes\\\&quot;, otherwise it prints \\\&quot;No\\\&quot;.\&quot;,\&quot;/src/begginerDSA/ReviewProblem.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to Chef\\u0027s salary. The program takes input for the number of test cases and the number of days, and then calculates the final salary of the Chef after deducting 50% of the salary for each day. The final salary is then printed for each test case.\&quot;,\&quot;/src/begginerLevel/InsideTheStadium.java\&quot;:\&quot;This file contains a single class `InsideTheStadium` and two functions `calculateStrikeRate` and `main`.\\n\\n`InsideTheStadium`: This class contains the main logic for the problem of calculating the number of times a batsman\\u0027s strike rate is exactly 100.\\n\\n`calculateStrikeRate`: This function takes the total number of balls played and the runs scored on each ball, and calculates the number of times the batsman\\u0027s strike rate is exactly 100.\\n\\n`main`: This function is the entry point of the program. It reads the input, calls the `calculateStrikeRate` function, and prints the result.\&quot;,\&quot;/src/Main.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer input `n` from the user using the `Scanner` class.\&quot;,\&quot;/src/begginerLvevelSecondHalf/BuyingSweets.java\&quot;:\&quot;This file contains a single class `BuyingSweets` that solves a problem related to buying sweets.\\n\\n`BuyingSweets`: This class solves the problem of buying sweets, where the goal is to find the maximum number of sweets that can be bought with a given amount of money.\\n\\nThe file does not contain any functions. Instead, the main logic is implemented in the `main()` method, which takes input, processes it, and outputs the result.\&quot;,\&quot;/src/begginerLevel/Relativity.java\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`main`: This function takes user input for the number of test cases, and for each test case, it calculates the height of an object based on the given values of `p` and `c`, and prints the result.\\n\\nThe file is a Java program that solves a problem related to the concept of relativity. It takes input for the number of test cases and the values of `p` and `c` for each test case, and then calculates and prints the height of an object based on the given formula.\&quot;,\&quot;/src/begginerLvevelSecondHalf/MaximumAlternatingSum.java\&quot;:\&quot;This file contains a single class `MaximumAlternatingSum` that solves the problem of finding the maximum alternating sum of a given array.\\n\\n`MaximumAlternatingSum`: This class contains the main logic to solve the problem of finding the maximum alternating sum of a given array.\\n\\n`main`: This function takes input from the user, sorts the array, calculates the sum of the first half and the second half of the array, and then prints the difference between the second half and the first half, which is the maximum alternating sum.\&quot;,\&quot;/src/contest/RedundantArray.java\&quot;:\&quot;This file contains a single class `RedundantArray` and a single `main` function. The file appears to be a solution to a programming contest problem, where the goal is to find the minimum cost to make an array non-redundant.\\n\\n`RedundantArray`: This class contains the main logic to solve the problem of finding the minimum cost to make an array non-redundant.\\n\\n`main`: This function is the entry point of the program, where it reads input, processes the data, and prints the output.\&quot;,\&quot;/src/begginerLevel/ChefAndHappyString.java\&quot;:\&quot;This file contains a single class `ChefAndHappyString` and three functions: `main()`, `isSolve()`, and `isVowel()`.\\n\\n`ChefAndHappyString`: This class contains the main logic for determining whether a given string is a \\\&quot;happy string\\\&quot; or not.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user, calls the `isSolve()` function, and prints the result.\\n\\n`isSolve()`: This function checks if the given string contains a sequence of three consecutive vowels, and returns `true` if such a sequence is found, `false` otherwise.\\n\\n`isVowel()`: This function checks if a given character is a vowel (a, e, i, o, or u) and returns `true` if it is, `false` otherwise.\&quot;,\&quot;/src/begginerLevel/TooManyFloors.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that calculates the difference between the floor where a chef is currently located and the final floor they need to reach, given the current floor and the final floor.\\n\\nThe program takes input from the user, calculates the difference between the current and final floors, and prints the result.\&quot;,\&quot;/src/begginerLevel/PeacefulParty.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that solves the \\\&quot;Peaceful Party\\\&quot; problem. The program takes in the number of test cases and the values of a, b, and c for each test case, and then outputs the maximum number of guests that can attend the party.\&quot;,\&quot;/src/begginerLevel/Nameless.java\&quot;:\&quot;This file does not contain any classes or functions. It is a simple Java program that takes an integer input from the user and calculates the maximum value between 3 times the input and 4 times the input, and then prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/FarAway.java\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`main`: This function takes input from the user, calculates the total distance required to reach the farthest point from each element in the array, and prints the result.\\n\\nThe file is a Java program that solves the \\\&quot;Far Away\\\&quot; problem, where the goal is to find the total distance required to reach the farthest point from each element in an array, given a maximum distance `m` that can be traveled from each element.\&quot;,\&quot;/src/begginerLevel/FindAandB.java\&quot;:\&quot;This file contains a single class `FindAandB` and a single function `main()`.\\n\\n`FindAandB`: This class contains a program that takes three integers as input and checks if the product of any two of them is divisible by the third, and if so, prints the product and the divisor, otherwise, it prints -1.\\n\\n`main()`: This function is the entry point of the program, it takes input from the user, performs the necessary calculations, and prints the output.\&quot;,\&quot;/src/begginerLevel/SastaSharkTank.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes two integers `a` and `b` as input, calculates their valuations based on a given formula, and then prints \\\&quot;First\\\&quot;, \\\&quot;Second\\\&quot;, or \\\&quot;Any\\\&quot; depending on the comparison of the valuations.\\n\\nThe program is designed to simulate a simplified version of the \\\&quot;Shark Tank\\\&quot; TV show, where two entrepreneurs pitch their business ideas to investors, and the investors decide which one to invest in based on the valuation of the businesses.\&quot;,\&quot;/src/begginerLvevelSecondHalf/DistinctOppositeSums.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes user input, creates an array of integers, and prints the array with distinct opposite sums.\\n\\nThe file is a Java program that solves the \\\&quot;Distinct Opposite Sums\\\&quot; problem. It takes an integer `t` as input, which represents the number of test cases. For each test case, it generates an array of `n` integers, where the first half of the array contains the numbers from 1 to `n/2`, and the second half of the array contains the numbers from `n` to `n/2+1` in reverse order. The program then prints the generated array.\&quot;,\&quot;/src/begginerLevel/JoiningDate.java\&quot;:\&quot;This file contains a single class `JoiningDate` that has a `main` function. The file appears to be a solution to a problem where there are `N` candidates and `K` positions, and the goal is to determine the minimum number of days required for all candidates to join.\\n\\n`JoiningDate`: This class contains the main logic for solving the problem.\\n\\n`main`: This function reads input from the user, processes the data, and prints the output.\&quot;,\&quot;/src/begginerLevel/TheBlockGame.java\&quot;:\&quot;This file contains a single class `TheBlockGame` that implements a simple game logic. The main function `main` reads input from the user, checks if the given number is greater than 10 or if it is a palindrome, and prints the result.\\n\\n`TheBlockGame`: A class that implements the logic for the \\\&quot;The Block Game\\\&quot; problem.\\n\\n`main`: The main function that reads input from the user, processes the input, and prints the result.\&quot;,\&quot;/src/contest/IOI.java\&quot;:\&quot;This file does not contain any classes or functions. It is a simple Java program that takes an integer input from the user and checks if it is greater than 8. If the input is greater than 8, it prints \\\&quot;NO\\\&quot;, otherwise it prints \\\&quot;YES\\\&quot;.\&quot;,\&quot;/src/begginerLevel/FirstAndLast.java\&quot;:\&quot;This file contains a single class `FirstAndLast` that solves a problem related to finding the maximum sum of adjacent elements in an array, or the sum of the first and last elements if that is greater.\\n\\n`FirstAndLast`: This class solves the problem of finding the maximum sum of adjacent elements in an array, or the sum of the first and last elements if that is greater.\\n\\n`main`: This function takes input, processes the array, and prints the maximum sum.\&quot;,\&quot;/src/begginerLvevelSecondHalf/MiniumumXOR.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes user input, calculates the minimum XOR value of the elements in the input array, and prints the result.\\n\\nThe file is a Java program that solves the Minimum XOR problem. It takes an array of integers as input, calculates the minimum XOR value of the elements in the array, and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ThreeBoxes.java\&quot;:\&quot;This file contains a single class `ThreeBoxes` and a single function `removeDuplicates`.\\n\\n`ThreeBoxes`: This class solves a problem where the user is given three boxes with different weights, and they need to determine the minimum number of boxes that can be used to achieve a target weight.\\n\\n`removeDuplicates`: This function takes an array of integers and removes any duplicate elements, ensuring that no more than two consecutive elements are the same.\&quot;,\&quot;/src/begginerLevel/NonNegativeProdutc.java\&quot;:\&quot;This file contains a single class `NonNegativeProdutc` that solves a problem related to finding the non-negative product of a given array of integers.\\n\\n`NonNegativeProdutc`: This class determines the non-negative product of an array of integers by considering the number of negative numbers and zeros in the array.\\n\\n`main`: This function takes input from the user, processes the array of integers, and prints the result based on the conditions of the problem.\&quot;,\&quot;/src/begginerLvevelSecondHalf/MinimumORMaximum.java\&quot;:\&quot;This file contains a single class `MinimumORMaximum` that checks if all the elements in an array are either the maximum or the minimum value in the array.\\n\\n`MinimumORMaximum`: This class checks if all the elements in an array are either the maximum or the minimum value in the array.\\n\\n`main`: This function takes input from the user, creates an array, finds the maximum and minimum values in the array, and then checks if all the elements in the array are either the maximum or the minimum value.\&quot;,\&quot;/src/begginerLvevelSecondHalf/PalindromeFlipping.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: The main function that takes input, processes it, and prints the output.\\n\\n`isReversed`: A function that reverses the given string.\\n\\n`reverseString`: A function that reverses the given string using a `StringBuilder`.\\n\\n`reverseStringStack`: A function that reverses the given string using a `Stack`.\\n\\nThe file is a solution to the \\\&quot;Palindrome Flipping\\\&quot; problem, where the task is to determine if a given string can be made a palindrome by flipping some characters. The solution checks the counts of \\u00270\\u0027 and \\u00271\\u0027 characters in the string and determines if it is possible to make the string a palindrome.\&quot;,\&quot;/src/begginerLevel/SecretRecipe.java\&quot;:\&quot;This file contains a single class `SecretRecipe` that solves a problem related to a secret recipe. The program takes input for multiple test cases, calculates the time taken by Chef and Kefa to reach a specific location, and then prints the name of the person who reaches the location first or a \\\&quot;Draw\\\&quot; if they reach at the same time.\\n\\n`SecretRecipe`: This class contains the main logic to solve the problem of finding the person who reaches the location first.\\n\\n`main`: This function is the entry point of the program. It takes input for multiple test cases, calculates the time taken by Chef and Kefa, and prints the result.\&quot;,\&quot;/src/begginerLevel/XJumps.java\&quot;:\&quot;This file contains a single class `XJumps` and a single function `main()`.\\n\\n`XJumps`: This class contains the main logic for solving the problem of a chef trying to reach a stair numbered `X` by climbing either `Y` steps or 1 step at a time.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user, processes it, and prints the minimum number of steps required for the chef to reach the stair numbered `X`.\\n\\nThe program solves the problem by calculating the minimum number of steps required to reach the stair numbered `X` by dividing `X` by `Y` (the number of steps the chef can climb in one move) and adding the remainder (`X % Y`), which represents the number of single-step moves required.\&quot;,\&quot;/src/matrix/SpiralMatrix.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: The main function that calls the `containsDuplicate` function with an integer array as input.\\n\\n`containsDuplicate`: This function takes an integer array as input and checks if the array contains any duplicate elements. It returns `true` if a duplicate is found, and `false` otherwise.\\n\\nThe file appears to be a Java program that checks if a given integer array contains any duplicate elements.\&quot;,\&quot;/src/begginerLevel/ValidPair.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes three integers as input and checks if any two of them are equal. If two of the integers are equal, it prints \\\&quot;Yes\\\&quot;, otherwise it prints \\\&quot;No\\\&quot;.\&quot;,\&quot;/src/begginerLevel/Hackerman.java\&quot;:\&quot;This file contains a single class `Hackerman` and two functions `main()` and `isPrime()`.\\n\\n`Hackerman`: The main class that contains the logic for the Hackerman problem.\\n\\n`main()`: The entry point of the program that takes input, calculates the sum of two numbers, and determines whether the sum is prime or not.\\n\\n`isPrime()`: A helper function that checks whether a given number is prime or not.\\n\\nThe file solves the Hackerman problem, where the input consists of multiple test cases, and for each test case, it determines whether the sum of two given numbers is prime or not, and prints the corresponding output.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefVsDoof.java\&quot;:\&quot;This file contains a single class `ChefVsDoof` and one `main()` function.\\n\\n`ChefVsDoof`: This class contains the main logic for the problem, which involves checking if all the elements in an array are odd numbers.\\n\\n`main()`: This function is the entry point of the program, which takes input from the user, processes the input, and prints the result.\\n\\nThe file solves a problem where the user inputs an array of integers, and the program checks if all the elements in the array are odd numbers. If all the elements are odd, it prints \\\&quot;YES\\\&quot;, otherwise it prints \\\&quot;NO\\\&quot;.\&quot;,\&quot;/src/begginerLevel/DiiferentConsecutiveCharacters.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that reads a series of strings from the user, and for each string, it counts the number of consecutive characters that are the same. The program then prints the count for each string.\&quot;,\&quot;/src/begginerLvevelSecondHalf/SingleOperationPart1.java\&quot;:\&quot;This file contains a single class and two functions:\\n\\n`SingleOperationPart1`: This class takes a series of strings as input, reverses each string, and prints the reversed string.\\n\\n`reverseString`: This function takes a character array as input and reverses the order of the characters in the array.\\n\\nThe file implements a simple program that reverses the order of characters in a given string.\&quot;,\&quot;/src/begginerLevel/PassingMarks.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Passing Marks\\\&quot; problem. The program takes input for the number of test cases, the number of subjects, and the minimum number of subjects required to pass. It then reads the marks for each subject, sorts them in ascending order, and prints the minimum marks required to pass.\&quot;,\&quot;/src/begginerLvevelSecondHalf/ChefAndEid.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function takes user input, sorts an array of coins, and finds the minimum difference between adjacent coins, printing the result for each test case.\\n\\nThe file is a solution to the \\\&quot;Chef and Eid\\\&quot; problem, where the task is to find the minimum difference between adjacent coins in an array of coins.\&quot;,\&quot;/src/begginerLevel/FitSquaresInTriangle.java\&quot;:\&quot;This file contains a single class `FitSquaresInTriangle` and does not have any functions defined. The file appears to be a starting point for a program that aims to fit squares within a triangle, but the main logic is not yet implemented.\\n\\n`FitSquaresInTriangle`: A class that likely contains the logic to fit squares within a triangle.\&quot;,\&quot;/src/begginerLevel/AnotherGoodString.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that reads input from the user, including the number of test cases, the length of a string, and the number of queries. It then initializes a HashMap to store the frequency of each character in the string. The program does not appear to perform any further operations on the input data.\&quot;,\&quot;/src/begginerLevel/FindingShoes.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that finds the number of pairs of shoes that can be made from a given number of left and right shoes.\\n\\nThe program takes input from the user, where `t` represents the number of test cases, and `n` and `m` represent the number of left and right shoes, respectively. It then calculates the number of pairs of shoes that can be made and prints the result.\\n\\nIf the number of left shoes is less than or equal to the number of right shoes, the program simply prints the number of left shoes. Otherwise, it calculates the number of pairs of shoes that can be made by subtracting the number of right shoes from twice the number of left shoes.\&quot;,\&quot;/src/begginerLvevelSecondHalf/CoinsAndTriangle.java\&quot;:\&quot;This file contains a single class `CoinsAndTriangle` that solves a problem related to coins and triangles.\\n\\n`CoinsAndTriangle`: This class takes an input of the number of coins and determines the number of rows in a triangle that can be formed using those coins.\\n\\n`main`: This function is the entry point of the program. It reads the number of test cases, and for each test case, it calculates the number of rows in the triangle that can be formed using the given number of coins.\&quot;,\&quot;/src/begginerLvevelSecondHalf/CooLName.java\&quot;:\&quot;This file contains a single class `CooLName` and several functions within it. Here\\u0027s a summary of each:\\n\\n`CooLName`: This class contains various functions related to solving coding problems.\\n\\n`main`: This function takes input, processes it, and prints the output for a problem called \\\&quot;Cool Name\\\&quot;.\\n\\n`solve`: This function finds the index of an element in an array where the sum of elements to the left and right of the element are equal.\\n\\n`prefixSolve`: This function uses a prefix sum approach to solve the problem of finding the index where the sum of elements to the left and right are equal.\\n\\n`prefixWithOptimizedCode`: This function is an optimized version of the `prefixSolve` function, using a different approach to solve the same problem.\\n\\n`solve`: This function counts the number of subarrays of an array `A` where the length of the subarray is either greater than or less than a given value `B`, depending on whether the length is even or odd.\&quot;,\&quot;/src/begginerLvevelSecondHalf/OddRepeat.java\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`main`: This function takes input from the user, calculates the value of a variable `ans` based on the given formula, and prints the result.\\n\\nThe file as a whole solves a problem where the user provides three values (`n`, `k`, and `s`), and the program finds the value of `j` that satisfies the given equation `(sum - j) + (k * j) \\u003d\\u003d s`, where `sum` is the square of `n`. The program then prints the value of `j`.\&quot;,\&quot;/src/begginerLvevelSecondHalf/EVMHacking.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that checks whether a candidate can win an election based on the given vote counts. The program takes input for the number of test cases, and for each test case, it takes the vote counts for three candidates and checks if any of them can win the election by getting more than half of the total votes. The program then prints \\\&quot;Yes\\\&quot; if a candidate can win, and \\\&quot;No\\\&quot; otherwise.\&quot;,\&quot;/src/begginerLvevelSecondHalf/RetangularTiling.java\&quot;:\&quot;This file contains a single class `RetangularTiling` and two functions `main` and `hasSubstring`.\\n\\n`RetangularTiling`: This class contains the main logic to solve the Rectangular Tiling problem.\\n\\n`main`: This function takes input from the user, checks if the given dimensions of the rectangle are odd, and prints \\\&quot;Yes\\\&quot; if they are, and \\\&quot;No\\\&quot; otherwise.\\n\\n`hasSubstring`: This function takes two strings, `text` and `pattern`, and checks if the `pattern` is a substring of the `text`. It returns `true` if the pattern is found, and `false` otherwise.\&quot;,\&quot;/src/begginerLevel/BinaryBattles.java\&quot;:\&quot;This file contains a single class `BinaryBattles` that has a single function `main()`. The program takes input of `n` followed by `a`, `b`, and `c` for `n` test cases, and calculates the minimum cost to convert a binary number of length `a` to another binary number of length `a` using the given operations.\\n\\n`BinaryBattles`: The main class that contains the logic to solve the problem.\\n\\n`main()`: The entry point of the program that takes input, performs the calculations, and prints the output.\&quot;,\&quot;/src/begginerLevel/DarkLight.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Dark Light\\\&quot; problem. The program takes an input of the number of light bulbs (n) and the number of switches (k), and then determines whether the lights will be on or off based on the given conditions.\\n\\nThe program first takes the number of test cases (t) as input, and then for each test case, it takes the values of n and k. It then checks the value of k and determines the state of the lights (on, off, or ambiguous) based on the value of n.\&quot;,\&quot;/src/begginerLevel/NaiveChef.java\&quot;:\&quot;This file contains a single class `NaiveChef` and two functions `main()` and `calPorbalities()`.\\n\\n`NaiveChef`: This class contains the main logic for solving a problem related to calculating the probability of two events occurring simultaneously.\\n\\n`main()`: This function is the entry point of the program, which takes input, calculates the probabilities, and prints the result.\\n\\n`calPorbalities()`: This function calculates the probability of a specific target value appearing in a given array of numbers.\&quot;,\&quot;/src/begginerLevel/TotalExpenses.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that calculates the total expenses for a given quantity and price, with a 10% discount if the quantity is greater than 1000.\\n\\nThe program takes input from the user, which includes the number of test cases (`t`) and the quantity and price for each test case. It then calculates the total expenses for each test case and prints the result.\&quot;,\&quot;/src/begginerLvevelSecondHalf/MaxNutrition.java\&quot;:\&quot;This file contains a single class `MaxNutrition` and two functions `main` and `maxNutrition`.\\n\\n`MaxNutrition`: This class contains the main logic to find the maximum nutrition value from a given set of fruits.\\n\\n`main`: This function is the entry point of the program, which takes input, calls the `maxNutrition` function, and prints the result.\\n\\n`maxNutrition`: This function takes an array of fruit types and their corresponding nutrition values, and returns the maximum total nutrition value that can be obtained by selecting at most one fruit of each type.\&quot;,\&quot;/src/begginerLvevelSecondHalf/OddGCDPermutation.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Odd GCD Permutation\\\&quot; problem. The program takes an integer `t` as input, which represents the number of test cases. For each test case, it takes an integer `n` as input and prints a permutation of the numbers from `n` to 1 if `n` is even, or -1 if `n` is odd.\&quot;,\&quot;/src/begginerLvevelSecondHalf/XennyAndAlternatingTasks.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: This function reads input from the user, calculates the minimum sum of even and odd elements in two arrays, and prints the result.\\n\\nThe file solves the \\\&quot;Xenny and Alternating Tasks\\\&quot; problem, where the goal is to find the minimum sum of even and odd elements in two arrays. The program takes input for the number of test cases and the elements of the two arrays, and then calculates the minimum sum for each test case.\&quot;,\&quot;/src/begginerLevel/SecondLargest.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that finds the second-largest number among three numbers entered by the user. The program takes input from the user, compares the numbers, and prints the second-largest number. It does this for multiple test cases, as specified by the user.\&quot;,\&quot;/src/begginerLevel/PaperCutting.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves the \\\&quot;Paper Cutting\\\&quot; problem. The program takes the side length of the entire chart paper and the side length of the cutout squares as input, and calculates the maximum number of squares that can be cut from the chart paper. The program then prints the result for each test case.\&quot;,\&quot;/src/begginerLvevelSecondHalf/EasyPermutation.java\&quot;:\&quot;This file does not contain any classes or functions. It is a Java program that takes an integer input `t` and then for each test case, it takes an integer input `n` and prints the numbers from `n` to `1` in descending order.\&quot;,\&quot;/src/begginerLvevelSecondHalf/AdjacentSumParity.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that checks the parity of the count of adjacent 1\\u0027s in an array of integers. The program takes input from the user, counts the number of 1\\u0027s in the array, and then prints \\\&quot;Yes\\\&quot; if the count of 1\\u0027s is even, and \\\&quot;No\\\&quot; if the count of 1\\u0027s is odd.\&quot;,\&quot;/src/begginerLevel/Tekken.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it is a Java program that solves a problem related to the Tekken video game. The program takes input of three integers (a, b, and c) and determines whether the difference between the maximum and minimum of b and c is greater than or equal to a. If the condition is true, it prints \\\&quot;No\\\&quot;, otherwise it prints \\\&quot;Yes\\\&quot;.\&quot;}&quot;}" />
    <option name="fileSkeletonMaps" value="{&quot;C:/Users/abdiy/IdeaProjects/CodeChef&quot;:&quot;{\&quot;/src/arrays/Candies.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/arrays/Candies.java\&quot;,\&quot;file_name\&quot;:\&quot;Candies.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[19,5]]},{\&quot;method_name\&quot;:\&quot;isSplitable\&quot;,\&quot;method_parameters\&quot;:\&quot;(int arr[], int n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[20,4],[33,5]]},{\&quot;method_name\&quot;:\&quot;subarraySum\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] nums, int k)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;nums\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;k\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[34,4],[45,5]]}]},\&quot;/src/arrays/CopsTheThiefDevu.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/arrays/CopsTheThiefDevu.java\&quot;,\&quot;file_name\&quot;:\&quot;CopsTheThiefDevu.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[16,5]]}]},\&quot;/src/arrays/CountOfMaxium.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/arrays/CountOfMaxium.java\&quot;,\&quot;file_name\&quot;:\&quot;CountOfMaxium.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[45,5]]}]},\&quot;/src/arrays/CountSubarray.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/arrays/CountSubarray.java\&quot;,\&quot;file_name\&quot;:\&quot;CountSubarray.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;countSubarrays\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr, int n, int k)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;k\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[5,8],[19,9]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[22,4],[41,5]]}]},\&quot;/src/arrays/IntersectingArrays.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/arrays/IntersectingArrays.java\&quot;,\&quot;file_name\&quot;:\&quot;IntersectingArrays.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;intersect\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] nums1, int[] nums2)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;nums1\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;nums2\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[7,4],[24,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[26,4],[43,5]]}]},\&quot;/src/arrays/MergeTwoSortedArrays.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/arrays/MergeTwoSortedArrays.java\&quot;,\&quot;file_name\&quot;:\&quot;MergeTwoSortedArrays.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[37,5]]},{\&quot;method_name\&quot;:\&quot;probabilityOfHeads\&quot;,\&quot;method_parameters\&quot;:\&quot;(double[] coinProbabilities, int target)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;coinProbabilities\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;target\&quot;}],\&quot;return_type\&quot;:\&quot;double\&quot;,\&quot;scope\&quot;:[[38,4],[70,5]]}]},\&quot;/src/arrays/RemoveBadElements.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/arrays/RemoveBadElements.java\&quot;,\&quot;file_name\&quot;:\&quot;RemoveBadElements.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[9,5]]}]},\&quot;/src/arrays/Snapchat.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/arrays/Snapchat.java\&quot;,\&quot;file_name\&quot;:\&quot;Snapchat.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[36,5]]}]},\&quot;/src/arrays/Workers.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/arrays/Workers.java\&quot;,\&quot;file_name\&quot;:\&quot;Workers.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[20,5]]},{\&quot;method_name\&quot;:\&quot;getResult\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n, int[] t, int[] c)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;t\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;c\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[22,4],[46,5]]},{\&quot;method_name\&quot;:\&quot;reverseString\&quot;,\&quot;method_parameters\&quot;:\&quot;(String s)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;s\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[48,4],[54,5]]},{\&quot;method_name\&quot;:\&quot;reverse\&quot;,\&quot;method_parameters\&quot;:\&quot;(int x)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;x\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[55,4],[63,5]]},{\&quot;method_name\&quot;:\&quot;isPalindrome\&quot;,\&quot;method_parameters\&quot;:\&quot;(int x)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;x\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[64,4],[73,5]]},{\&quot;method_name\&quot;:\&quot;isPalindrome1\&quot;,\&quot;method_parameters\&quot;:\&quot;(String s)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;s\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[74,4],[80,5]]},{\&quot;method_name\&quot;:\&quot;isPalindrome\&quot;,\&quot;method_parameters\&quot;:\&quot;(String str)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;str\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[81,4],[89,5]]},{\&quot;method_name\&quot;:\&quot;generateFibonacciNumbers\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[90,4],[100,5]]},{\&quot;method_name\&quot;:\&quot;fib\&quot;,\&quot;method_parameters\&quot;:\&quot;(int arr[], int n, int currentIndex)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;currentIndex\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[101,4],[108,5]]}]},\&quot;/src/begginerDSA/ContinuationOfBasicMath.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerDSA/ContinuationOfBasicMath.java\&quot;,\&quot;file_name\&quot;:\&quot;ContinuationOfBasicMath.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[9,4],[30,5]]}]},\&quot;/src/begginerDSA/CountPositiveAndNonZeroElements.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerDSA/CountPositiveAndNonZeroElements.java\&quot;,\&quot;file_name\&quot;:\&quot;CountPositiveAndNonZeroElements.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[40,5]]}]},\&quot;/src/begginerDSA/CreateAListOfOrdValuesOfAString.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerDSA/CreateAListOfOrdValuesOfAString.java\&quot;,\&quot;file_name\&quot;:\&quot;CreateAListOfOrdValuesOfAString.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[15,5]]}]},\&quot;/src/begginerDSA/CreateAReplicaString.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerDSA/CreateAReplicaString.java\&quot;,\&quot;file_name\&quot;:\&quot;CreateAReplicaString.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[22,5]]}]},\&quot;/src/begginerDSA/FindTheGcdAndLcmOfTwoIntegers.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerDSA/FindTheGcdAndLcmOfTwoIntegers.java\&quot;,\&quot;file_name\&quot;:\&quot;FindTheGcdAndLcmOfTwoIntegers.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[18,5]]},{\&quot;method_name\&quot;:\&quot;gcd\&quot;,\&quot;method_parameters\&quot;:\&quot;(int b, int a)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;b\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;a\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[19,4],[30,5]]}]},\&quot;/src/begginerDSA/PracticeProblem_AlternateAdditons.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerDSA/PracticeProblem_AlternateAdditons.java\&quot;,\&quot;file_name\&quot;:\&quot;PracticeProblem_AlternateAdditons.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[25,5]]}]},\&quot;/src/begginerDSA/PracticeProblem_DifferentConsecutiveChars.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerDSA/PracticeProblem_DifferentConsecutiveChars.java\&quot;,\&quot;file_name\&quot;:\&quot;PracticeProblem_DifferentConsecutiveChars.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[22,5]]}]},\&quot;/src/begginerDSA/PracticeProblem_WorldChessChampionship.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerDSA/PracticeProblem_WorldChessChampionship.java\&quot;,\&quot;file_name\&quot;:\&quot;PracticeProblem_WorldChessChampionship.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[15,5]]}]},\&quot;/src/begginerDSA/PracticeProblemConstructN.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerDSA/PracticeProblemConstructN.java\&quot;,\&quot;file_name\&quot;:\&quot;PracticeProblemConstructN.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[12,9]]}]},\&quot;/src/begginerDSA/PracticeProblemMarioAndTheBrokenString.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerDSA/PracticeProblemMarioAndTheBrokenString.java\&quot;,\&quot;file_name\&quot;:\&quot;PracticeProblemMarioAndTheBrokenString.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[25,5]]}]},\&quot;/src/begginerDSA/PreviewProblem2.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerDSA/PreviewProblem2.java\&quot;,\&quot;file_name\&quot;:\&quot;PreviewProblem2.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[18,5]]}]},\&quot;/src/begginerDSA/PreviewProblem3.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerDSA/PreviewProblem3.java\&quot;,\&quot;file_name\&quot;:\&quot;PreviewProblem3.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[16,5]]},{\&quot;method_name\&quot;:\&quot;gcd\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n, int m)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;m\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[17,4],[22,5]]}]},\&quot;/src/begginerDSA/ReverseNumbersManual.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerDSA/ReverseNumbersManual.java\&quot;,\&quot;file_name\&quot;:\&quot;ReverseNumbersManual.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[22,5]]}]},\&quot;/src/begginerDSA/ReviewProblem.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerDSA/ReviewProblem.java\&quot;,\&quot;file_name\&quot;:\&quot;ReviewProblem.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[19,5]]}]},\&quot;/src/begginerDSA/ReviewProblem2.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerDSA/ReviewProblem2.java\&quot;,\&quot;file_name\&quot;:\&quot;ReviewProblem2.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[21,5]]}]},\&quot;/src/begginerDSA/ReviewProblem4.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerDSA/ReviewProblem4.java\&quot;,\&quot;file_name\&quot;:\&quot;ReviewProblem4.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[21,5]]}]},\&quot;/src/begginerLevel/AirConditionerTemperature.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/AirConditionerTemperature.java\&quot;,\&quot;file_name\&quot;:\&quot;AirConditionerTemperature.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[25,5]]}]},\&quot;/src/begginerLevel/AkashAndMissingClass.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/AkashAndMissingClass.java\&quot;,\&quot;file_name\&quot;:\&quot;AkashAndMissingClass.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[21,5]]}]},\&quot;/src/begginerLevel/AllUniqueCharacters.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/AllUniqueCharacters.java\&quot;,\&quot;file_name\&quot;:\&quot;AllUniqueCharacters.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[8,4],[14,5]]},{\&quot;method_name\&quot;:\&quot;solveWithHashset\&quot;,\&quot;method_parameters\&quot;:\&quot;(String s)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;s\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[16,4],[27,5]]}]},\&quot;/src/begginerLevel/AlternateAdditions.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/AlternateAdditions.java\&quot;,\&quot;file_name\&quot;:\&quot;AlternateAdditions.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[20,5]]}]},\&quot;/src/begginerLevel/AnotherGoodString.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/AnotherGoodString.java\&quot;,\&quot;file_name\&quot;:\&quot;AnotherGoodString.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[17,5]]}]},\&quot;/src/begginerLevel/AOrB.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/AOrB.java\&quot;,\&quot;file_name\&quot;:\&quot;AOrB.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[29,5]]}]},\&quot;/src/begginerLevel/AreaOrPerimeter.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/AreaOrPerimeter.java\&quot;,\&quot;file_name\&quot;:\&quot;AreaOrPerimeter.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[24,5]]}]},\&quot;/src/begginerLevel/ASaveWaterSaveLife.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ASaveWaterSaveLife.java\&quot;,\&quot;file_name\&quot;:\&quot;ASaveWaterSaveLife.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[26,5]]}]},\&quot;/src/begginerLevel/AttackOnKindgom.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/AttackOnKindgom.java\&quot;,\&quot;file_name\&quot;:\&quot;AttackOnKindgom.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[43,5]]}]},\&quot;/src/begginerLevel/AvoidConatc.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/AvoidConatc.java\&quot;,\&quot;file_name\&quot;:\&quot;AvoidConatc.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[23,5]]}]},\&quot;/src/begginerLevel/AvoidSquaresPlease.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/AvoidSquaresPlease.java\&quot;,\&quot;file_name\&quot;:\&quot;AvoidSquaresPlease.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[15,5]]}]},\&quot;/src/begginerLevel/BackToCampus.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/BackToCampus.java\&quot;,\&quot;file_name\&quot;:\&quot;BackToCampus.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[17,5]]}]},\&quot;/src/begginerLevel/BadmintonServes.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/BadmintonServes.java\&quot;,\&quot;file_name\&quot;:\&quot;BadmintonServes.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[18,5]]}]},\&quot;/src/begginerLevel/BallsAndBoxes.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/BallsAndBoxes.java\&quot;,\&quot;file_name\&quot;:\&quot;BallsAndBoxes.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[22,5]]}]},\&quot;/src/begginerLevel/BathInWinters.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/BathInWinters.java\&quot;,\&quot;file_name\&quot;:\&quot;BathInWinters.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[22,5]]}]},\&quot;/src/begginerLevel/BearAndLadder.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/BearAndLadder.java\&quot;,\&quot;file_name\&quot;:\&quot;BearAndLadder.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[14,5]]}]},\&quot;/src/begginerLevel/BellsOfPligrimage.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/BellsOfPligrimage.java\&quot;,\&quot;file_name\&quot;:\&quot;BellsOfPligrimage.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[19,5]]}]},\&quot;/src/begginerLevel/BestOfTwo.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/BestOfTwo.java\&quot;,\&quot;file_name\&quot;:\&quot;BestOfTwo.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[8,4],[43,5]]},{\&quot;method_name\&quot;:\&quot;solve\&quot;,\&quot;method_parameters\&quot;:\&quot;(int arr[])\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[45,4],[53,5]]}]},\&quot;/src/begginerLevel/BetterDeal.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/BetterDeal.java\&quot;,\&quot;file_name\&quot;:\&quot;BetterDeal.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[25,5]]}]},\&quot;/src/begginerLevel/BinaryBattles.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/BinaryBattles.java\&quot;,\&quot;file_name\&quot;:\&quot;BinaryBattles.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[26,5]]}]},\&quot;/src/begginerLevel/BlackCellsInChessBoard.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/BlackCellsInChessBoard.java\&quot;,\&quot;file_name\&quot;:\&quot;BlackCellsInChessBoard.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[17,5]]}]},\&quot;/src/begginerLevel/BlackJack.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/BlackJack.java\&quot;,\&quot;file_name\&quot;:\&quot;BlackJack.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[32,5]]}]},\&quot;/src/begginerLevel/BlobbyVolleyScores.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/BlobbyVolleyScores.java\&quot;,\&quot;file_name\&quot;:\&quot;BlobbyVolleyScores.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[6,5]]}]},\&quot;/src/begginerLevel/BodyMassIndex.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/BodyMassIndex.java\&quot;,\&quot;file_name\&quot;:\&quot;BodyMassIndex.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[25,9]]}]},\&quot;/src/begginerLevel/BombTheBase.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/BombTheBase.java\&quot;,\&quot;file_name\&quot;:\&quot;BombTheBase.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[23,5]]}]},\&quot;/src/begginerLevel/BuildingRace.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/BuildingRace.java\&quot;,\&quot;file_name\&quot;:\&quot;BuildingRace.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[32,5]]}]},\&quot;/src/begginerLevel/BusSeatNumbering.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/BusSeatNumbering.java\&quot;,\&quot;file_name\&quot;:\&quot;BusSeatNumbering.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[26,5]]}]},\&quot;/src/begginerLevel/BuyLamps.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/BuyLamps.java\&quot;,\&quot;file_name\&quot;:\&quot;BuyLamps.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[26,5]]}]},\&quot;/src/begginerLevel/BuyTenPackets.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/BuyTenPackets.java\&quot;,\&quot;file_name\&quot;:\&quot;BuyTenPackets.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[27,5]]}]},\&quot;/src/begginerLevel/BuyTwoGetOneFree.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/BuyTwoGetOneFree.java\&quot;,\&quot;file_name\&quot;:\&quot;BuyTwoGetOneFree.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[18,5]]}]},\&quot;/src/begginerLevel/BytelandianGoldCoins.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/BytelandianGoldCoins.java\&quot;,\&quot;file_name\&quot;:\&quot;BytelandianGoldCoins.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[11,4],[21,5]]},{\&quot;method_name\&quot;:\&quot;getMaxDollars\&quot;,\&quot;method_parameters\&quot;:\&quot;(long n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;long\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;long\&quot;,\&quot;scope\&quot;:[[23,4],[36,5]]}]},\&quot;/src/begginerLevel/CandyDistribution.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/CandyDistribution.java\&quot;,\&quot;file_name\&quot;:\&quot;CandyDistribution.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[23,5]]}]},\&quot;/src/begginerLevel/CanReach.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/CanReach.java\&quot;,\&quot;file_name\&quot;:\&quot;CanReach.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[22,5]]}]},\&quot;/src/begginerLevel/CanWeEatIt.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/CanWeEatIt.java\&quot;,\&quot;file_name\&quot;:\&quot;CanWeEatIt.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[7,5]]}]},\&quot;/src/begginerLevel/CarAndBus.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/CarAndBus.java\&quot;,\&quot;file_name\&quot;:\&quot;CarAndBus.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[26,5]]}]},\&quot;/src/begginerLevel/CarCoice.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/CarCoice.java\&quot;,\&quot;file_name\&quot;:\&quot;CarCoice.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[27,5]]}]},\&quot;/src/begginerLevel/CarRange.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/CarRange.java\&quot;,\&quot;file_name\&quot;:\&quot;CarRange.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[16,5]]}]},\&quot;/src/begginerLevel/CarsAndBikes.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/CarsAndBikes.java\&quot;,\&quot;file_name\&quot;:\&quot;CarsAndBikes.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[19,5]]}]},\&quot;/src/begginerLevel/ChefAndBattery.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndBattery.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndBattery.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[26,5]]}]},\&quot;/src/begginerLevel/ChefAndBirdFarm.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndBirdFarm.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndBirdFarm.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[32,5]]}]},\&quot;/src/begginerLevel/ChefAndCandies.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndCandies.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndCandies.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[22,5]]}]},\&quot;/src/begginerLevel/ChefAndCardGame.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndCardGame.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndCardGame.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[34,5]]},{\&quot;method_name\&quot;:\&quot;solve\&quot;,\&quot;method_parameters\&quot;:\&quot;(long n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;long\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;long\&quot;,\&quot;scope\&quot;:[[35,4],[43,5]]}]},\&quot;/src/begginerLevel/ChefAndContest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndContest.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndContest.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[27,5]]}]},\&quot;/src/begginerLevel/ChefAndCookOff.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndCookOff.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndCookOff.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[40,5]]}]},\&quot;/src/begginerLevel/ChefAndFruits.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndFruits.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndFruits.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[19,5]]}]},\&quot;/src/begginerLevel/ChefAndHAirSalon.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndHAirSalon.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndHAirSalon.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[21,5]]}]},\&quot;/src/begginerLevel/ChefAndHappyString.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndHappyString.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndHappyString.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[20,5]]},{\&quot;method_name\&quot;:\&quot;isSolve\&quot;,\&quot;method_parameters\&quot;:\&quot;(String s )\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;s\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[22,4],[31,5]]},{\&quot;method_name\&quot;:\&quot;isVowel\&quot;,\&quot;method_parameters\&quot;:\&quot;(char c )\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;char\&quot;,\&quot;name\&quot;:\&quot;c\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[32,4],[34,5]]}]},\&quot;/src/begginerLevel/ChefAndHisApps.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndHisApps.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndHisApps.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[27,5]]}]},\&quot;/src/begginerLevel/ChefAndHisFruitSalad.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndHisFruitSalad.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndHisFruitSalad.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[23,5]]}]},\&quot;/src/begginerLevel/ChefAndInteractiveContest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndInteractiveContest.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndInteractiveContest.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[20,5]]}]},\&quot;/src/begginerLevel/ChefAndLockoutDraws.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndLockoutDraws.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndLockoutDraws.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[27,5]]}]},\&quot;/src/begginerLevel/ChefAndNextGen.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndNextGen.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndNextGen.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[28,5]]}]},\&quot;/src/begginerLevel/ChefAndOperators.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndOperators.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndOperators.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[25,5]]}]},\&quot;/src/begginerLevel/ChefAndPairingSlippers.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndPairingSlippers.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndPairingSlippers.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[18,5]]}]},\&quot;/src/begginerLevel/ChefAndPriceControl.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndPriceControl.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndPriceControl.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[18,5]]},{\&quot;method_name\&quot;:\&quot;sovle\&quot;,\&quot;method_parameters\&quot;:\&quot;(Scanner sc, int n, int k)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Scanner\&quot;,\&quot;name\&quot;:\&quot;sc\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;k\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[19,4],[29,5]]}]},\&quot;/src/begginerLevel/ChefAndProfits.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndProfits.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndProfits.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[18,5]]}]},\&quot;/src/begginerLevel/ChefAndProportion.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndProportion.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndProportion.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[16,5]]}]},\&quot;/src/begginerLevel/ChefAndRaces.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndRaces.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndRaces.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[36,5]]}]},\&quot;/src/begginerLevel/ChefAndRemissness.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndRemissness.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndRemissness.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[19,5]]}]},\&quot;/src/begginerLevel/ChefAndSnackDown.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndSnackDown.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndSnackDown.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[26,5]]}]},\&quot;/src/begginerLevel/ChefAndSocks.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndSocks.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndSocks.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[19,5]]}]},\&quot;/src/begginerLevel/ChefAndStocks.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndStocks.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndStocks.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[27,5]]}]},\&quot;/src/begginerLevel/ChefAndString.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndString.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndString.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[25,5]]}]},\&quot;/src/begginerLevel/ChefAndVacationTransportation.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndVacationTransportation.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndVacationTransportation.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[24,5]]}]},\&quot;/src/begginerLevel/ChefAndWaterBottles.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefAndWaterBottles.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndWaterBottles.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[30,5]]}]},\&quot;/src/begginerLevel/ChefDrinksTea.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefDrinksTea.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefDrinksTea.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[31,9]]}]},\&quot;/src/begginerLevel/ChefEren.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefEren.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefEren.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[34,5]]}]},\&quot;/src/begginerLevel/CheflandGames.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/CheflandGames.java\&quot;,\&quot;file_name\&quot;:\&quot;CheflandGames.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[28,5]]}]},\&quot;/src/begginerLevel/CheflandVisa.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/CheflandVisa.java\&quot;,\&quot;file_name\&quot;:\&quot;CheflandVisa.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[26,5]]}]},\&quot;/src/begginerLevel/ChefOnIsland.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefOnIsland.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefOnIsland.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[30,5]]}]},\&quot;/src/begginerLevel/ChefOnVacation.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChefOnVacation.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefOnVacation.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[19,5]]}]},\&quot;/src/begginerLevel/CherfJudgeACompetition.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/CherfJudgeACompetition.java\&quot;,\&quot;file_name\&quot;:\&quot;CherfJudgeACompetition.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[16,5]]}]},\&quot;/src/begginerLevel/ChessBoardDistance.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChessBoardDistance.java\&quot;,\&quot;file_name\&quot;:\&quot;ChessBoardDistance.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[27,5]]}]},\&quot;/src/begginerLevel/ChessFormat.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChessFormat.java\&quot;,\&quot;file_name\&quot;:\&quot;ChessFormat.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[23,5]]}]},\&quot;/src/begginerLevel/ChessMatch.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChessMatch.java\&quot;,\&quot;file_name\&quot;:\&quot;ChessMatch.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[16,5]]}]},\&quot;/src/begginerLevel/ChessRatings.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChessRatings.java\&quot;,\&quot;file_name\&quot;:\&quot;ChessRatings.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[23,5]]}]},\&quot;/src/begginerLevel/ChnageRowAndColumnBoth.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ChnageRowAndColumnBoth.java\&quot;,\&quot;file_name\&quot;:\&quot;ChnageRowAndColumnBoth.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[25,5]]}]},\&quot;/src/begginerLevel/CircularTrack.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/CircularTrack.java\&quot;,\&quot;file_name\&quot;:\&quot;CircularTrack.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[7,5]]}]},\&quot;/src/begginerLevel/Codechef.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/Codechef.java\&quot;,\&quot;file_name\&quot;:\&quot;Codechef.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[33,5]]}]},\&quot;/src/begginerLevel/Coldplay.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/Coldplay.java\&quot;,\&quot;file_name\&quot;:\&quot;Coldplay.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[23,5]]}]},\&quot;/src/begginerLevel/ComplementaryStrandInDNA.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ComplementaryStrandInDNA.java\&quot;,\&quot;file_name\&quot;:\&quot;ComplementaryStrandInDNA.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[44,5]]}]},\&quot;/src/begginerLevel/CompleteTheCredits.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/CompleteTheCredits.java\&quot;,\&quot;file_name\&quot;:\&quot;CompleteTheCredits.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[20,5]]}]},\&quot;/src/begginerLevel/CompressTheVideo.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/CompressTheVideo.java\&quot;,\&quot;file_name\&quot;:\&quot;CompressTheVideo.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[23,5]]}]},\&quot;/src/begginerLevel/ConstructN.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ConstructN.java\&quot;,\&quot;file_name\&quot;:\&quot;ConstructN.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[19,5]]}]},\&quot;/src/begginerLevel/CookieDay.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/CookieDay.java\&quot;,\&quot;file_name\&quot;:\&quot;CookieDay.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[29,5]]}]},\&quot;/src/begginerLevel/CostOfGroceries.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/CostOfGroceries.java\&quot;,\&quot;file_name\&quot;:\&quot;CostOfGroceries.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[33,5]]}]},\&quot;/src/begginerLevel/CountingPrettyNumbers.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/CountingPrettyNumbers.java\&quot;,\&quot;file_name\&quot;:\&quot;CountingPrettyNumbers.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[25,5]]}]},\&quot;/src/begginerLevel/CounttheACs.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/CounttheACs.java\&quot;,\&quot;file_name\&quot;:\&quot;CounttheACs.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[24,5]]}]},\&quot;/src/begginerLevel/CountTheHolidays.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/CountTheHolidays.java\&quot;,\&quot;file_name\&quot;:\&quot;CountTheHolidays.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[31,5]]}]},\&quot;/src/begginerLevel/CountTheNoteBooks.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/CountTheNoteBooks.java\&quot;,\&quot;file_name\&quot;:\&quot;CountTheNoteBooks.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[22,5]]}]},\&quot;/src/begginerLevel/CredCoins.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/CredCoins.java\&quot;,\&quot;file_name\&quot;:\&quot;CredCoins.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[28,5]]}]},\&quot;/src/begginerLevel/CriketRanking.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/CriketRanking.java\&quot;,\&quot;file_name\&quot;:\&quot;CriketRanking.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[36,5]]}]},\&quot;/src/begginerLevel/CupFinals.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/CupFinals.java\&quot;,\&quot;file_name\&quot;:\&quot;CupFinals.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[29,5]]}]},\&quot;/src/begginerLevel/CyclicQuadrilateral.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/CyclicQuadrilateral.java\&quot;,\&quot;file_name\&quot;:\&quot;CyclicQuadrilateral.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[30,5]]}]},\&quot;/src/begginerLevel/DarkLight.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/DarkLight.java\&quot;,\&quot;file_name\&quot;:\&quot;DarkLight.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[28,5]]}]},\&quot;/src/begginerLevel/DecrementOrIncrement.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/DecrementOrIncrement.java\&quot;,\&quot;file_name\&quot;:\&quot;DecrementOrIncrement.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[21,5]]}]},\&quot;/src/begginerLevel/DegreeOfPolynomial.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/DegreeOfPolynomial.java\&quot;,\&quot;file_name\&quot;:\&quot;DegreeOfPolynomial.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[23,5]]}]},\&quot;/src/begginerLevel/DetermineTheWinner.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/DetermineTheWinner.java\&quot;,\&quot;file_name\&quot;:\&quot;DetermineTheWinner.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[32,5]]}]},\&quot;/src/begginerLevel/DevendraAndWaterSprots.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/DevendraAndWaterSprots.java\&quot;,\&quot;file_name\&quot;:\&quot;DevendraAndWaterSprots.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[24,5]]}]},\&quot;/src/begginerLevel/DiceNumber.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/DiceNumber.java\&quot;,\&quot;file_name\&quot;:\&quot;DiceNumber.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[37,5]]},{\&quot;method_name\&quot;:\&quot;solve\&quot;,\&quot;method_parameters\&quot;:\&quot;(int a, int b)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;a\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;b\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[39,4],[46,5]]}]},\&quot;/src/begginerLevel/DiiferentConsecutiveCharacters.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/DiiferentConsecutiveCharacters.java\&quot;,\&quot;file_name\&quot;:\&quot;DiiferentConsecutiveCharacters.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[22,5]]}]},\&quot;/src/begginerLevel/DiscusThrow.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/DiscusThrow.java\&quot;,\&quot;file_name\&quot;:\&quot;DiscusThrow.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[33,5]]}]},\&quot;/src/begginerLevel/DistinctColors.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/DistinctColors.java\&quot;,\&quot;file_name\&quot;:\&quot;DistinctColors.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[31,5]]}]},\&quot;/src/begginerLevel/DivisibleByThree.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/DivisibleByThree.java\&quot;,\&quot;file_name\&quot;:\&quot;DivisibleByThree.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[23,5]]}]},\&quot;/src/begginerLevel/DNAStorage.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/DNAStorage.java\&quot;,\&quot;file_name\&quot;:\&quot;DNAStorage.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[33,5]]},{\&quot;method_name\&quot;:\&quot;solve\&quot;,\&quot;method_parameters\&quot;:\&quot;(String pair)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;pair\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[34,4],[46,5]]}]},\&quot;/src/begginerLevel/DrunkAlcoholic.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/DrunkAlcoholic.java\&quot;,\&quot;file_name\&quot;:\&quot;DrunkAlcoholic.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[25,5]]}]},\&quot;/src/begginerLevel/EasyMath.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/EasyMath.java\&quot;,\&quot;file_name\&quot;:\&quot;EasyMath.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[13,5]]},{\&quot;method_name\&quot;:\&quot;solve\&quot;,\&quot;method_parameters\&quot;:\&quot;(int A[], int B)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;A\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;B\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[16,4],[37,5]]}]},\&quot;/src/begginerLevel/EasyPronunciation.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/EasyPronunciation.java\&quot;,\&quot;file_name\&quot;:\&quot;EasyPronunciation.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[19,5]]},{\&quot;method_name\&quot;:\&quot;inPresent\&quot;,\&quot;method_parameters\&quot;:\&quot;(String s)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;s\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[20,4],[34,5]]},{\&quot;method_name\&quot;:\&quot;solve\&quot;,\&quot;method_parameters\&quot;:\&quot;(char s )\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;char\&quot;,\&quot;name\&quot;:\&quot;s\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[36,4],[39,5]]}]},\&quot;/src/begginerLevel/EconomicsClass.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/EconomicsClass.java\&quot;,\&quot;file_name\&quot;:\&quot;EconomicsClass.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[43,5]]}]},\&quot;/src/begginerLevel/ElectionsInChefland.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ElectionsInChefland.java\&quot;,\&quot;file_name\&quot;:\&quot;ElectionsInChefland.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[29,5]]}]},\&quot;/src/begginerLevel/EmotionalProximity.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/EmotionalProximity.java\&quot;,\&quot;file_name\&quot;:\&quot;EmotionalProximity.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[31,5]]}]},\&quot;/src/begginerLevel/EndlessAppetizers.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/EndlessAppetizers.java\&quot;,\&quot;file_name\&quot;:\&quot;EndlessAppetizers.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[22,5]]}]},\&quot;/src/begginerLevel/EqualElements.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/EqualElements.java\&quot;,\&quot;file_name\&quot;:\&quot;EqualElements.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[28,5]]}]},\&quot;/src/begginerLevel/EqualIntegers.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/EqualIntegers.java\&quot;,\&quot;file_name\&quot;:\&quot;EqualIntegers.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[28,5]]}]},\&quot;/src/begginerLevel/EqualizingNumbers.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/EqualizingNumbers.java\&quot;,\&quot;file_name\&quot;:\&quot;EqualizingNumbers.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[22,5]]}]},\&quot;/src/begginerLevel/Existence.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/Existence.java\&quot;,\&quot;file_name\&quot;:\&quot;Existence.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[24,5]]}]},\&quot;/src/begginerLevel/ExpenseList.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ExpenseList.java\&quot;,\&quot;file_name\&quot;:\&quot;ExpenseList.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[21,5]]}]},\&quot;/src/begginerLevel/ExpertSetter.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ExpertSetter.java\&quot;,\&quot;file_name\&quot;:\&quot;ExpertSetter.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[27,5]]}]},\&quot;/src/begginerLevel/Factorial.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/Factorial.java\&quot;,\&quot;file_name\&quot;:\&quot;Factorial.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[26,5]]}]},\&quot;/src/begginerLevel/FarFromOrigin.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/FarFromOrigin.java\&quot;,\&quot;file_name\&quot;:\&quot;FarFromOrigin.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[34,5]]}]},\&quot;/src/begginerLevel/FarmerAndHisPlot.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/FarmerAndHisPlot.java\&quot;,\&quot;file_name\&quot;:\&quot;FarmerAndHisPlot.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[21,5]]},{\&quot;method_name\&quot;:\&quot;gcd\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n, int m)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;m\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[22,4],[27,5]]}]},\&quot;/src/begginerLevel/FarmersLeague.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/FarmersLeague.java\&quot;,\&quot;file_name\&quot;:\&quot;FarmersLeague.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[15,5]]}]},\&quot;/src/begginerLevel/FillCandies.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/FillCandies.java\&quot;,\&quot;file_name\&quot;:\&quot;FillCandies.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[27,5]]}]},\&quot;/src/begginerLevel/FilltheGrid.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/FilltheGrid.java\&quot;,\&quot;file_name\&quot;:\&quot;FilltheGrid.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;FilltheGrid\&quot;,\&quot;method_parameters\&quot;:\&quot;(int largestN, int indexN)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;largestN\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;indexN\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[8,4],[12,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[13,4],[30,5]]},{\&quot;method_name\&quot;:\&quot;solve\&quot;,\&quot;method_parameters\&quot;:\&quot;(int arr[])\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;FilltheGrid\&quot;,\&quot;scope\&quot;:[[32,4],[45,5]]}]},\&quot;/src/begginerLevel/FindAandB.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/FindAandB.java\&quot;,\&quot;file_name\&quot;:\&quot;FindAandB.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[25,5]]}]},\&quot;/src/begginerLevel/FindingShoes.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/FindingShoes.java\&quot;,\&quot;file_name\&quot;:\&quot;FindingShoes.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[25,5]]}]},\&quot;/src/begginerLevel/FindingSquareRoots.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/FindingSquareRoots.java\&quot;,\&quot;file_name\&quot;:\&quot;FindingSquareRoots.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[19,5]]}]},\&quot;/src/begginerLevel/FindTheDirection.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/FindTheDirection.java\&quot;,\&quot;file_name\&quot;:\&quot;FindTheDirection.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,8],[24,9]]}]},\&quot;/src/begginerLevel/FirstAndLast.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/FirstAndLast.java\&quot;,\&quot;file_name\&quot;:\&quot;FirstAndLast.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[30,5]]}]},\&quot;/src/begginerLevel/FitSquaresInTriangle.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/FitSquaresInTriangle.java\&quot;,\&quot;file_name\&quot;:\&quot;FitSquaresInTriangle.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[6,5]]}]},\&quot;/src/begginerLevel/FlipTheCards.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/FlipTheCards.java\&quot;,\&quot;file_name\&quot;:\&quot;FlipTheCards.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[21,5]]}]},\&quot;/src/begginerLevel/FourHundredMRace.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/FourHundredMRace.java\&quot;,\&quot;file_name\&quot;:\&quot;FourHundredMRace.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[36,5]]}]},\&quot;/src/begginerLevel/GameBetweenFriends.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/GameBetweenFriends.java\&quot;,\&quot;file_name\&quot;:\&quot;GameBetweenFriends.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[34,5]]}]},\&quot;/src/begginerLevel/GCDandLCM.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/GCDandLCM.java\&quot;,\&quot;file_name\&quot;:\&quot;GCDandLCM.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[24,5]]},{\&quot;method_name\&quot;:\&quot;GCD\&quot;,\&quot;method_parameters\&quot;:\&quot;(long a, long b)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;long\&quot;,\&quot;name\&quot;:\&quot;a\&quot;},{\&quot;type\&quot;:\&quot;long\&quot;,\&quot;name\&quot;:\&quot;b\&quot;}],\&quot;return_type\&quot;:\&quot;long\&quot;,\&quot;scope\&quot;:[[26,8],[33,5]]},{\&quot;method_name\&quot;:\&quot;LCM\&quot;,\&quot;method_parameters\&quot;:\&quot;(long a, long b, long GCD)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;long\&quot;,\&quot;name\&quot;:\&quot;a\&quot;},{\&quot;type\&quot;:\&quot;long\&quot;,\&quot;name\&quot;:\&quot;b\&quot;},{\&quot;type\&quot;:\&quot;long\&quot;,\&quot;name\&quot;:\&quot;GCD\&quot;}],\&quot;return_type\&quot;:\&quot;long\&quot;,\&quot;scope\&quot;:[[34,4],[37,5]]}]},\&quot;/src/begginerLevel/Genes.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/Genes.java\&quot;,\&quot;file_name\&quot;:\&quot;Genes.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[17,9]]}]},\&quot;/src/begginerLevel/GetLowestFree.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/GetLowestFree.java\&quot;,\&quot;file_name\&quot;:\&quot;GetLowestFree.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[21,5]]},{\&quot;method_name\&quot;:\&quot;solvwe\&quot;,\&quot;method_parameters\&quot;:\&quot;(int h, int x, int y)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;h\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;x\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;y\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[23,4],[36,5]]}]},\&quot;/src/begginerLevel/GoldMining.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/GoldMining.java\&quot;,\&quot;file_name\&quot;:\&quot;GoldMining.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[20,5]]}]},\&quot;/src/begginerLevel/GoodProgram.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/GoodProgram.java\&quot;,\&quot;file_name\&quot;:\&quot;GoodProgram.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[23,5]]}]},\&quot;/src/begginerLevel/GoodQualityBulbs.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/GoodQualityBulbs.java\&quot;,\&quot;file_name\&quot;:\&quot;GoodQualityBulbs.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[17,5]]}]},\&quot;/src/begginerLevel/GoodWeather.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/GoodWeather.java\&quot;,\&quot;file_name\&quot;:\&quot;GoodWeather.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[35,5]]}]},\&quot;/src/begginerLevel/GradeltheSteel.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/GradeltheSteel.java\&quot;,\&quot;file_name\&quot;:\&quot;GradeltheSteel.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[44,5]]}]},\&quot;/src/begginerLevel/GrossSalary.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/GrossSalary.java\&quot;,\&quot;file_name\&quot;:\&quot;GrossSalary.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[23,5]]}]},\&quot;/src/begginerLevel/GroupAssignment.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/GroupAssignment.java\&quot;,\&quot;file_name\&quot;:\&quot;GroupAssignment.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[15,5]]}]},\&quot;/src/begginerLevel/GuessTheBottomFace.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/GuessTheBottomFace.java\&quot;,\&quot;file_name\&quot;:\&quot;GuessTheBottomFace.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[19,5]]}]},\&quot;/src/begginerLevel/Hackerman.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/Hackerman.java\&quot;,\&quot;file_name\&quot;:\&quot;Hackerman.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[25,5]]},{\&quot;method_name\&quot;:\&quot;isPrime\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[26,4],[42,5]]}]},\&quot;/src/begginerLevel/HardestProblemBet.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/HardestProblemBet.java\&quot;,\&quot;file_name\&quot;:\&quot;HardestProblemBet.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[23,5]]}]},\&quot;/src/begginerLevel/HelpingChef.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/HelpingChef.java\&quot;,\&quot;file_name\&quot;:\&quot;HelpingChef.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[22,5]]}]},\&quot;/src/begginerLevel/HighAccuracy.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/HighAccuracy.java\&quot;,\&quot;file_name\&quot;:\&quot;HighAccuracy.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[22,5]]}]},\&quot;/src/begginerLevel/HighestDivisor.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/HighestDivisor.java\&quot;,\&quot;file_name\&quot;:\&quot;HighestDivisor.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[9,4],[21,5]]}]},\&quot;/src/begginerLevel/HiidenNumbers.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/HiidenNumbers.java\&quot;,\&quot;file_name\&quot;:\&quot;HiidenNumbers.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[26,5]]}]},\&quot;/src/begginerLevel/HowManyDigitsDoIHave.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/HowManyDigitsDoIHave.java\&quot;,\&quot;file_name\&quot;:\&quot;HowManyDigitsDoIHave.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[21,5]]},{\&quot;method_name\&quot;:\&quot;solve\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[23,4],[29,5]]}]},\&quot;/src/begginerLevel/ICanUseBothHands.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ICanUseBothHands.java\&quot;,\&quot;file_name\&quot;:\&quot;ICanUseBothHands.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[20,5]]}]},\&quot;/src/begginerLevel/IDOfShip.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/IDOfShip.java\&quot;,\&quot;file_name\&quot;:\&quot;IDOfShip.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[23,5]]}]},\&quot;/src/begginerLevel/ImportantPagesOnCodeChef.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ImportantPagesOnCodeChef.java\&quot;,\&quot;file_name\&quot;:\&quot;ImportantPagesOnCodeChef.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[18,5]]}]},\&quot;/src/begginerLevel/Indivisible.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/Indivisible.java\&quot;,\&quot;file_name\&quot;:\&quot;Indivisible.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[29,5]]}]},\&quot;/src/begginerLevel/InsideTheStadium.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/InsideTheStadium.java\&quot;,\&quot;file_name\&quot;:\&quot;InsideTheStadium.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;calculateStrikeRate\&quot;,\&quot;method_parameters\&quot;:\&quot;(int N, int[] A)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;N\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;A\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[8,4],[22,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[24,4],[39,5]]}]},\&quot;/src/begginerLevel/IntegerThatSumToTheSameValue.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/IntegerThatSumToTheSameValue.java\&quot;,\&quot;file_name\&quot;:\&quot;IntegerThatSumToTheSameValue.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[19,5]]}]},\&quot;/src/begginerLevel/IsItAVowelOrConsonant.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/IsItAVowelOrConsonant.java\&quot;,\&quot;file_name\&quot;:\&quot;IsItAVowelOrConsonant.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[27,5]]}]},\&quot;/src/begginerLevel/IsTheScoreConsistent.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/IsTheScoreConsistent.java\&quot;,\&quot;file_name\&quot;:\&quot;IsTheScoreConsistent.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[9,4],[28,5]]}]},\&quot;/src/begginerLevel/ItsMyServe.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ItsMyServe.java\&quot;,\&quot;file_name\&quot;:\&quot;ItsMyServe.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[23,5]]}]},\&quot;/src/begginerLevel/JanmanshAndGames.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/JanmanshAndGames.java\&quot;,\&quot;file_name\&quot;:\&quot;JanmanshAndGames.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[18,5]]}]},\&quot;/src/begginerLevel/JanmanshAtFruitMarket.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/JanmanshAtFruitMarket.java\&quot;,\&quot;file_name\&quot;:\&quot;JanmanshAtFruitMarket.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[21,5]]}]},\&quot;/src/begginerLevel/JengaNight.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/JengaNight.java\&quot;,\&quot;file_name\&quot;:\&quot;JengaNight.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[23,5]]}]},\&quot;/src/begginerLevel/JoiningDate.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/JoiningDate.java\&quot;,\&quot;file_name\&quot;:\&quot;JoiningDate.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[19,5]]}]},\&quot;/src/begginerLevel/Judged.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/Judged.java\&quot;,\&quot;file_name\&quot;:\&quot;Judged.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[23,5]]}]},\&quot;/src/begginerLevel/JudgingDelay.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/JudgingDelay.java\&quot;,\&quot;file_name\&quot;:\&quot;JudgingDelay.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[24,5]]}]},\&quot;/src/begginerLevel/KitchenTimeTable.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/KitchenTimeTable.java\&quot;,\&quot;file_name\&quot;:\&quot;KitchenTimeTable.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[34,5]]}]},\&quot;/src/begginerLevel/LaLiga.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/LaLiga.java\&quot;,\&quot;file_name\&quot;:\&quot;LaLiga.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[36,5]]}]},\&quot;/src/begginerLevel/LargestAndSecondLargest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/LargestAndSecondLargest.java\&quot;,\&quot;file_name\&quot;:\&quot;LargestAndSecondLargest.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[28,5]]}]},\&quot;/src/begginerLevel/LazyChef.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/LazyChef.java\&quot;,\&quot;file_name\&quot;:\&quot;LazyChef.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[21,5]]}]},\&quot;/src/begginerLevel/LuckyFour.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/LuckyFour.java\&quot;,\&quot;file_name\&quot;:\&quot;LuckyFour.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[21,5]]}]},\&quot;/src/begginerLevel/LuckyNumbers.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/LuckyNumbers.java\&quot;,\&quot;file_name\&quot;:\&quot;LuckyNumbers.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[55,5]]}]},\&quot;/src/begginerLevel/MakeAAndBEqual.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/MakeAAndBEqual.java\&quot;,\&quot;file_name\&quot;:\&quot;MakeAAndBEqual.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[30,5]]}]},\&quot;/src/begginerLevel/MakeAP.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/MakeAP.java\&quot;,\&quot;file_name\&quot;:\&quot;MakeAP.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[27,5]]}]},\&quot;/src/begginerLevel/MalivkaIsPeculiarAboutColorOfBallons.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/MalivkaIsPeculiarAboutColorOfBallons.java\&quot;,\&quot;file_name\&quot;:\&quot;MalivkaIsPeculiarAboutColorOfBallons.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[26,5]]}]},\&quot;/src/begginerLevel/Marathon.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/Marathon.java\&quot;,\&quot;file_name\&quot;:\&quot;Marathon.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[27,5]]}]},\&quot;/src/begginerLevel/MArbles.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/MArbles.java\&quot;,\&quot;file_name\&quot;:\&quot;MArbles.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[22,5]]}]},\&quot;/src/begginerLevel/MarioAndBrokenString.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/MarioAndBrokenString.java\&quot;,\&quot;file_name\&quot;:\&quot;MarioAndBrokenString.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[36,5]]}]},\&quot;/src/begginerLevel/MarioAndBullet.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/MarioAndBullet.java\&quot;,\&quot;file_name\&quot;:\&quot;MarioAndBullet.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[27,5]]}]},\&quot;/src/begginerLevel/MarioTrtansformation.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/MarioTrtansformation.java\&quot;,\&quot;file_name\&quot;:\&quot;MarioTrtansformation.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[26,5]]}]},\&quot;/src/begginerLevel/MaximiseTheTastiness.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/MaximiseTheTastiness.java\&quot;,\&quot;file_name\&quot;:\&quot;MaximiseTheTastiness.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[24,5]]}]},\&quot;/src/begginerLevel/MaximumProduction.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/MaximumProduction.java\&quot;,\&quot;file_name\&quot;:\&quot;MaximumProduction.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[24,5]]}]},\&quot;/src/begginerLevel/MaxNutrition.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/MaxNutrition.java\&quot;,\&quot;file_name\&quot;:\&quot;MaxNutrition.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[25,5]]}]},\&quot;/src/begginerLevel/MeltGold.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/MeltGold.java\&quot;,\&quot;file_name\&quot;:\&quot;MeltGold.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[25,5]]}]},\&quot;/src/begginerLevel/MileageMatters.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/MileageMatters.java\&quot;,\&quot;file_name\&quot;:\&quot;MileageMatters.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[29,5]]}]},\&quot;/src/begginerLevel/MinimumNumberOfCoins.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/MinimumNumberOfCoins.java\&quot;,\&quot;file_name\&quot;:\&quot;MinimumNumberOfCoins.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[23,5]]}]},\&quot;/src/begginerLevel/MinimumNumberOfOnes.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/MinimumNumberOfOnes.java\&quot;,\&quot;file_name\&quot;:\&quot;MinimumNumberOfOnes.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[36,5]]}]},\&quot;/src/begginerLevel/MinimumPizzas.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/MinimumPizzas.java\&quot;,\&quot;file_name\&quot;:\&quot;MinimumPizzas.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[29,5]]}]},\&quot;/src/begginerLevel/MiniumCarsRequired.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/MiniumCarsRequired.java\&quot;,\&quot;file_name\&quot;:\&quot;MiniumCarsRequired.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[19,5]]}]},\&quot;/src/begginerLevel/MiniumNumberOfFlips.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/MiniumNumberOfFlips.java\&quot;,\&quot;file_name\&quot;:\&quot;MiniumNumberOfFlips.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[31,5]]}]},\&quot;/src/begginerLevel/Monoply.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/Monoply.java\&quot;,\&quot;file_name\&quot;:\&quot;Monoply.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[26,9]]}]},\&quot;/src/begginerLevel/MutatedMinions.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/MutatedMinions.java\&quot;,\&quot;file_name\&quot;:\&quot;MutatedMinions.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[30,5]]}]},\&quot;/src/begginerLevel/NaiveChef.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/NaiveChef.java\&quot;,\&quot;file_name\&quot;:\&quot;NaiveChef.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[29,5]]},{\&quot;method_name\&quot;:\&quot;calPorbalities\&quot;,\&quot;method_parameters\&quot;:\&quot;(int dieNumbers[], int target)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;dieNumbers\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;target\&quot;}],\&quot;return_type\&quot;:\&quot;double\&quot;,\&quot;scope\&quot;:[[30,4],[40,5]]}]},\&quot;/src/begginerLevel/Nameless.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/Nameless.java\&quot;,\&quot;file_name\&quot;:\&quot;Nameless.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[16,5]]}]},\&quot;/src/begginerLevel/NearestCourt.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/NearestCourt.java\&quot;,\&quot;file_name\&quot;:\&quot;NearestCourt.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[17,5]]}]},\&quot;/src/begginerLevel/NearestExist.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/NearestExist.java\&quot;,\&quot;file_name\&quot;:\&quot;NearestExist.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[23,5]]}]},\&quot;/src/begginerLevel/NegativeProduct.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/NegativeProduct.java\&quot;,\&quot;file_name\&quot;:\&quot;NegativeProduct.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[25,5]]}]},\&quot;/src/begginerLevel/NonNegativeNumber.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/NonNegativeNumber.java\&quot;,\&quot;file_name\&quot;:\&quot;NonNegativeNumber.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[43,5]]}]},\&quot;/src/begginerLevel/NonNegativeProdutc.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/NonNegativeProdutc.java\&quot;,\&quot;file_name\&quot;:\&quot;NonNegativeProdutc.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[31,5]]}]},\&quot;/src/begginerLevel/nOtIMEtOwAIT.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/nOtIMEtOwAIT.java\&quot;,\&quot;file_name\&quot;:\&quot;nOtIMEtOwAIT.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[27,5]]}]},\&quot;/src/begginerLevel/OddsAndEvens.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/OddsAndEvens.java\&quot;,\&quot;file_name\&quot;:\&quot;OddsAndEvens.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[22,5]]}]},\&quot;/src/begginerLevel/OlympicsRanking.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/OlympicsRanking.java\&quot;,\&quot;file_name\&quot;:\&quot;OlympicsRanking.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[21,5]]}]},\&quot;/src/begginerLevel/OnlineOrOffline.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/OnlineOrOffline.java\&quot;,\&quot;file_name\&quot;:\&quot;OnlineOrOffline.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[28,5]]}]},\&quot;/src/begginerLevel/PackingBooks.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/PackingBooks.java\&quot;,\&quot;file_name\&quot;:\&quot;PackingBooks.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[19,5]]}]},\&quot;/src/begginerLevel/PaperCutting.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/PaperCutting.java\&quot;,\&quot;file_name\&quot;:\&quot;PaperCutting.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[20,5]]}]},\&quot;/src/begginerLevel/PassingMarks.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/PassingMarks.java\&quot;,\&quot;file_name\&quot;:\&quot;PassingMarks.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[8,4],[23,5]]}]},\&quot;/src/begginerLevel/PassingMarks1.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/PassingMarks1.java\&quot;,\&quot;file_name\&quot;:\&quot;PassingMarks1.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[25,5]]}]},\&quot;/src/begginerLevel/PassOrFail.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/PassOrFail.java\&quot;,\&quot;file_name\&quot;:\&quot;PassOrFail.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[31,5]]}]},\&quot;/src/begginerLevel/PeacefulParty.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/PeacefulParty.java\&quot;,\&quot;file_name\&quot;:\&quot;PeacefulParty.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[20,5]]}]},\&quot;/src/begginerLevel/PenaltyShoes.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/PenaltyShoes.java\&quot;,\&quot;file_name\&quot;:\&quot;PenaltyShoes.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[28,5]]},{\&quot;method_name\&quot;:\&quot;determineWinner\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] scores)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;scores\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[30,4],[39,5]]}]},\&quot;/src/begginerLevel/PlayPiano.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/PlayPiano.java\&quot;,\&quot;file_name\&quot;:\&quot;PlayPiano.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[26,5]]}]},\&quot;/src/begginerLevel/PoliceAndThief.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/PoliceAndThief.java\&quot;,\&quot;file_name\&quot;:\&quot;PoliceAndThief.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[22,5]]}]},\&quot;/src/begginerLevel/PossibleVictory.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/PossibleVictory.java\&quot;,\&quot;file_name\&quot;:\&quot;PossibleVictory.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[8,5]]}]},\&quot;/src/begginerLevel/PracticeProblemChefAndHappyString.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/PracticeProblemChefAndHappyString.java\&quot;,\&quot;file_name\&quot;:\&quot;PracticeProblemChefAndHappyString.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[32,5]]},{\&quot;method_name\&quot;:\&quot;isVowel\&quot;,\&quot;method_parameters\&quot;:\&quot;(char c)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;char\&quot;,\&quot;name\&quot;:\&quot;c\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[34,8],[36,5]]}]},\&quot;/src/begginerLevel/practiceProblemWordle.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/practiceProblemWordle.java\&quot;,\&quot;file_name\&quot;:\&quot;practiceProblemWordle.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[21,5]]}]},\&quot;/src/begginerLevel/PresentsForCheffina.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/PresentsForCheffina.java\&quot;,\&quot;file_name\&quot;:\&quot;PresentsForCheffina.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[18,5]]}]},\&quot;/src/begginerLevel/PrimalityTest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/PrimalityTest.java\&quot;,\&quot;file_name\&quot;:\&quot;PrimalityTest.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[31,5]]}]},\&quot;/src/begginerLevel/PrintingBinaryArray.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/PrintingBinaryArray.java\&quot;,\&quot;file_name\&quot;:\&quot;PrintingBinaryArray.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/begginerLevel/Problem.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/Problem.java\&quot;,\&quot;file_name\&quot;:\&quot;Problem.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[19,5]]}]},\&quot;/src/begginerLevel/ProblemsInYourToDoList.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ProblemsInYourToDoList.java\&quot;,\&quot;file_name\&quot;:\&quot;ProblemsInYourToDoList.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[26,5]]}]},\&quot;/src/begginerLevel/ProcessingAString.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ProcessingAString.java\&quot;,\&quot;file_name\&quot;:\&quot;ProcessingAString.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[13,5]]},{\&quot;method_name\&quot;:\&quot;isDigit2\&quot;,\&quot;method_parameters\&quot;:\&quot;(String s)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;s\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[26,4],[37,5]]}]},\&quot;/src/begginerLevel/PuppyANdSum.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/PuppyANdSum.java\&quot;,\&quot;file_name\&quot;:\&quot;PuppyANdSum.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[17,5]]},{\&quot;method_name\&quot;:\&quot;sumOfSum\&quot;,\&quot;method_parameters\&quot;:\&quot;(int d, int n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;d\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[18,4],[24,5]]}]},\&quot;/src/begginerLevel/QualifyTheRound.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/QualifyTheRound.java\&quot;,\&quot;file_name\&quot;:\&quot;QualifyTheRound.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[30,5]]}]},\&quot;/src/begginerLevel/RanklistPages.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/RanklistPages.java\&quot;,\&quot;file_name\&quot;:\&quot;RanklistPages.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[22,5]]}]},\&quot;/src/begginerLevel/RCBandPlayoffs.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/RCBandPlayoffs.java\&quot;,\&quot;file_name\&quot;:\&quot;RCBandPlayoffs.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[26,5]]}]},\&quot;/src/begginerLevel/ReachFast.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ReachFast.java\&quot;,\&quot;file_name\&quot;:\&quot;ReachFast.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[25,5]]}]},\&quot;/src/begginerLevel/REarrangeingDigitsToGetAMultipleOfFive.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/REarrangeingDigitsToGetAMultipleOfFive.java\&quot;,\&quot;file_name\&quot;:\&quot;REarrangeingDigitsToGetAMultipleOfFive.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[22,5]]}]},\&quot;/src/begginerLevel/RecentContestProblems.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/RecentContestProblems.java\&quot;,\&quot;file_name\&quot;:\&quot;RecentContestProblems.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[36,5]]}]},\&quot;/src/begginerLevel/RedLightGreenLight.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/RedLightGreenLight.java\&quot;,\&quot;file_name\&quot;:\&quot;RedLightGreenLight.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[25,5]]}]},\&quot;/src/begginerLevel/Relativity.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/Relativity.java\&quot;,\&quot;file_name\&quot;:\&quot;Relativity.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[18,5]]}]},\&quot;/src/begginerLevel/ReturnTheChange.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ReturnTheChange.java\&quot;,\&quot;file_name\&quot;:\&quot;ReturnTheChange.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[28,5]]}]},\&quot;/src/begginerLevel/ReverseTheNumber.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ReverseTheNumber.java\&quot;,\&quot;file_name\&quot;:\&quot;ReverseTheNumber.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[163,4],[177,5]]}]},\&quot;/src/begginerLevel/Runningcomparsion.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/Runningcomparsion.java\&quot;,\&quot;file_name\&quot;:\&quot;Runningcomparsion.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[28,5]]},{\&quot;method_name\&quot;:\&quot;happyDay\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n,int aliceDistances[], int bobDistances[])\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;aliceDistances\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;bobDistances\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[29,4],[45,5]]}]},\&quot;/src/begginerLevel/SaleSeason.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/SaleSeason.java\&quot;,\&quot;file_name\&quot;:\&quot;SaleSeason.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[29,5]]}]},\&quot;/src/begginerLevel/Sample.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/Sample.java\&quot;,\&quot;file_name\&quot;:\&quot;Sample.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[8,4],[39,5]]},{\&quot;method_name\&quot;:\&quot;solve\&quot;,\&quot;method_parameters\&quot;:\&quot;(Scanner sc)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Scanner\&quot;,\&quot;name\&quot;:\&quot;sc\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[41,4],[50,5]]},{\&quot;method_name\&quot;:\&quot;solve\&quot;,\&quot;method_parameters\&quot;:\&quot;(int a[])\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;a\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[55,4],[58,5]]},{\&quot;method_name\&quot;:\&quot;solve1\&quot;,\&quot;method_parameters\&quot;:\&quot;(Scanner sc)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Scanner\&quot;,\&quot;name\&quot;:\&quot;sc\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[60,4],[74,5]]},{\&quot;method_name\&quot;:\&quot;solve4\&quot;,\&quot;method_parameters\&quot;:\&quot;(String str)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;str\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[77,4],[89,5]]},{\&quot;method_name\&quot;:\&quot;solve5\&quot;,\&quot;method_parameters\&quot;:\&quot;(String str)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;str\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[92,4],[112,6]]},{\&quot;method_name\&quot;:\&quot;solve6\&quot;,\&quot;method_parameters\&quot;:\&quot;(String str)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;str\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[115,5],[145,6]]}]},\&quot;/src/begginerLevel/SastaSharkTank.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/SastaSharkTank.java\&quot;,\&quot;file_name\&quot;:\&quot;SastaSharkTank.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[26,5]]}]},\&quot;/src/begginerLevel/Scorehigh.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/Scorehigh.java\&quot;,\&quot;file_name\&quot;:\&quot;Scorehigh.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[37,5]]}]},\&quot;/src/begginerLevel/SecondLargest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/SecondLargest.java\&quot;,\&quot;file_name\&quot;:\&quot;SecondLargest.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[28,5]]}]},\&quot;/src/begginerLevel/SecretRecipe.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/SecretRecipe.java\&quot;,\&quot;file_name\&quot;:\&quot;SecretRecipe.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[27,5]]}]},\&quot;/src/begginerLevel/SelfDefenceTraining.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/SelfDefenceTraining.java\&quot;,\&quot;file_name\&quot;:\&quot;SelfDefenceTraining.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[31,5]]}]},\&quot;/src/begginerLevel/ShoeFit.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ShoeFit.java\&quot;,\&quot;file_name\&quot;:\&quot;ShoeFit.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[21,5]]}]},\&quot;/src/begginerLevel/SingelUSeAttack.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/SingelUSeAttack.java\&quot;,\&quot;file_name\&quot;:\&quot;SingelUSeAttack.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[32,5]]}]},\&quot;/src/begginerLevel/SmallestNumberOfNotes.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/SmallestNumberOfNotes.java\&quot;,\&quot;file_name\&quot;:\&quot;SmallestNumberOfNotes.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[23,9]]},{\&quot;method_name\&quot;:\&quot;solve\&quot;,\&quot;method_parameters\&quot;:\&quot;(Scanner sc)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Scanner\&quot;,\&quot;name\&quot;:\&quot;sc\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[24,8],[40,5]]}]},\&quot;/src/begginerLevel/SmallFactorial.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/SmallFactorial.java\&quot;,\&quot;file_name\&quot;:\&quot;SmallFactorial.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[30,5]]}]},\&quot;/src/begginerLevel/SmallFactorials.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/SmallFactorials.java\&quot;,\&quot;file_name\&quot;:\&quot;SmallFactorials.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[28,5]]}]},\&quot;/src/begginerLevel/Solubility.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/Solubility.java\&quot;,\&quot;file_name\&quot;:\&quot;Solubility.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[18,5]]}]},\&quot;/src/begginerLevel/SpeedLimitTest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/SpeedLimitTest.java\&quot;,\&quot;file_name\&quot;:\&quot;SpeedLimitTest.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[35,5]]}]},\&quot;/src/begginerLevel/SugarcaneJuiceBusiness.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/SugarcaneJuiceBusiness.java\&quot;,\&quot;file_name\&quot;:\&quot;SugarcaneJuiceBusiness.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[25,5]]}]},\&quot;/src/begginerLevel/SummerHit.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/SummerHit.java\&quot;,\&quot;file_name\&quot;:\&quot;SummerHit.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[25,5]]}]},\&quot;/src/begginerLevel/SumOrDifference.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/SumOrDifference.java\&quot;,\&quot;file_name\&quot;:\&quot;SumOrDifference.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[20,5]]}]},\&quot;/src/begginerLevel/SumsInATraingle.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/SumsInATraingle.java\&quot;,\&quot;file_name\&quot;:\&quot;SumsInATraingle.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[22,5]]}]},\&quot;/src/begginerLevel/Tekken.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/Tekken.java\&quot;,\&quot;file_name\&quot;:\&quot;Tekken.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[23,5]]}]},\&quot;/src/begginerLevel/TestAverages.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/TestAverages.java\&quot;,\&quot;file_name\&quot;:\&quot;TestAverages.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[25,5]]}]},\&quot;/src/begginerLevel/TestingRobot.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/TestingRobot.java\&quot;,\&quot;file_name\&quot;:\&quot;TestingRobot.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[26,5]]}]},\&quot;/src/begginerLevel/TestScore.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/TestScore.java\&quot;,\&quot;file_name\&quot;:\&quot;TestScore.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[28,5]]}]},\&quot;/src/begginerLevel/TheBeginingEraOfCybererverse.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/TheBeginingEraOfCybererverse.java\&quot;,\&quot;file_name\&quot;:\&quot;TheBeginingEraOfCybererverse.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[18,5]]}]},\&quot;/src/begginerLevel/TheBlockGame.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/TheBlockGame.java\&quot;,\&quot;file_name\&quot;:\&quot;TheBlockGame.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[32,5]]}]},\&quot;/src/begginerLevel/TheCoolerDilemma.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/TheCoolerDilemma.java\&quot;,\&quot;file_name\&quot;:\&quot;TheCoolerDilemma.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[24,5]]}]},\&quot;/src/begginerLevel/TheLastLevels.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/TheLastLevels.java\&quot;,\&quot;file_name\&quot;:\&quot;TheLastLevels.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[31,5]]}]},\&quot;/src/begginerLevel/TheLeadGame.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/TheLeadGame.java\&quot;,\&quot;file_name\&quot;:\&quot;TheLeadGame.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[7,5]]}]},\&quot;/src/begginerLevel/TheOldSaintAndThreeQuestions.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/TheOldSaintAndThreeQuestions.java\&quot;,\&quot;file_name\&quot;:\&quot;TheOldSaintAndThreeQuestions.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[34,5]]}]},\&quot;/src/begginerLevel/ThePreparations.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ThePreparations.java\&quot;,\&quot;file_name\&quot;:\&quot;ThePreparations.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[23,5]]}]},\&quot;/src/begginerLevel/TheRatingDilemma.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/TheRatingDilemma.java\&quot;,\&quot;file_name\&quot;:\&quot;TheRatingDilemma.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[13,5]]}]},\&quot;/src/begginerLevel/TheSquidGame.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/TheSquidGame.java\&quot;,\&quot;file_name\&quot;:\&quot;TheSquidGame.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[29,5]]}]},\&quot;/src/begginerLevel/TheThreeTopics.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/TheThreeTopics.java\&quot;,\&quot;file_name\&quot;:\&quot;TheThreeTopics.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[20,5]]}]},\&quot;/src/begginerLevel/TooManyFloors.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/TooManyFloors.java\&quot;,\&quot;file_name\&quot;:\&quot;TooManyFloors.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[27,5]]}]},\&quot;/src/begginerLevel/TooManyItems.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/TooManyItems.java\&quot;,\&quot;file_name\&quot;:\&quot;TooManyItems.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[22,5]]}]},\&quot;/src/begginerLevel/TotalExpenses.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/TotalExpenses.java\&quot;,\&quot;file_name\&quot;:\&quot;TotalExpenses.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[20,5]]}]},\&quot;/src/begginerLevel/TransformTheExpression.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/TransformTheExpression.java\&quot;,\&quot;file_name\&quot;:\&quot;TransformTheExpression.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[6,5]]}]},\&quot;/src/begginerLevel/TwoRanges.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/TwoRanges.java\&quot;,\&quot;file_name\&quot;:\&quot;TwoRanges.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[29,5]]}]},\&quot;/src/begginerLevel/TwoRooks.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/TwoRooks.java\&quot;,\&quot;file_name\&quot;:\&quot;TwoRooks.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[21,5]]}]},\&quot;/src/begginerLevel/TwoVSTen.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/TwoVSTen.java\&quot;,\&quot;file_name\&quot;:\&quot;TwoVSTen.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[18,5]]}]},\&quot;/src/begginerLevel/UtkarshAndPacementTests.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/UtkarshAndPacementTests.java\&quot;,\&quot;file_name\&quot;:\&quot;UtkarshAndPacementTests.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[24,5]]}]},\&quot;/src/begginerLevel/ValentineIsComing.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ValentineIsComing.java\&quot;,\&quot;file_name\&quot;:\&quot;ValentineIsComing.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[24,5]]}]},\&quot;/src/begginerLevel/ValidPair.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ValidPair.java\&quot;,\&quot;file_name\&quot;:\&quot;ValidPair.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[17,5]]}]},\&quot;/src/begginerLevel/ValidTriangle.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/ValidTriangle.java\&quot;,\&quot;file_name\&quot;:\&quot;ValidTriangle.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[25,5]]}]},\&quot;/src/begginerLevel/VisheshAndHisPopcornCombo.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/VisheshAndHisPopcornCombo.java\&quot;,\&quot;file_name\&quot;:\&quot;VisheshAndHisPopcornCombo.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[22,5]]}]},\&quot;/src/begginerLevel/WatchingMoviesAtTwoX.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/WatchingMoviesAtTwoX.java\&quot;,\&quot;file_name\&quot;:\&quot;WatchingMoviesAtTwoX.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[15,5]]}]},\&quot;/src/begginerLevel/WaterMixing.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/WaterMixing.java\&quot;,\&quot;file_name\&quot;:\&quot;WaterMixing.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[25,5]]}]},\&quot;/src/begginerLevel/Weights.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/Weights.java\&quot;,\&quot;file_name\&quot;:\&quot;Weights.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[24,5]]}]},\&quot;/src/begginerLevel/WhichDivision.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/WhichDivision.java\&quot;,\&quot;file_name\&quot;:\&quot;WhichDivision.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[19,5]]}]},\&quot;/src/begginerLevel/WhichFuelIsCheaper.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/WhichFuelIsCheaper.java\&quot;,\&quot;file_name\&quot;:\&quot;WhichFuelIsCheaper.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[27,5]]}]},\&quot;/src/begginerLevel/WhichMaxture.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/WhichMaxture.java\&quot;,\&quot;file_name\&quot;:\&quot;WhichMaxture.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[23,5]]}]},\&quot;/src/begginerLevel/Wordle.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/Wordle.java\&quot;,\&quot;file_name\&quot;:\&quot;Wordle.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[32,5]]}]},\&quot;/src/begginerLevel/WorkSmarterNotHarder.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/WorkSmarterNotHarder.java\&quot;,\&quot;file_name\&quot;:\&quot;WorkSmarterNotHarder.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[16,5]]}]},\&quot;/src/begginerLevel/WorldChessChampionship.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/WorldChessChampionship.java\&quot;,\&quot;file_name\&quot;:\&quot;WorldChessChampionship.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[34,5]]}]},\&quot;/src/begginerLevel/XJumps.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevel/XJumps.java\&quot;,\&quot;file_name\&quot;:\&quot;XJumps.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[20,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ABalancedContest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ABalancedContest.java\&quot;,\&quot;file_name\&quot;:\&quot;ABalancedContest.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[30,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ABooks.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ABooks.java\&quot;,\&quot;file_name\&quot;:\&quot;ABooks.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[31,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ABPlusC.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ABPlusC.java\&quot;,\&quot;file_name\&quot;:\&quot;ABPlusC.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[27,5]]}]},\&quot;/src/begginerLvevelSecondHalf/AccessControl.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/AccessControl.java\&quot;,\&quot;file_name\&quot;:\&quot;AccessControl.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[30,5]]}]},\&quot;/src/begginerLvevelSecondHalf/AdaAndCrayons.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/AdaAndCrayons.java\&quot;,\&quot;file_name\&quot;:\&quot;AdaAndCrayons.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[22,5]]}]},\&quot;/src/begginerLvevelSecondHalf/AdaDishes.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/AdaDishes.java\&quot;,\&quot;file_name\&quot;:\&quot;AdaDishes.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[13,5]]}]},\&quot;/src/begginerLvevelSecondHalf/AdaSchool.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/AdaSchool.java\&quot;,\&quot;file_name\&quot;:\&quot;AdaSchool.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[20,5]]}]},\&quot;/src/begginerLvevelSecondHalf/AdjacentSumParity.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/AdjacentSumParity.java\&quot;,\&quot;file_name\&quot;:\&quot;AdjacentSumParity.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[24,5]]}]},\&quot;/src/begginerLvevelSecondHalf/AGoodSet.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/AGoodSet.java\&quot;,\&quot;file_name\&quot;:\&quot;AGoodSet.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;BinaryTreeNode\&quot;,\&quot;method_parameters\&quot;:\&quot;(T data)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;T\&quot;,\&quot;name\&quot;:\&quot;data\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[8,4],[10,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[13,4],[25,5]]}]},\&quot;/src/begginerLvevelSecondHalf/AirLineRestrictions.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/AirLineRestrictions.java\&quot;,\&quot;file_name\&quot;:\&quot;AirLineRestrictions.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[26,5]]}]},\&quot;/src/begginerLvevelSecondHalf/AirPortManagement.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/AirPortManagement.java\&quot;,\&quot;file_name\&quot;:\&quot;AirPortManagement.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[32,5]]}]},\&quot;/src/begginerLvevelSecondHalf/AkashAndFunction.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/AkashAndFunction.java\&quot;,\&quot;file_name\&quot;:\&quot;AkashAndFunction.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[12,5]]}]},\&quot;/src/begginerLvevelSecondHalf/AlternatingString.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/AlternatingString.java\&quot;,\&quot;file_name\&quot;:\&quot;AlternatingString.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Node\&quot;,\&quot;method_parameters\&quot;:\&quot;(int x)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;x\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[7,4],[10,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[14,4],[37,5]]}]},\&quot;/src/begginerLvevelSecondHalf/AndPlusOr.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/AndPlusOr.java\&quot;,\&quot;file_name\&quot;:\&quot;AndPlusOr.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[16,5]]}]},\&quot;/src/begginerLvevelSecondHalf/AnotherCardGameProblem.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/AnotherCardGameProblem.java\&quot;,\&quot;file_name\&quot;:\&quot;AnotherCardGameProblem.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[24,5]]},{\&quot;method_name\&quot;:\&quot;calcGCD1\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n, int m)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;m\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[25,4],[30,7]]},{\&quot;method_name\&quot;:\&quot;calcGCD\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n, int m)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;m\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[31,4],[38,5]]}]},\&quot;/src/begginerLvevelSecondHalf/APFreeSequences.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/APFreeSequences.java\&quot;,\&quot;file_name\&quot;:\&quot;APFreeSequences.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[21,5]]}]},\&quot;/src/begginerLvevelSecondHalf/AppendFor.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/AppendFor.java\&quot;,\&quot;file_name\&quot;:\&quot;AppendFor.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[12,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ApplesAndOranges.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ApplesAndOranges.java\&quot;,\&quot;file_name\&quot;:\&quot;ApplesAndOranges.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[16,5]]},{\&quot;method_name\&quot;:\&quot;solve\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n, int m)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;m\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[17,4],[23,5]]}]},\&quot;/src/begginerLvevelSecondHalf/AProblemONSticks.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/AProblemONSticks.java\&quot;,\&quot;file_name\&quot;:\&quot;AProblemONSticks.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[9,4],[29,5]]}]},\&quot;/src/begginerLvevelSecondHalf/AsymmetricSwaps.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/AsymmetricSwaps.java\&quot;,\&quot;file_name\&quot;:\&quot;AsymmetricSwaps.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[23,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ATMMachine.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ATMMachine.java\&quot;,\&quot;file_name\&quot;:\&quot;ATMMachine.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[34,5]]}]},\&quot;/src/begginerLvevelSecondHalf/AverageNumber.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/AverageNumber.java\&quot;,\&quot;file_name\&quot;:\&quot;AverageNumber.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[15,5]]}]},\&quot;/src/begginerLvevelSecondHalf/AverageOfThree.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/AverageOfThree.java\&quot;,\&quot;file_name\&quot;:\&quot;AverageOfThree.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[12,5]]}]},\&quot;/src/begginerLvevelSecondHalf/BalancedReversal.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/BalancedReversal.java\&quot;,\&quot;file_name\&quot;:\&quot;BalancedReversal.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[32,5]]}]},\&quot;/src/begginerLvevelSecondHalf/BallonDOr.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/BallonDOr.java\&quot;,\&quot;file_name\&quot;:\&quot;BallonDOr.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[25,5]]}]},\&quot;/src/begginerLvevelSecondHalf/BearAndCandies123.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/BearAndCandies123.java\&quot;,\&quot;file_name\&quot;:\&quot;BearAndCandies123.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[29,5]]}]},\&quot;/src/begginerLvevelSecondHalf/BearAndSegment01.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/BearAndSegment01.java\&quot;,\&quot;file_name\&quot;:\&quot;BearAndSegment01.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[13,5]]},{\&quot;method_name\&quot;:\&quot;hasSingleSegmentOfOnes\&quot;,\&quot;method_parameters\&quot;:\&quot;(String S)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;S\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[14,4],[28,5]]}]},\&quot;/src/begginerLvevelSecondHalf/BiLindrome.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/BiLindrome.java\&quot;,\&quot;file_name\&quot;:\&quot;BiLindrome.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[15,5]]},{\&quot;method_name\&quot;:\&quot;solve\&quot;,\&quot;method_parameters\&quot;:\&quot;(String hatStack, String needle)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;hatStack\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;needle\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[17,4],[33,5]]},{\&quot;method_name\&quot;:\&quot;biLindrome\&quot;,\&quot;method_parameters\&quot;:\&quot;(String s, int n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;s\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[34,4],[45,5]]}]},\&quot;/src/begginerLvevelSecondHalf/BinaryStingCost.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/BinaryStingCost.java\&quot;,\&quot;file_name\&quot;:\&quot;BinaryStingCost.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[29,5]]}]},\&quot;/src/begginerLvevelSecondHalf/Brackets.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/Brackets.java\&quot;,\&quot;file_name\&quot;:\&quot;Brackets.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[32,5]]}]},\&quot;/src/begginerLvevelSecondHalf/BreakTheElements.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/BreakTheElements.java\&quot;,\&quot;file_name\&quot;:\&quot;BreakTheElements.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[26,5]]}]},\&quot;/src/begginerLvevelSecondHalf/BreakTheStick.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/BreakTheStick.java\&quot;,\&quot;file_name\&quot;:\&quot;BreakTheStick.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[18,5]]}]},\&quot;/src/begginerLvevelSecondHalf/BrokenTelephone.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/BrokenTelephone.java\&quot;,\&quot;file_name\&quot;:\&quot;BrokenTelephone.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[26,5]]}]},\&quot;/src/begginerLvevelSecondHalf/BuyingNewTablet.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/BuyingNewTablet.java\&quot;,\&quot;file_name\&quot;:\&quot;BuyingNewTablet.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[31,5]]}]},\&quot;/src/begginerLvevelSecondHalf/BuyingSweets.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/BuyingSweets.java\&quot;,\&quot;file_name\&quot;:\&quot;BuyingSweets.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[33,5]]}]},\&quot;/src/begginerLvevelSecondHalf/BuyOneGetOne.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/BuyOneGetOne.java\&quot;,\&quot;file_name\&quot;:\&quot;BuyOneGetOne.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[8,4],[33,5]]}]},\&quot;/src/begginerLvevelSecondHalf/CaesarCipher.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/CaesarCipher.java\&quot;,\&quot;file_name\&quot;:\&quot;CaesarCipher.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[15,5]]},{\&quot;method_name\&quot;:\&quot;convertString\&quot;,\&quot;method_parameters\&quot;:\&quot;(String str)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;str\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[16,4],[20,5]]}]},\&quot;/src/begginerLvevelSecondHalf/Candies.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/Candies.java\&quot;,\&quot;file_name\&quot;:\&quot;Candies.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[14,5]]}]},\&quot;/src/begginerLvevelSecondHalf/CandyLove.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/CandyLove.java\&quot;,\&quot;file_name\&quot;:\&quot;CandyLove.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[21,5]]}]},\&quot;/src/begginerLvevelSecondHalf/CardRemoval.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/CardRemoval.java\&quot;,\&quot;file_name\&quot;:\&quot;CardRemoval.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[9,4],[39,5]]}]},\&quot;/src/begginerLvevelSecondHalf/CardSwipe.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/CardSwipe.java\&quot;,\&quot;file_name\&quot;:\&quot;CardSwipe.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[25,5]]},{\&quot;method_name\&quot;:\&quot;maxAndMin\&quot;,\&quot;method_parameters\&quot;:\&quot;(int arr[])\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[26,4],[39,5]]},{\&quot;method_name\&quot;:\&quot;printUnorderPairs\&quot;,\&quot;method_parameters\&quot;:\&quot;(int arr[])\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[41,4],[47,5]]}]},\&quot;/src/begginerLvevelSecondHalf/CeilAndAMinusBProblem.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/CeilAndAMinusBProblem.java\&quot;,\&quot;file_name\&quot;:\&quot;CeilAndAMinusBProblem.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[14,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndCardGame.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndCardGame.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndCardGame.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[35,5]]},{\&quot;method_name\&quot;:\&quot;sumOfDigits\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[36,4],[44,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndColoring.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndColoring.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndColoring.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[30,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndCookOffContests.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndCookOffContests.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndCookOffContests.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[61,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndCoupon.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndCoupon.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndCoupon.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[36,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndDifficultContest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndDifficultContest.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndDifficultContest.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[17,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndDigitsOfANumber.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndDigitsOfANumber.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndDigitsOfANumber.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[24,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndDolls.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndDolls.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndDolls.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[23,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndEid.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndEid.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndEid.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[8,4],[29,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndEmploymentTest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndEmploymentTest.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndEmploymentTest.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[23,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndFeedback.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndFeedback.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndFeedback.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[23,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndFruits.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndFruits.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndFruits.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[19,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndGameWithSequence.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndGameWithSequence.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndGameWithSequence.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[23,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndGlove.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndGlove.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndGlove.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[32,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndGroups.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndGroups.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndGroups.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[27,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndHisApartmentDues.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndHisApartmentDues.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndHisApartmentDues.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[27,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndHisStudents.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndHisStudents.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndHisStudents.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[13,5]]},{\&quot;method_name\&quot;:\&quot;talkingStudents\&quot;,\&quot;method_parameters\&quot;:\&quot;(String s)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;s\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[14,4],[34,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndMean.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndMean.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndMean.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[14,5]]},{\&quot;method_name\&quot;:\&quot;search\&quot;,\&quot;method_parameters\&quot;:\&quot;(int []nums, int target)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;nums\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;target\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[15,4],[30,5]]},{\&quot;method_name\&quot;:\&quot;isPrime\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[31,4],[42,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndNumberGame.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndNumberGame.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndNumberGame.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[25,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndParty.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndParty.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndParty.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[28,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndServers.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndServers.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndServers.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[20,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndSteps.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndSteps.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndSteps.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[8,4],[30,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndString.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndString.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndString.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[42,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndStrings.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndStrings.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndStrings.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[25,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndStudent.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndStudent.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndStudent.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[19,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndSubarray.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndSubarray.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndSubarray.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[8,4],[63,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndSubarrays.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndSubarrays.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndSubarrays.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[31,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndTableTennis.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndTableTennis.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndTableTennis.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[26,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndTheWildCard.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndTheWildCard.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndTheWildCard.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[28,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndTwoStrings.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndTwoStrings.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndTwoStrings.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[14,5]]},{\&quot;method_name\&quot;:\&quot;chefAndTwoStrings\&quot;,\&quot;method_parameters\&quot;:\&quot;(String s1, String s2)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;s1\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;s2\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[15,4],[30,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefAndWork.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefAndWork.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefAndWork.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[34,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefDiet.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefDiet.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefDiet.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[32,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefInFantasyLeague.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefInFantasyLeague.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefInFantasyLeague.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[35,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefJumping.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefJumping.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefJumping.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[12,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChefVsDoof.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChefVsDoof.java\&quot;,\&quot;file_name\&quot;:\&quot;ChefVsDoof.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[26,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChnageIt.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChnageIt.java\&quot;,\&quot;file_name\&quot;:\&quot;ChnageIt.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[24,5]]}]},\&quot;/src/begginerLvevelSecondHalf/Chocolate.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/Chocolate.java\&quot;,\&quot;file_name\&quot;:\&quot;Chocolate.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[12,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChocolateDistribution.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChocolateDistribution.java\&quot;,\&quot;file_name\&quot;:\&quot;ChocolateDistribution.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[11,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ChristmasCandy.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ChristmasCandy.java\&quot;,\&quot;file_name\&quot;:\&quot;ChristmasCandy.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[25,5]]}]},\&quot;/src/begginerLvevelSecondHalf/CielAndA_BProblem.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/CielAndA_BProblem.java\&quot;,\&quot;file_name\&quot;:\&quot;CielAndA_BProblem.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[12,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ClosestVowels.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ClosestVowels.java\&quot;,\&quot;file_name\&quot;:\&quot;ClosestVowels.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[13,5]]},{\&quot;method_name\&quot;:\&quot;isVowel\&quot;,\&quot;method_parameters\&quot;:\&quot;(char ch)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;char\&quot;,\&quot;name\&quot;:\&quot;ch\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[14,4],[16,5]]}]},\&quot;/src/begginerLvevelSecondHalf/CodeChechStreak.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/CodeChechStreak.java\&quot;,\&quot;file_name\&quot;:\&quot;CodeChechStreak.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[56,5]]}]},\&quot;/src/begginerLvevelSecondHalf/CoinClip.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/CoinClip.java\&quot;,\&quot;file_name\&quot;:\&quot;CoinClip.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[17,5]]}]},\&quot;/src/begginerLvevelSecondHalf/CoinFlip.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/CoinFlip.java\&quot;,\&quot;file_name\&quot;:\&quot;CoinFlip.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[22,9]]}]},\&quot;/src/begginerLvevelSecondHalf/CoinsAndTriangle.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/CoinsAndTriangle.java\&quot;,\&quot;file_name\&quot;:\&quot;CoinsAndTriangle.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[22,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ConvertStringToNumber.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ConvertStringToNumber.java\&quot;,\&quot;file_name\&quot;:\&quot;ConvertStringToNumber.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[17,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ConvertToPermutation.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ConvertToPermutation.java\&quot;,\&quot;file_name\&quot;:\&quot;ConvertToPermutation.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[5,5]]}]},\&quot;/src/begginerLvevelSecondHalf/CooLName.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/CooLName.java\&quot;,\&quot;file_name\&quot;:\&quot;CooLName.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[19,5]]},{\&quot;method_name\&quot;:\&quot;solve\&quot;,\&quot;method_parameters\&quot;:\&quot;(int arr[])\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[21,4],[40,5]]},{\&quot;method_name\&quot;:\&quot;prefixSolve\&quot;,\&quot;method_parameters\&quot;:\&quot;(int arr[])\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[42,4],[61,5]]},{\&quot;method_name\&quot;:\&quot;prefixWithOptimizedCode\&quot;,\&quot;method_parameters\&quot;:\&quot;(int arr[])\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[63,4],[80,5]]},{\&quot;method_name\&quot;:\&quot;solve\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] A, int B)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;A\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;B\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[81,4],[95,5]]}]},\&quot;/src/begginerLvevelSecondHalf/CoronavirusSpread.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/CoronavirusSpread.java\&quot;,\&quot;file_name\&quot;:\&quot;CoronavirusSpread.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[31,5]]}]},\&quot;/src/begginerLvevelSecondHalf/CountingProblem.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/CountingProblem.java\&quot;,\&quot;file_name\&quot;:\&quot;CountingProblem.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[30,5]]}]},\&quot;/src/begginerLvevelSecondHalf/CountOfMaximum.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/CountOfMaximum.java\&quot;,\&quot;file_name\&quot;:\&quot;CountOfMaximum.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[8,4],[46,5]]}]},\&quot;/src/begginerLvevelSecondHalf/CountSubArrays.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/CountSubArrays.java\&quot;,\&quot;file_name\&quot;:\&quot;CountSubArrays.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[13,5]]}]},\&quot;/src/begginerLvevelSecondHalf/CovidAndTheatreTickets.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/CovidAndTheatreTickets.java\&quot;,\&quot;file_name\&quot;:\&quot;CovidAndTheatreTickets.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[28,5]]}]},\&quot;/src/begginerLvevelSecondHalf/CutTheBoard.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/CutTheBoard.java\&quot;,\&quot;file_name\&quot;:\&quot;CutTheBoard.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[15,5]]}]},\&quot;/src/begginerLvevelSecondHalf/DailyTrain.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/DailyTrain.java\&quot;,\&quot;file_name\&quot;:\&quot;DailyTrain.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[10,5]]}]},\&quot;/src/begginerLvevelSecondHalf/DannyWantsToKnow.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/DannyWantsToKnow.java\&quot;,\&quot;file_name\&quot;:\&quot;DannyWantsToKnow.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[29,5]]}]},\&quot;/src/begginerLvevelSecondHalf/DaysInMonth.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/DaysInMonth.java\&quot;,\&quot;file_name\&quot;:\&quot;DaysInMonth.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[35,5]]},{\&quot;method_name\&quot;:\&quot;toLowerCase\&quot;,\&quot;method_parameters\&quot;:\&quot;(String str)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;str\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[37,4],[50,5]]},{\&quot;method_name\&quot;:\&quot;isPerfectSquare\&quot;,\&quot;method_parameters\&quot;:\&quot;(long n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;long\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[51,4],[66,5]]}]},\&quot;/src/begginerLvevelSecondHalf/DecoratingChristmasTree.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/DecoratingChristmasTree.java\&quot;,\&quot;file_name\&quot;:\&quot;DecoratingChristmasTree.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[19,5]]}]},\&quot;/src/begginerLvevelSecondHalf/DevuAndArray.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/DevuAndArray.java\&quot;,\&quot;file_name\&quot;:\&quot;DevuAndArray.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[32,5]]}]},\&quot;/src/begginerLvevelSecondHalf/DiagonalMovement.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/DiagonalMovement.java\&quot;,\&quot;file_name\&quot;:\&quot;DiagonalMovement.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[17,5]]}]},\&quot;/src/begginerLvevelSecondHalf/DiceDeception.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/DiceDeception.java\&quot;,\&quot;file_name\&quot;:\&quot;DiceDeception.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[19,5]]},{\&quot;method_name\&quot;:\&quot;maximizeDiceSum\&quot;,\&quot;method_parameters\&quot;:\&quot;(int N, int K, int[] dice)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;N\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;K\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;dice\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[20,4],[42,5]]}]},\&quot;/src/begginerLvevelSecondHalf/DifficultyRatingOrder.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/DifficultyRatingOrder.java\&quot;,\&quot;file_name\&quot;:\&quot;DifficultyRatingOrder.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[29,5]]}]},\&quot;/src/begginerLvevelSecondHalf/DigitSemParties.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/DigitSemParties.java\&quot;,\&quot;file_name\&quot;:\&quot;DigitSemParties.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[11,5]]}]},\&quot;/src/begginerLvevelSecondHalf/DigitsSumParities.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/DigitsSumParities.java\&quot;,\&quot;file_name\&quot;:\&quot;DigitsSumParities.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[19,5]]},{\&quot;method_name\&quot;:\&quot;solve\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[20,4],[27,5]]}]},\&quot;/src/begginerLvevelSecondHalf/DisabledKing.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/DisabledKing.java\&quot;,\&quot;file_name\&quot;:\&quot;DisabledKing.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[15,5]]}]},\&quot;/src/begginerLvevelSecondHalf/DiscrepanciesInTheVotersList.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/DiscrepanciesInTheVotersList.java\&quot;,\&quot;file_name\&quot;:\&quot;DiscrepanciesInTheVotersList.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[29,5]]}]},\&quot;/src/begginerLvevelSecondHalf/DistinctCodes.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/DistinctCodes.java\&quot;,\&quot;file_name\&quot;:\&quot;DistinctCodes.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[8,4],[20,5]]},{\&quot;method_name\&quot;:\&quot;stringConcatenation\&quot;,\&quot;method_parameters\&quot;:\&quot;(String num1, String num2)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;num1\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;num2\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[21,4],[26,1]]},{\&quot;method_name\&quot;:\&quot;stringConcatenation1\&quot;,\&quot;method_parameters\&quot;:\&quot;(String num1, String num2)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;num1\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;num2\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[27,4],[43,5]]}]},\&quot;/src/begginerLvevelSecondHalf/DistinctOppositeSums.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/DistinctOppositeSums.java\&quot;,\&quot;file_name\&quot;:\&quot;DistinctOppositeSums.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[23,5]]}]},\&quot;/src/begginerLvevelSecondHalf/DividingStamps.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/DividingStamps.java\&quot;,\&quot;file_name\&quot;:\&quot;DividingStamps.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[21,5]]}]},\&quot;/src/begginerLvevelSecondHalf/DivisibleByI.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/DivisibleByI.java\&quot;,\&quot;file_name\&quot;:\&quot;DivisibleByI.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[13,5]]}]},\&quot;/src/begginerLvevelSecondHalf/DominantElement.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/DominantElement.java\&quot;,\&quot;file_name\&quot;:\&quot;DominantElement.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[38,5]]},{\&quot;method_name\&quot;:\&quot;isDominantElement\&quot;,\&quot;method_parameters\&quot;:\&quot;(int element[])\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;element\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[39,4],[51,5]]}]},\&quot;/src/begginerLvevelSecondHalf/DotifyPlaylist.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/DotifyPlaylist.java\&quot;,\&quot;file_name\&quot;:\&quot;DotifyPlaylist.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[14,5]]}]},\&quot;/src/begginerLvevelSecondHalf/DoubledDistance.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/DoubledDistance.java\&quot;,\&quot;file_name\&quot;:\&quot;DoubledDistance.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[27,5]]},{\&quot;method_name\&quot;:\&quot;canBeReordered\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[28,4],[44,5]]}]},\&quot;/src/begginerLvevelSecondHalf/DoubleStrings.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/DoubleStrings.java\&quot;,\&quot;file_name\&quot;:\&quot;DoubleStrings.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[15,5]]}]},\&quot;/src/begginerLvevelSecondHalf/DownloadFile.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/DownloadFile.java\&quot;,\&quot;file_name\&quot;:\&quot;DownloadFile.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[35,5]]}]},\&quot;/src/begginerLvevelSecondHalf/DrumpForPresident.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/DrumpForPresident.java\&quot;,\&quot;file_name\&quot;:\&quot;DrumpForPresident.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[26,5]]}]},\&quot;/src/begginerLvevelSecondHalf/EasyMath.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/EasyMath.java\&quot;,\&quot;file_name\&quot;:\&quot;EasyMath.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[26,5]]},{\&quot;method_name\&quot;:\&quot;solve\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[27,4],[34,5]]}]},\&quot;/src/begginerLvevelSecondHalf/EasyPermutation.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/EasyPermutation.java\&quot;,\&quot;file_name\&quot;:\&quot;EasyPermutation.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[16,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ElectionsInChefland.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ElectionsInChefland.java\&quot;,\&quot;file_name\&quot;:\&quot;ElectionsInChefland.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[22,5]]}]},\&quot;/src/begginerLvevelSecondHalf/EndSorted.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/EndSorted.java\&quot;,\&quot;file_name\&quot;:\&quot;EndSorted.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[31,5]]}]},\&quot;/src/begginerLvevelSecondHalf/EqualCardGame.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/EqualCardGame.java\&quot;,\&quot;file_name\&quot;:\&quot;EqualCardGame.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[15,5]]}]},\&quot;/src/begginerLvevelSecondHalf/EqualCoins.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/EqualCoins.java\&quot;,\&quot;file_name\&quot;:\&quot;EqualCoins.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[18,5]]}]},\&quot;/src/begginerLvevelSecondHalf/EqualElements.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/EqualElements.java\&quot;,\&quot;file_name\&quot;:\&quot;EqualElements.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[9,4],[29,5]]}]},\&quot;/src/begginerLvevelSecondHalf/EqualizeAB.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/EqualizeAB.java\&quot;,\&quot;file_name\&quot;:\&quot;EqualizeAB.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[19,5]]}]},\&quot;/src/begginerLvevelSecondHalf/EqualString.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/EqualString.java\&quot;,\&quot;file_name\&quot;:\&quot;EqualString.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[16,5]]}]},\&quot;/src/begginerLvevelSecondHalf/EqualStrings.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/EqualStrings.java\&quot;,\&quot;file_name\&quot;:\&quot;EqualStrings.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[26,5]]}]},\&quot;/src/begginerLvevelSecondHalf/EvenPairSum.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/EvenPairSum.java\&quot;,\&quot;file_name\&quot;:\&quot;EvenPairSum.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[17,5]]},{\&quot;method_name\&quot;:\&quot;romanToInt\&quot;,\&quot;method_parameters\&quot;:\&quot;(String s)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;s\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[18,4],[41,5]]}]},\&quot;/src/begginerLvevelSecondHalf/EvenSumSubArray.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/EvenSumSubArray.java\&quot;,\&quot;file_name\&quot;:\&quot;EvenSumSubArray.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[17,5]]},{\&quot;method_name\&quot;:\&quot;isValid\&quot;,\&quot;method_parameters\&quot;:\&quot;(String s)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;s\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[19,4],[27,5]]}]},\&quot;/src/begginerLvevelSecondHalf/EvenSumSubArrayTwo.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/EvenSumSubArrayTwo.java\&quot;,\&quot;file_name\&quot;:\&quot;EvenSumSubArrayTwo.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[30,5]]}]},\&quot;/src/begginerLvevelSecondHalf/EVMHacking.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/EVMHacking.java\&quot;,\&quot;file_name\&quot;:\&quot;EVMHacking.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[30,5]]}]},\&quot;/src/begginerLvevelSecondHalf/FakeCertificate.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/FakeCertificate.java\&quot;,\&quot;file_name\&quot;:\&quot;FakeCertificate.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[28,5]]}]},\&quot;/src/begginerLvevelSecondHalf/FarAway.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/FarAway.java\&quot;,\&quot;file_name\&quot;:\&quot;FarAway.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[22,5]]}]},\&quot;/src/begginerLvevelSecondHalf/FarmerFeb.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/FarmerFeb.java\&quot;,\&quot;file_name\&quot;:\&quot;FarmerFeb.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[36,5]]}]},\&quot;/src/begginerLvevelSecondHalf/FinalSum.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/FinalSum.java\&quot;,\&quot;file_name\&quot;:\&quot;FinalSum.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[31,5]]}]},\&quot;/src/begginerLvevelSecondHalf/FitInDataType.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/FitInDataType.java\&quot;,\&quot;file_name\&quot;:\&quot;FitInDataType.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[16,5]]}]},\&quot;/src/begginerLvevelSecondHalf/FlatLand.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/FlatLand.java\&quot;,\&quot;file_name\&quot;:\&quot;FlatLand.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[14,5]]},{\&quot;method_name\&quot;:\&quot;countSquares\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[15,4],[27,5]]}]},\&quot;/src/begginerLvevelSecondHalf/FoodChain.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/FoodChain.java\&quot;,\&quot;file_name\&quot;:\&quot;FoodChain.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[19,5]]}]},\&quot;/src/begginerLvevelSecondHalf/Football.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/Football.java\&quot;,\&quot;file_name\&quot;:\&quot;Football.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[29,5]]}]},\&quot;/src/begginerLvevelSecondHalf/FriendsMeetup.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/FriendsMeetup.java\&quot;,\&quot;file_name\&quot;:\&quot;FriendsMeetup.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[19,5]]}]},\&quot;/src/begginerLvevelSecondHalf/FromHeavenToEarth.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/FromHeavenToEarth.java\&quot;,\&quot;file_name\&quot;:\&quot;FromHeavenToEarth.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[36,5]]}]},\&quot;/src/begginerLvevelSecondHalf/GameOfPileVersion1.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/GameOfPileVersion1.java\&quot;,\&quot;file_name\&quot;:\&quot;GameOfPileVersion1.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[29,5]]}]},\&quot;/src/begginerLvevelSecondHalf/GameOfPooks.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/GameOfPooks.java\&quot;,\&quot;file_name\&quot;:\&quot;GameOfPooks.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[18,5]]}]},\&quot;/src/begginerLvevelSecondHalf/GoodJoke.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/GoodJoke.java\&quot;,\&quot;file_name\&quot;:\&quot;GoodJoke.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[24,5]]},{\&quot;method_name\&quot;:\&quot;enterLimit_Price\&quot;,\&quot;method_parameters\&quot;:\&quot;(String limit)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;limit\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[25,4],[27,5]]}]},\&quot;/src/begginerLvevelSecondHalf/GroupAsssignment.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/GroupAsssignment.java\&quot;,\&quot;file_name\&quot;:\&quot;GroupAsssignment.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[36,9]]}]},\&quot;/src/begginerLvevelSecondHalf/gvbfx.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/gvbfx.java\&quot;,\&quot;file_name\&quot;:\&quot;gvbfx.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/begginerLvevelSecondHalf/HolesInTheText.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/HolesInTheText.java\&quot;,\&quot;file_name\&quot;:\&quot;HolesInTheText.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[22,5]]}]},\&quot;/src/begginerLvevelSecondHalf/HostelRoom.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/HostelRoom.java\&quot;,\&quot;file_name\&quot;:\&quot;HostelRoom.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[42,5]]},{\&quot;method_name\&quot;:\&quot;adjcentEdge\&quot;,\&quot;method_parameters\&quot;:\&quot;(Scanner sc, int n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Scanner\&quot;,\&quot;name\&quot;:\&quot;sc\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[44,4],[63,5]]}]},\&quot;/src/begginerLvevelSecondHalf/HowManyMaximums.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/HowManyMaximums.java\&quot;,\&quot;file_name\&quot;:\&quot;HowManyMaximums.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[26,5]]}]},\&quot;/src/begginerLvevelSecondHalf/HowMuchScholarship.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/HowMuchScholarship.java\&quot;,\&quot;file_name\&quot;:\&quot;HowMuchScholarship.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[16,5]]}]},\&quot;/src/begginerLvevelSecondHalf/HungryChef.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/HungryChef.java\&quot;,\&quot;file_name\&quot;:\&quot;HungryChef.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[23,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ImmortalFrieza.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ImmortalFrieza.java\&quot;,\&quot;file_name\&quot;:\&quot;ImmortalFrieza.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[36,5]]},{\&quot;method_name\&quot;:\&quot;isFrieza\&quot;,\&quot;method_parameters\&quot;:\&quot;(char c)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;char\&quot;,\&quot;name\&quot;:\&quot;c\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[38,4],[47,5]]}]},\&quot;/src/begginerLvevelSecondHalf/Infernos.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/Infernos.java\&quot;,\&quot;file_name\&quot;:\&quot;Infernos.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[31,5]]}]},\&quot;/src/begginerLvevelSecondHalf/IPLAndRCB.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/IPLAndRCB.java\&quot;,\&quot;file_name\&quot;:\&quot;IPLAndRCB.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[21,5]]}]},\&quot;/src/begginerLvevelSecondHalf/JoinStates.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/JoinStates.java\&quot;,\&quot;file_name\&quot;:\&quot;JoinStates.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[27,5]]}]},\&quot;/src/begginerLvevelSecondHalf/JourneyOfTheKnight.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/JourneyOfTheKnight.java\&quot;,\&quot;file_name\&quot;:\&quot;JourneyOfTheKnight.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[20,5]]}]},\&quot;/src/begginerLvevelSecondHalf/JumpingInTheHills.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/JumpingInTheHills.java\&quot;,\&quot;file_name\&quot;:\&quot;JumpingInTheHills.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[43,5]]}]},\&quot;/src/begginerLvevelSecondHalf/JustLikeMob.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/JustLikeMob.java\&quot;,\&quot;file_name\&quot;:\&quot;JustLikeMob.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[21,5]]},{\&quot;method_name\&quot;:\&quot;pairSum\&quot;,\&quot;method_parameters\&quot;:\&quot;(int [] arr, int s)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;s\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[22,4],[36,5]]}]},\&quot;/src/begginerLvevelSecondHalf/Laddu.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/Laddu.java\&quot;,\&quot;file_name\&quot;:\&quot;Laddu.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[5,5]]}]},\&quot;/src/begginerLvevelSecondHalf/Lapindromes.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/Lapindromes.java\&quot;,\&quot;file_name\&quot;:\&quot;Lapindromes.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[34,5]]},{\&quot;method_name\&quot;:\&quot;absDiff\&quot;,\&quot;method_parameters\&quot;:\&quot;(ArrayList\\u003cInteger\\u003e arr, int n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[36,4],[49,5]]}]},\&quot;/src/begginerLvevelSecondHalf/LaptopRecommendation.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/LaptopRecommendation.java\&quot;,\&quot;file_name\&quot;:\&quot;LaptopRecommendation.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[9,4],[45,5]]}]},\&quot;/src/begginerLvevelSecondHalf/LargerSquare.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/LargerSquare.java\&quot;,\&quot;file_name\&quot;:\&quot;LargerSquare.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[16,5]]}]},\&quot;/src/begginerLvevelSecondHalf/LargestAndSecondLargest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/LargestAndSecondLargest.java\&quot;,\&quot;file_name\&quot;:\&quot;LargestAndSecondLargest.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[28,5]]}]},\&quot;/src/begginerLvevelSecondHalf/LargestK.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/LargestK.java\&quot;,\&quot;file_name\&quot;:\&quot;LargestK.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[14,5]]}]},\&quot;/src/begginerLvevelSecondHalf/LazyJem.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/LazyJem.java\&quot;,\&quot;file_name\&quot;:\&quot;LazyJem.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[30,9]]}]},\&quot;/src/begginerLvevelSecondHalf/LegsOnAFarm.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/LegsOnAFarm.java\&quot;,\&quot;file_name\&quot;:\&quot;LegsOnAFarm.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[18,5]]}]},\&quot;/src/begginerLvevelSecondHalf/LittleElephantAndCandies.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/LittleElephantAndCandies.java\&quot;,\&quot;file_name\&quot;:\&quot;LittleElephantAndCandies.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[24,5]]}]},\&quot;/src/begginerLvevelSecondHalf/LittleElephantAndStrings.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/LittleElephantAndStrings.java\&quot;,\&quot;file_name\&quot;:\&quot;LittleElephantAndStrings.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[32,5]]}]},\&quot;/src/begginerLvevelSecondHalf/LostWEekends.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/LostWEekends.java\&quot;,\&quot;file_name\&quot;:\&quot;LostWEekends.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[28,5]]}]},\&quot;/src/begginerLvevelSecondHalf/LuckBoundries.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/LuckBoundries.java\&quot;,\&quot;file_name\&quot;:\&quot;LuckBoundries.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[22,5]]}]},\&quot;/src/begginerLvevelSecondHalf/LuigiAndUniformity.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/LuigiAndUniformity.java\&quot;,\&quot;file_name\&quot;:\&quot;LuigiAndUniformity.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[9,4],[31,5]]},{\&quot;method_name\&quot;:\&quot;gcd\&quot;,\&quot;method_parameters\&quot;:\&quot;(int a, int b)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;a\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;b\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[33,4],[40,5]]}]},\&quot;/src/begginerLvevelSecondHalf/MagicianVersusChef.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/MagicianVersusChef.java\&quot;,\&quot;file_name\&quot;:\&quot;MagicianVersusChef.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[26,5]]}]},\&quot;/src/begginerLvevelSecondHalf/MagicWorld.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/MagicWorld.java\&quot;,\&quot;file_name\&quot;:\&quot;MagicWorld.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[22,5]]}]},\&quot;/src/begginerLvevelSecondHalf/MakeBobWin.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/MakeBobWin.java\&quot;,\&quot;file_name\&quot;:\&quot;MakeBobWin.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[11,5]]}]},\&quot;/src/begginerLvevelSecondHalf/MakeMoney.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/MakeMoney.java\&quot;,\&quot;file_name\&quot;:\&quot;MakeMoney.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[32,5]]}]},\&quot;/src/begginerLvevelSecondHalf/MakeMultiple.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/MakeMultiple.java\&quot;,\&quot;file_name\&quot;:\&quot;MakeMultiple.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[18,5]]}]},\&quot;/src/begginerLvevelSecondHalf/MakingAMeal.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/MakingAMeal.java\&quot;,\&quot;file_name\&quot;:\&quot;MakingAMeal.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[11,4],[72,9]]}]},\&quot;/src/begginerLvevelSecondHalf/MaskPolicy.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/MaskPolicy.java\&quot;,\&quot;file_name\&quot;:\&quot;MaskPolicy.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[14,5]]}]},\&quot;/src/begginerLvevelSecondHalf/MathisonAndPangrams.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/MathisonAndPangrams.java\&quot;,\&quot;file_name\&quot;:\&quot;MathisonAndPangrams.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[22,5]]}]},\&quot;/src/begginerLvevelSecondHalf/MaxBinary.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/MaxBinary.java\&quot;,\&quot;file_name\&quot;:\&quot;MaxBinary.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[28,9]]}]},\&quot;/src/begginerLvevelSecondHalf/MaximiseAdjacentSum.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/MaximiseAdjacentSum.java\&quot;,\&quot;file_name\&quot;:\&quot;MaximiseAdjacentSum.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[27,5]]}]},\&quot;/src/begginerLvevelSecondHalf/MaximiseXOR.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/MaximiseXOR.java\&quot;,\&quot;file_name\&quot;:\&quot;MaximiseXOR.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[37,5]]}]},\&quot;/src/begginerLvevelSecondHalf/MaximumAlternatingSum.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/MaximumAlternatingSum.java\&quot;,\&quot;file_name\&quot;:\&quot;MaximumAlternatingSum.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[27,5]]}]},\&quot;/src/begginerLvevelSecondHalf/MaximumRemaining.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/MaximumRemaining.java\&quot;,\&quot;file_name\&quot;:\&quot;MaximumRemaining.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[26,5]]},{\&quot;method_name\&quot;:\&quot;secondLargestElement\&quot;,\&quot;method_parameters\&quot;:\&quot;(int arr[])\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[27,4],[39,5]]}]},\&quot;/src/begginerLvevelSecondHalf/MaximumScore.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/MaximumScore.java\&quot;,\&quot;file_name\&quot;:\&quot;MaximumScore.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[26,5]]}]},\&quot;/src/begginerLvevelSecondHalf/MaxNutrition.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/MaxNutrition.java\&quot;,\&quot;file_name\&quot;:\&quot;MaxNutrition.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[22,5]]},{\&quot;method_name\&quot;:\&quot;maxNutrition\&quot;,\&quot;method_parameters\&quot;:\&quot;(int typeFruits[], int nutritionValues[])\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;typeFruits\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;nutritionValues\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[23,4],[41,5]]}]},\&quot;/src/begginerLvevelSecondHalf/Medel.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/Medel.java\&quot;,\&quot;file_name\&quot;:\&quot;Medel.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[36,5]]}]},\&quot;/src/begginerLvevelSecondHalf/MinimumAttendanceRequirement.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/MinimumAttendanceRequirement.java\&quot;,\&quot;file_name\&quot;:\&quot;MinimumAttendanceRequirement.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[25,5]]}]},\&quot;/src/begginerLvevelSecondHalf/MinimumORMaximum.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/MinimumORMaximum.java\&quot;,\&quot;file_name\&quot;:\&quot;MinimumORMaximum.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[35,5]]}]},\&quot;/src/begginerLvevelSecondHalf/MiniumumXOR.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/MiniumumXOR.java\&quot;,\&quot;file_name\&quot;:\&quot;MiniumumXOR.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[26,5]]}]},\&quot;/src/begginerLvevelSecondHalf/MixingExtraordinaire.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/MixingExtraordinaire.java\&quot;,\&quot;file_name\&quot;:\&quot;MixingExtraordinaire.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[24,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ModeOfFrequencies.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ModeOfFrequencies.java\&quot;,\&quot;file_name\&quot;:\&quot;ModeOfFrequencies.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[23,5]]},{\&quot;method_name\&quot;:\&quot;longestSubarrayWithSumK\&quot;,\&quot;method_parameters\&quot;:\&quot;(int []a, long k)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;a\&quot;},{\&quot;type\&quot;:\&quot;long\&quot;,\&quot;name\&quot;:\&quot;k\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[24,4],[41,5]]}]},\&quot;/src/begginerLvevelSecondHalf/MovieWeekend.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/MovieWeekend.java\&quot;,\&quot;file_name\&quot;:\&quot;MovieWeekend.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[8,4],[35,5]]},{\&quot;method_name\&quot;:\&quot;hasArrayTwoCandidates\&quot;,\&quot;method_parameters\&quot;:\&quot;(int arr[], int n, int x)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;x\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[37,4],[52,5]]},{\&quot;method_name\&quot;:\&quot;hasArrayTwoCandidates1\&quot;,\&quot;method_parameters\&quot;:\&quot;(int arr[], int n, int x)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;x\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[54,1],[65,5]]}]},\&quot;/src/begginerLvevelSecondHalf/MultipleChoseExam.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/MultipleChoseExam.java\&quot;,\&quot;file_name\&quot;:\&quot;MultipleChoseExam.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[24,5]]}]},\&quot;/src/begginerLvevelSecondHalf/NewPiece.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/NewPiece.java\&quot;,\&quot;file_name\&quot;:\&quot;NewPiece.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[21,5]]}]},\&quot;/src/begginerLvevelSecondHalf/NonAdjacentflips.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/NonAdjacentflips.java\&quot;,\&quot;file_name\&quot;:\&quot;NonAdjacentflips.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[15,5]]},{\&quot;method_name\&quot;:\&quot;numOFflips\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n, String s)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;s\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[16,4],[33,5]]}]},\&quot;/src/begginerLvevelSecondHalf/NQueensPuzzleSolved.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/NQueensPuzzleSolved.java\&quot;,\&quot;file_name\&quot;:\&quot;NQueensPuzzleSolved.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[15,5]]}]},\&quot;/src/begginerLvevelSecondHalf/OddEvenBinaryString.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/OddEvenBinaryString.java\&quot;,\&quot;file_name\&quot;:\&quot;OddEvenBinaryString.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[22,5]]}]},\&quot;/src/begginerLvevelSecondHalf/OddGCDPermutation.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/OddGCDPermutation.java\&quot;,\&quot;file_name\&quot;:\&quot;OddGCDPermutation.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[20,5]]}]},\&quot;/src/begginerLvevelSecondHalf/OddPairs.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/OddPairs.java\&quot;,\&quot;file_name\&quot;:\&quot;OddPairs.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[14,5]]},{\&quot;method_name\&quot;:\&quot;checkPerfectNumber\&quot;,\&quot;method_parameters\&quot;:\&quot;(int num)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;num\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[15,4],[31,5]]}]},\&quot;/src/begginerLvevelSecondHalf/OddRepeat.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/OddRepeat.java\&quot;,\&quot;file_name\&quot;:\&quot;OddRepeat.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[25,5]]}]},\&quot;/src/begginerLvevelSecondHalf/OnlyPluses.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/OnlyPluses.java\&quot;,\&quot;file_name\&quot;:\&quot;OnlyPluses.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[17,5]]},{\&quot;method_name\&quot;:\&quot;isSubstring\&quot;,\&quot;method_parameters\&quot;:\&quot;(String str1, String str2)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;str1\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;str2\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[18,4],[35,5]]}]},\&quot;/src/begginerLvevelSecondHalf/OrPermutation.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/OrPermutation.java\&quot;,\&quot;file_name\&quot;:\&quot;OrPermutation.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[15,5]]}]},\&quot;/src/begginerLvevelSecondHalf/PackagingCupcakes.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/PackagingCupcakes.java\&quot;,\&quot;file_name\&quot;:\&quot;PackagingCupcakes.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[13,5]]}]},\&quot;/src/begginerLvevelSecondHalf/PalindromeFlipping.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/PalindromeFlipping.java\&quot;,\&quot;file_name\&quot;:\&quot;PalindromeFlipping.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[30,5]]},{\&quot;method_name\&quot;:\&quot;isReversed\&quot;,\&quot;method_parameters\&quot;:\&quot;(String s)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;s\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[32,4],[45,5]]},{\&quot;method_name\&quot;:\&quot;reverseString\&quot;,\&quot;method_parameters\&quot;:\&quot;(String s)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;s\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[47,4],[54,5]]},{\&quot;method_name\&quot;:\&quot;reverseStringStack\&quot;,\&quot;method_parameters\&quot;:\&quot;(String s)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;s\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[56,4],[69,5]]}]},\&quot;/src/begginerLvevelSecondHalf/PalindromicSubstrings.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/PalindromicSubstrings.java\&quot;,\&quot;file_name\&quot;:\&quot;PalindromicSubstrings.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[34,5]]}]},\&quot;/src/begginerLvevelSecondHalf/Password.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/Password.java\&quot;,\&quot;file_name\&quot;:\&quot;Password.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[17,5]]},{\&quot;method_name\&quot;:\&quot;isSecure\&quot;,\&quot;method_parameters\&quot;:\&quot;(String str)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;str\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[19,4],[44,9]]}]},\&quot;/src/begginerLvevelSecondHalf/PathParity.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/PathParity.java\&quot;,\&quot;file_name\&quot;:\&quot;PathParity.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[14,5]]}]},\&quot;/src/begginerLvevelSecondHalf/PathParty.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/PathParty.java\&quot;,\&quot;file_name\&quot;:\&quot;PathParty.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[19,5]]}]},\&quot;/src/begginerLvevelSecondHalf/PeakFinding.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/PeakFinding.java\&quot;,\&quot;file_name\&quot;:\&quot;PeakFinding.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[22,5]]}]},\&quot;/src/begginerLvevelSecondHalf/PermutationAndModulus.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/PermutationAndModulus.java\&quot;,\&quot;file_name\&quot;:\&quot;PermutationAndModulus.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[5,5]]}]},\&quot;/src/begginerLvevelSecondHalf/PetStore.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/PetStore.java\&quot;,\&quot;file_name\&quot;:\&quot;PetStore.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[30,5]]}]},\&quot;/src/begginerLvevelSecondHalf/PieceOfCake.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/PieceOfCake.java\&quot;,\&quot;file_name\&quot;:\&quot;PieceOfCake.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[8,4],[35,5]]}]},\&quot;/src/begginerLvevelSecondHalf/PieceOfCake1.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/PieceOfCake1.java\&quot;,\&quot;file_name\&quot;:\&quot;PieceOfCake1.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[27,5]]}]},\&quot;/src/begginerLvevelSecondHalf/PingPajaPong.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/PingPajaPong.java\&quot;,\&quot;file_name\&quot;:\&quot;PingPajaPong.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[19,5]]}]},\&quot;/src/begginerLvevelSecondHalf/PlayingWithStrings.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/PlayingWithStrings.java\&quot;,\&quot;file_name\&quot;:\&quot;PlayingWithStrings.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[31,5]]}]},\&quot;/src/begginerLvevelSecondHalf/PlusTwoORMinusOne.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/PlusTwoORMinusOne.java\&quot;,\&quot;file_name\&quot;:\&quot;PlusTwoORMinusOne.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[16,5]]}]},\&quot;/src/begginerLvevelSecondHalf/PositiveProducts.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/PositiveProducts.java\&quot;,\&quot;file_name\&quot;:\&quot;PositiveProducts.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[36,5]]},{\&quot;method_name\&quot;:\&quot;reversed\&quot;,\&quot;method_parameters\&quot;:\&quot;(int arr[])\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[37,4],[48,5]]}]},\&quot;/src/begginerLvevelSecondHalf/PoweredParameters.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/PoweredParameters.java\&quot;,\&quot;file_name\&quot;:\&quot;PoweredParameters.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[34,5]]}]},\&quot;/src/begginerLvevelSecondHalf/PrimeGenerator.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/PrimeGenerator.java\&quot;,\&quot;file_name\&quot;:\&quot;PrimeGenerator.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[23,10]]},{\&quot;method_name\&quot;:\&quot;solve\&quot;,\&quot;method_parameters\&quot;:\&quot;(int []arr, int x)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;x\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[25,4],[39,5]]}]},\&quot;/src/begginerLvevelSecondHalf/PrimeReversal.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/PrimeReversal.java\&quot;,\&quot;file_name\&quot;:\&quot;PrimeReversal.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[33,5]]}]},\&quot;/src/begginerLvevelSecondHalf/PrintingBinaryArray.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/PrintingBinaryArray.java\&quot;,\&quot;file_name\&quot;:\&quot;PrintingBinaryArray.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[21,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ProcessingAString.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ProcessingAString.java\&quot;,\&quot;file_name\&quot;:\&quot;ProcessingAString.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[19,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ProgramYourOwnCalculator.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ProgramYourOwnCalculator.java\&quot;,\&quot;file_name\&quot;:\&quot;ProgramYourOwnCalculator.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[14,9]]},{\&quot;method_name\&quot;:\&quot;solve\&quot;,\&quot;method_parameters\&quot;:\&quot;(double x, double y, char c)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;x\&quot;},{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;y\&quot;},{\&quot;type\&quot;:\&quot;char\&quot;,\&quot;name\&quot;:\&quot;c\&quot;}],\&quot;return_type\&quot;:\&quot;double\&quot;,\&quot;scope\&quot;:[[16,4],[36,5]]}]},\&quot;/src/begginerLvevelSecondHalf/RandomPair.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/RandomPair.java\&quot;,\&quot;file_name\&quot;:\&quot;RandomPair.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[15,5]]},{\&quot;method_name\&quot;:\&quot;targetElement\&quot;,\&quot;method_parameters\&quot;:\&quot;(int arr[], int k)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;k\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[17,4],[28,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ReachCodetown.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ReachCodetown.java\&quot;,\&quot;file_name\&quot;:\&quot;ReachCodetown.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[24,5]]}]},\&quot;/src/begginerLvevelSecondHalf/Rectangle.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/Rectangle.java\&quot;,\&quot;file_name\&quot;:\&quot;Rectangle.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[16,5]]}]},\&quot;/src/begginerLvevelSecondHalf/RemoveBadElements.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/RemoveBadElements.java\&quot;,\&quot;file_name\&quot;:\&quot;RemoveBadElements.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[31,5]]}]},\&quot;/src/begginerLvevelSecondHalf/RetangularTiling.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/RetangularTiling.java\&quot;,\&quot;file_name\&quot;:\&quot;RetangularTiling.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[19,5]]},{\&quot;method_name\&quot;:\&quot;hasSubstring\&quot;,\&quot;method_parameters\&quot;:\&quot;(String text, String pattern)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;text\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;pattern\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[20,4],[38,5]]}]},\&quot;/src/begginerLvevelSecondHalf/RetrieveTheArray.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/RetrieveTheArray.java\&quot;,\&quot;file_name\&quot;:\&quot;RetrieveTheArray.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[25,5]]}]},\&quot;/src/begginerLvevelSecondHalf/RockPaperScissor.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/RockPaperScissor.java\&quot;,\&quot;file_name\&quot;:\&quot;RockPaperScissor.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[55,5]]}]},\&quot;/src/begginerLvevelSecondHalf/RockPaperScissors.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/RockPaperScissors.java\&quot;,\&quot;file_name\&quot;:\&quot;RockPaperScissors.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[20,5]]}]},\&quot;/src/begginerLvevelSecondHalf/Sale.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/Sale.java\&quot;,\&quot;file_name\&quot;:\&quot;Sale.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[29,5]]}]},\&quot;/src/begginerLvevelSecondHalf/SartjakAndHisMagicGrid.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/SartjakAndHisMagicGrid.java\&quot;,\&quot;file_name\&quot;:\&quot;SartjakAndHisMagicGrid.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[18,5]]}]},\&quot;/src/begginerLvevelSecondHalf/SignMoves.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/SignMoves.java\&quot;,\&quot;file_name\&quot;:\&quot;SignMoves.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[17,5]]}]},\&quot;/src/begginerLvevelSecondHalf/SimilarDishes.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/SimilarDishes.java\&quot;,\&quot;file_name\&quot;:\&quot;SimilarDishes.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[33,5]]}]},\&quot;/src/begginerLvevelSecondHalf/SingleOperationPart1.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/SingleOperationPart1.java\&quot;,\&quot;file_name\&quot;:\&quot;SingleOperationPart1.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[16,5]]},{\&quot;method_name\&quot;:\&quot;reverseString\&quot;,\&quot;method_parameters\&quot;:\&quot;(char[] s)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;s\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[18,4],[29,5]]}]},\&quot;/src/begginerLvevelSecondHalf/SlowSolution.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/SlowSolution.java\&quot;,\&quot;file_name\&quot;:\&quot;SlowSolution.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[23,5]]}]},\&quot;/src/begginerLvevelSecondHalf/SlowStart.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/SlowStart.java\&quot;,\&quot;file_name\&quot;:\&quot;SlowStart.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[31,5]]}]},\&quot;/src/begginerLvevelSecondHalf/Solution.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/Solution.java\&quot;,\&quot;file_name\&quot;:\&quot;Solution.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;morseToEnglish\&quot;,\&quot;method_parameters\&quot;:\&quot;(String morsecode)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;morsecode\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[9,4],[22,5]]},{\&quot;method_name\&quot;:\&quot;findMorseIndex\&quot;,\&quot;method_parameters\&quot;:\&quot;(String code)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;code\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[24,4],[31,5]]}]},\&quot;/src/begginerLvevelSecondHalf/SpellShortening.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/SpellShortening.java\&quot;,\&quot;file_name\&quot;:\&quot;SpellShortening.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[30,5]]}]},\&quot;/src/begginerLvevelSecondHalf/SplitN.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/SplitN.java\&quot;,\&quot;file_name\&quot;:\&quot;SplitN.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[20,9]]}]},\&quot;/src/begginerLvevelSecondHalf/SquareString.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/SquareString.java\&quot;,\&quot;file_name\&quot;:\&quot;SquareString.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[8,5]]}]},\&quot;/src/begginerLvevelSecondHalf/StickBreak.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/StickBreak.java\&quot;,\&quot;file_name\&quot;:\&quot;StickBreak.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[19,5]]}]},\&quot;/src/begginerLvevelSecondHalf/StrangeOperations.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/StrangeOperations.java\&quot;,\&quot;file_name\&quot;:\&quot;StrangeOperations.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[28,5]]}]},\&quot;/src/begginerLvevelSecondHalf/StringGame.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/StringGame.java\&quot;,\&quot;file_name\&quot;:\&quot;StringGame.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[34,5]]}]},\&quot;/src/begginerLvevelSecondHalf/StringProtocol.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/StringProtocol.java\&quot;,\&quot;file_name\&quot;:\&quot;StringProtocol.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[29,5]]}]},\&quot;/src/begginerLvevelSecondHalf/StudingAlphabet.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/StudingAlphabet.java\&quot;,\&quot;file_name\&quot;:\&quot;StudingAlphabet.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[19,5]]},{\&quot;method_name\&quot;:\&quot;setSolution\&quot;,\&quot;method_parameters\&quot;:\&quot;(String s, String w)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;s\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;w\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[25,4],[40,5]]},{\&quot;method_name\&quot;:\&quot;mapSolution\&quot;,\&quot;method_parameters\&quot;:\&quot;(String s, String w)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;s\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;w\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[41,4],[56,5]]},{\&quot;method_name\&quot;:\&quot;arraySolution\&quot;,\&quot;method_parameters\&quot;:\&quot;(String s, String w)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;s\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;w\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[57,4],[70,5]]}]},\&quot;/src/begginerLvevelSecondHalf/Subanagrams.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/Subanagrams.java\&quot;,\&quot;file_name\&quot;:\&quot;Subanagrams.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[15,5]]}]},\&quot;/src/begginerLvevelSecondHalf/SubAndSwap.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/SubAndSwap.java\&quot;,\&quot;file_name\&quot;:\&quot;SubAndSwap.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[13,5]]},{\&quot;method_name\&quot;:\&quot;gcd\&quot;,\&quot;method_parameters\&quot;:\&quot;(int x, int y)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;x\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;y\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[14,4],[19,5]]}]},\&quot;/src/begginerLvevelSecondHalf/SubOrSwap.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/SubOrSwap.java\&quot;,\&quot;file_name\&quot;:\&quot;SubOrSwap.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[14,5]]},{\&quot;method_name\&quot;:\&quot;gcd\&quot;,\&quot;method_parameters\&quot;:\&quot;(int x, int y)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;x\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;y\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[15,4],[22,7]]}]},\&quot;/src/begginerLvevelSecondHalf/SumOfPalindromic.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/SumOfPalindromic.java\&quot;,\&quot;file_name\&quot;:\&quot;SumOfPalindromic.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[20,5]]},{\&quot;method_name\&quot;:\&quot;palindrome\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[21,4],[30,5]]}]},\&quot;/src/begginerLvevelSecondHalf/Superincreasing.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/Superincreasing.java\&quot;,\&quot;file_name\&quot;:\&quot;Superincreasing.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[17,5]]}]},\&quot;/src/begginerLvevelSecondHalf/SwappingChefsWay.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/SwappingChefsWay.java\&quot;,\&quot;file_name\&quot;:\&quot;SwappingChefsWay.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[31,5]]},{\&quot;method_name\&quot;:\&quot;canBeSwapped\&quot;,\&quot;method_parameters\&quot;:\&quot;(char a1, char a2, char b1, char b2)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;char\&quot;,\&quot;name\&quot;:\&quot;a1\&quot;},{\&quot;type\&quot;:\&quot;char\&quot;,\&quot;name\&quot;:\&quot;a2\&quot;},{\&quot;type\&quot;:\&quot;char\&quot;,\&quot;name\&quot;:\&quot;b1\&quot;},{\&quot;type\&quot;:\&quot;char\&quot;,\&quot;name\&quot;:\&quot;b2\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[33,4],[35,5]]}]},\&quot;/src/begginerLvevelSecondHalf/TableStrength.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/TableStrength.java\&quot;,\&quot;file_name\&quot;:\&quot;TableStrength.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[34,5]]}]},\&quot;/src/begginerLvevelSecondHalf/TanuAndHeadBob.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/TanuAndHeadBob.java\&quot;,\&quot;file_name\&quot;:\&quot;TanuAndHeadBob.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[32,5]]}]},\&quot;/src/begginerLvevelSecondHalf/TCSExamination.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/TCSExamination.java\&quot;,\&quot;file_name\&quot;:\&quot;TCSExamination.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[47,5]]}]},\&quot;/src/begginerLvevelSecondHalf/TestingRobot.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/TestingRobot.java\&quot;,\&quot;file_name\&quot;:\&quot;TestingRobot.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[27,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ThatIsMyScore.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ThatIsMyScore.java\&quot;,\&quot;file_name\&quot;:\&quot;ThatIsMyScore.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[29,5]]}]},\&quot;/src/begginerLvevelSecondHalf/TheAttackOfQueen.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/TheAttackOfQueen.java\&quot;,\&quot;file_name\&quot;:\&quot;TheAttackOfQueen.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[23,5]]}]},\&quot;/src/begginerLvevelSecondHalf/TheGreatRun.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/TheGreatRun.java\&quot;,\&quot;file_name\&quot;:\&quot;TheGreatRun.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[38,5]]}]},\&quot;/src/begginerLvevelSecondHalf/TheManCode.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/TheManCode.java\&quot;,\&quot;file_name\&quot;:\&quot;TheManCode.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[13,5]]}]},\&quot;/src/begginerLvevelSecondHalf/TheOneWhereItAllBegan.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/TheOneWhereItAllBegan.java\&quot;,\&quot;file_name\&quot;:\&quot;TheOneWhereItAllBegan.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[17,5]]}]},\&quot;/src/begginerLvevelSecondHalf/TheOneWithRuss.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/TheOneWithRuss.java\&quot;,\&quot;file_name\&quot;:\&quot;TheOneWithRuss.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[33,5]]}]},\&quot;/src/begginerLvevelSecondHalf/TheProductMystery.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/TheProductMystery.java\&quot;,\&quot;file_name\&quot;:\&quot;TheProductMystery.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[16,5]]},{\&quot;method_name\&quot;:\&quot;gcd\&quot;,\&quot;method_parameters\&quot;:\&quot;(long b , long c)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;long\&quot;,\&quot;name\&quot;:\&quot;b\&quot;},{\&quot;type\&quot;:\&quot;long\&quot;,\&quot;name\&quot;:\&quot;c\&quot;}],\&quot;return_type\&quot;:\&quot;long\&quot;,\&quot;scope\&quot;:[[18,4],[23,5]]},{\&quot;method_name\&quot;:\&quot;minA\&quot;,\&quot;method_parameters\&quot;:\&quot;(int b, int c)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;b\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;c\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[24,4],[30,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ThreeBoxes.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ThreeBoxes.java\&quot;,\&quot;file_name\&quot;:\&quot;ThreeBoxes.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[20,5]]},{\&quot;method_name\&quot;:\&quot;removeDuplicates\&quot;,\&quot;method_parameters\&quot;:\&quot;(int nums[])\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;nums\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[21,4],[30,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ThreeDices.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ThreeDices.java\&quot;,\&quot;file_name\&quot;:\&quot;ThreeDices.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[14,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ThreeFriends.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ThreeFriends.java\&quot;,\&quot;file_name\&quot;:\&quot;ThreeFriends.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[15,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ThreeWayCommunications.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ThreeWayCommunications.java\&quot;,\&quot;file_name\&quot;:\&quot;ThreeWayCommunications.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[6,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ToDivideNotToDivide.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ToDivideNotToDivide.java\&quot;,\&quot;file_name\&quot;:\&quot;ToDivideNotToDivide.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[11,5]]}]},\&quot;/src/begginerLvevelSecondHalf/TraceOfMatrix.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/TraceOfMatrix.java\&quot;,\&quot;file_name\&quot;:\&quot;TraceOfMatrix.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[32,5]]}]},\&quot;/src/begginerLvevelSecondHalf/TrainPartner.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/TrainPartner.java\&quot;,\&quot;file_name\&quot;:\&quot;TrainPartner.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[38,5]]}]},\&quot;/src/begginerLvevelSecondHalf/TransfusionChain.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/TransfusionChain.java\&quot;,\&quot;file_name\&quot;:\&quot;TransfusionChain.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[39,5]]},{\&quot;method_name\&quot;:\&quot;titleToNumber\&quot;,\&quot;method_parameters\&quot;:\&quot;(String A)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;A\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[41,4],[50,5]]},{\&quot;method_name\&quot;:\&quot;findMedian\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] A)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;A\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[52,4],[62,5]]}]},\&quot;/src/begginerLvevelSecondHalf/TravelPass.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/TravelPass.java\&quot;,\&quot;file_name\&quot;:\&quot;TravelPass.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[26,5]]}]},\&quot;/src/begginerLvevelSecondHalf/TrickORTreat.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/TrickORTreat.java\&quot;,\&quot;file_name\&quot;:\&quot;TrickORTreat.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[8,4],[36,5]]},{\&quot;method_name\&quot;:\&quot;minimumDistance\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] arr, String book1, String book2)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;book1\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;book2\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[37,4],[55,5]]}]},\&quot;/src/begginerLvevelSecondHalf/TruthAndDare.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/TruthAndDare.java\&quot;,\&quot;file_name\&quot;:\&quot;TruthAndDare.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[51,5]]}]},\&quot;/src/begginerLvevelSecondHalf/TruthTellerAndLiars.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/TruthTellerAndLiars.java\&quot;,\&quot;file_name\&quot;:\&quot;TruthTellerAndLiars.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[17,5]]}]},\&quot;/src/begginerLvevelSecondHalf/TwoDifferentPalindromes.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/TwoDifferentPalindromes.java\&quot;,\&quot;file_name\&quot;:\&quot;TwoDifferentPalindromes.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[18,5]]}]},\&quot;/src/begginerLvevelSecondHalf/TwoTrains.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/TwoTrains.java\&quot;,\&quot;file_name\&quot;:\&quot;TwoTrains.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[18,5]]},{\&quot;method_name\&quot;:\&quot;generateFibonacciNumbers\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[19,4],[34,5]]}]},\&quot;/src/begginerLvevelSecondHalf/UncleJohny.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/UncleJohny.java\&quot;,\&quot;file_name\&quot;:\&quot;UncleJohny.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[39,5]]}]},\&quot;/src/begginerLvevelSecondHalf/UpsAndDowns.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/UpsAndDowns.java\&quot;,\&quot;file_name\&quot;:\&quot;UpsAndDowns.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[8,4],[39,5]]},{\&quot;method_name\&quot;:\&quot;monthsUntilCrowded\&quot;,\&quot;method_parameters\&quot;:\&quot;(int tankVolume, int maleNum, int femaleNum )\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;tankVolume\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;maleNum\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;femaleNum\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[40,4],[58,5]]}]},\&quot;/src/begginerLvevelSecondHalf/VaccineDistribution.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/VaccineDistribution.java\&quot;,\&quot;file_name\&quot;:\&quot;VaccineDistribution.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[25,5]]},{\&quot;method_name\&quot;:\&quot;removeDuplicates\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] nums)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;nums\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[26,4],[36,5]]},{\&quot;method_name\&quot;:\&quot;longestPalindrome\&quot;,\&quot;method_parameters\&quot;:\&quot;(String s)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;s\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[37,4],[56,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ValentineGifts.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ValentineGifts.java\&quot;,\&quot;file_name\&quot;:\&quot;ValentineGifts.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[17,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ValidMinimum.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ValidMinimum.java\&quot;,\&quot;file_name\&quot;:\&quot;ValidMinimum.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[21,5]]}]},\&quot;/src/begginerLvevelSecondHalf/WeaponChoice.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/WeaponChoice.java\&quot;,\&quot;file_name\&quot;:\&quot;WeaponChoice.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[38,5]]}]},\&quot;/src/begginerLvevelSecondHalf/WeaponValue.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/WeaponValue.java\&quot;,\&quot;file_name\&quot;:\&quot;WeaponValue.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[33,5]]}]},\&quot;/src/begginerLvevelSecondHalf/Weeding.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/Weeding.java\&quot;,\&quot;file_name\&quot;:\&quot;Weeding.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[24,5]]}]},\&quot;/src/begginerLvevelSecondHalf/WeirdModuloProblem.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/WeirdModuloProblem.java\&quot;,\&quot;file_name\&quot;:\&quot;WeirdModuloProblem.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[26,5]]}]},\&quot;/src/begginerLvevelSecondHalf/WorldRecord.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/WorldRecord.java\&quot;,\&quot;file_name\&quot;:\&quot;WorldRecord.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[20,5]]}]},\&quot;/src/begginerLvevelSecondHalf/XennyAndAlternatingTasks.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/XennyAndAlternatingTasks.java\&quot;,\&quot;file_name\&quot;:\&quot;XennyAndAlternatingTasks.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[8,4],[38,5]]}]},\&quot;/src/begginerLvevelSecondHalf/XorPalindrome.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/XorPalindrome.java\&quot;,\&quot;file_name\&quot;:\&quot;XorPalindrome.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[22,5]]}]},\&quot;/src/begginerLvevelSecondHalf/YogaClass.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/YogaClass.java\&quot;,\&quot;file_name\&quot;:\&quot;YogaClass.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[20,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ZeroOnesEqualOneZeros.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ZeroOnesEqualOneZeros.java\&quot;,\&quot;file_name\&quot;:\&quot;ZeroOnesEqualOneZeros.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[15,5]]}]},\&quot;/src/begginerLvevelSecondHalf/ZeroString.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLvevelSecondHalf/ZeroString.java\&quot;,\&quot;file_name\&quot;:\&quot;ZeroString.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;checkOperations\&quot;,\&quot;method_parameters\&quot;:\&quot;(String s,int n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;s\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[8,4],[26,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[27,4],[39,5]]}]},\&quot;/src/contest/ChessOlympaid.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/contest/ChessOlympaid.java\&quot;,\&quot;file_name\&quot;:\&quot;ChessOlympaid.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[26,5]]}]},\&quot;/src/contest/IOI.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/contest/IOI.java\&quot;,\&quot;file_name\&quot;:\&quot;IOI.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[16,5]]}]},\&quot;/src/contest/LuckyClover.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/contest/LuckyClover.java\&quot;,\&quot;file_name\&quot;:\&quot;LuckyClover.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[14,5]]}]},\&quot;/src/contest/makeBobWin.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/contest/makeBobWin.java\&quot;,\&quot;file_name\&quot;:\&quot;makeBobWin.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[29,5]]}]},\&quot;/src/contest/NearlyEqual.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/contest/NearlyEqual.java\&quot;,\&quot;file_name\&quot;:\&quot;NearlyEqual.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[21,5]]},{\&quot;method_name\&quot;:\&quot;calculateHammingDistance\&quot;,\&quot;method_parameters\&quot;:\&quot;(String str1, String str2)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;str1\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;str2\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[24,4],[32,5]]}]},\&quot;/src/contest/NonPrimes101.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/contest/NonPrimes101.java\&quot;,\&quot;file_name\&quot;:\&quot;NonPrimes101.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[13,5]]}]},\&quot;/src/contest/RangeMinimze.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/contest/RangeMinimze.java\&quot;,\&quot;file_name\&quot;:\&quot;RangeMinimze.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;RangeMinimze\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[10,4],[35,5]]},{\&quot;method_name\&quot;:\&quot;paintComponent\&quot;,\&quot;method_parameters\&quot;:\&quot;(Graphics g)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Graphics\&quot;,\&quot;name\&quot;:\&quot;g\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[18,12],[22,13]]},{\&quot;method_name\&quot;:\&quot;drawLoadingAnimation\&quot;,\&quot;method_parameters\&quot;:\&quot;(Graphics g)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Graphics\&quot;,\&quot;name\&quot;:\&quot;g\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[36,4],[56,5]]},{\&quot;method_name\&quot;:\&quot;drawArrow\&quot;,\&quot;method_parameters\&quot;:\&quot;(Graphics g, int x, int y, int size)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Graphics\&quot;,\&quot;name\&quot;:\&quot;g\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;x\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;y\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;size\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[57,4],[62,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[63,4],[101,5]]}]},\&quot;/src/contest/RatioByTwo.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/contest/RatioByTwo.java\&quot;,\&quot;file_name\&quot;:\&quot;RatioByTwo.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;solve\&quot;,\&quot;method_parameters\&quot;:\&quot;(FastReader cin, CustomPrintStream ps)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;FastReader\&quot;,\&quot;name\&quot;:\&quot;cin\&quot;},{\&quot;type\&quot;:\&quot;CustomPrintStream\&quot;,\&quot;name\&quot;:\&quot;ps\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[10,4],[30,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[31,4],[35,5]]},{\&quot;method_name\&quot;:\&quot;cout\&quot;,\&quot;method_parameters\&quot;:\&quot;(Object x)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Object\&quot;,\&quot;name\&quot;:\&quot;x\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[36,4],[38,5]]},{\&quot;method_name\&quot;:\&quot;FastReader\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[43,8],[45,9]]},{\&quot;method_name\&quot;:\&quot;next\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[47,8],[56,9]]},{\&quot;method_name\&quot;:\&quot;nextInt\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[58,8],[60,9]]},{\&quot;method_name\&quot;:\&quot;nextLong\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;long\&quot;,\&quot;scope\&quot;:[[62,8],[64,9]]},{\&quot;method_name\&quot;:\&quot;nextDouble\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;double\&quot;,\&quot;scope\&quot;:[[66,8],[68,9]]},{\&quot;method_name\&quot;:\&quot;nextLine\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[70,8],[78,9]]},{\&quot;method_name\&quot;:\&quot;CustomPrintStream\&quot;,\&quot;method_parameters\&quot;:\&quot;(OutputStream out)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;OutputStream\&quot;,\&quot;name\&quot;:\&quot;out\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[82,8],[84,9]]},{\&quot;method_name\&quot;:\&quot;yes\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[86,8],[88,9]]},{\&quot;method_name\&quot;:\&quot;no\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[90,8],[92,9]]}]},\&quot;/src/contest/RedundantArray.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/contest/RedundantArray.java\&quot;,\&quot;file_name\&quot;:\&quot;RedundantArray.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[38,9]]}]},\&quot;/src/contest/TruthTellerAndLiars.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/contest/TruthTellerAndLiars.java\&quot;,\&quot;file_name\&quot;:\&quot;TruthTellerAndLiars.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[19,5]]}]},\&quot;/src/DSAPreparetion1/ColorTheCube.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/DSAPreparetion1/ColorTheCube.java\&quot;,\&quot;file_name\&quot;:\&quot;ColorTheCube.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[24,5]]}]},\&quot;/src/DSAPreparetion1/LuckyNumber.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/DSAPreparetion1/LuckyNumber.java\&quot;,\&quot;file_name\&quot;:\&quot;LuckyNumber.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[25,9]]}]},\&quot;/src/DSAPreparetion1/NumberOfRectangles.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/DSAPreparetion1/NumberOfRectangles.java\&quot;,\&quot;file_name\&quot;:\&quot;NumberOfRectangles.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[21,5]]},{\&quot;method_name\&quot;:\&quot;solve\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[23,4],[40,5]]}]},\&quot;/src/DSAPreparetion1/Palindrome.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/DSAPreparetion1/Palindrome.java\&quot;,\&quot;file_name\&quot;:\&quot;Palindrome.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[18,5]]},{\&quot;method_name\&quot;:\&quot;isPalindrome\&quot;,\&quot;method_parameters\&quot;:\&quot;(String s)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;s\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[19,4],[31,5]]},{\&quot;method_name\&quot;:\&quot;rotateMatrix\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[][] matrix)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;matrix\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[32,4],[44,5]]}]},\&quot;/src/DSAPreparetion1/PixelDamage.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/DSAPreparetion1/PixelDamage.java\&quot;,\&quot;file_name\&quot;:\&quot;PixelDamage.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[32,5]]}]},\&quot;/src/DSAPreparetion1/TaxiCost.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/DSAPreparetion1/TaxiCost.java\&quot;,\&quot;file_name\&quot;:\&quot;TaxiCost.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[36,5]]}]},\&quot;/src/DSAPreparetion1/ThreeNumberExpression.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/DSAPreparetion1/ThreeNumberExpression.java\&quot;,\&quot;file_name\&quot;:\&quot;ThreeNumberExpression.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[24,5]]}]},\&quot;/src/matrix/SpiralMatrix.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/matrix/SpiralMatrix.java\&quot;,\&quot;file_name\&quot;:\&quot;SpiralMatrix.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[8,5]]},{\&quot;method_name\&quot;:\&quot;containsDuplicate\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] nums)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;nums\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[9,4],[21,5]]}]},\&quot;/src/prepareDSAInterviews/basicProgrammingOne/FindInteger.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/prepareDSAInterviews/basicProgrammingOne/FindInteger.java\&quot;,\&quot;file_name\&quot;:\&quot;FindInteger.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[24,5]]}]},\&quot;/src/prepareDSAInterviews/basicProgrammingOne/NumberOfRectangles.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/prepareDSAInterviews/basicProgrammingOne/NumberOfRectangles.java\&quot;,\&quot;file_name\&quot;:\&quot;NumberOfRectangles.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[15,5]]}]},\&quot;/src/prepareDSAInterviews/ReverseTheLinkedList.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/prepareDSAInterviews/ReverseTheLinkedList.java\&quot;,\&quot;file_name\&quot;:\&quot;ReverseTheLinkedList.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Node\&quot;,\&quot;method_parameters\&quot;:\&quot;(int val)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;val\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[6,4],[8,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[13,8],[15,9]]},{\&quot;method_name\&quot;:\&quot;solve\&quot;,\&quot;method_parameters\&quot;:\&quot;(Node head)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Node\&quot;,\&quot;name\&quot;:\&quot;head\&quot;}],\&quot;return_type\&quot;:\&quot;Node\&quot;,\&quot;scope\&quot;:[[16,8],[33,9]]}]},\&quot;/src/string/InvertAndEqualize.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/string/InvertAndEqualize.java\&quot;,\&quot;file_name\&quot;:\&quot;InvertAndEqualize.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;countOperations\&quot;,\&quot;method_parameters\&quot;:\&quot;(String S)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;S\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[5,4],[22,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[23,4],[39,5]]}]},\&quot;/src/string/PlayingWithStrings.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/string/PlayingWithStrings.java\&quot;,\&quot;file_name\&quot;:\&quot;PlayingWithStrings.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[26,5]]}]},\&quot;/src/begginerLevelSecond.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/begginerLevelSecond.java\&quot;,\&quot;file_name\&quot;:\&quot;begginerLevelSecond.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/Main.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/Main.java\&quot;,\&quot;file_name\&quot;:\&quot;Main.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[12,5]]}]},\&quot;/README.md\&quot;:{\&quot;file_path\&quot;:\&quot;/README.md\&quot;,\&quot;file_name\&quot;:\&quot;README.md\&quot;,\&quot;methods\&quot;:[]}}&quot;}" />
  </component>
</project>